{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"游戏开发\" category",
    "description": "学习的过程大概就是学了忘,忘了学，抽空多停下来总结，不要冲的太前。",
    "home_page_url": "https://www.fasty97.top",
    "items": [
        {
            "id": "https://www.fasty97.top/2024/04/03/NodeCanvas%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%91/",
            "url": "https://www.fasty97.top/2024/04/03/NodeCanvas%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%91/",
            "title": "NodeCanvas自定义图树",
            "date_published": "2024-04-03T01:21:52.000Z",
            "content_html": "<blockquote>\n<p><code>NodeCanvas</code>  是一款很棒的插件，包含了行为树、对话树、状态机等数据结构，提供可视化的图形服务，依此我们可以扩展一种 <code>FlowTree</code>  的流式图。</p>\n</blockquote>\n<h2 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h2>\n<h3 id=\"flowtree\"><a class=\"markdownIt-Anchor\" href=\"#flowtree\">#</a> FlowTree</h3>\n<p>FlowTree 是我想要实现的一种数据结构，即流程树结构；在流程树中的所有节点会根据检查条件选择适合的分支依次执行。这其实和官方提供的 <code>DialogTree</code>  对话树的逻辑是差不多的；但是在对话树基本节点是对话节点。</p>\n<p>为了能够执行一些列操作，而这一些操作可能包含对话也可能只是纯粹的 Action，故而需要一种新的流程树形式。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202404031031392.png\" alt=\"image-20240403103133264\"></p>\n<p class=\"yellow\">从上图中可以看出，我们可以不再依赖于对话节点，我们可以 行为、条件、子图作为起始，也可以根据这些元素作为结尾任意的连接数据。</p>\n<h2 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\">#</a> 实现</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202404030935948.png\" alt=\"目录结构\"></p>\n<p>以上是一个基本树的目录组成结构，分别包括：</p>\n<ul>\n<li><ins>FlowTreeOwner</ins> 树持有者，继承自 <code>MonoBehaviour</code></li>\n<li><ins>FlowTree</ins> 树数据，继承自 <code>Graph</code></li>\n<li><ins>FTNode</ins> 基础节点数据，继承自 <code>Node</code></li>\n<li><ins>FTConnection</ins> 基础连接数据，继承自 <code>Connection</code></li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FlowTreeOwner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FlowTreeOwner</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GraphOwner<span class=\"token punctuation\">&lt;</span>FlowTree<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FlowTree</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"ParadoxNotion/NodeCanvas/Flow Tree Asset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FlowTree</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Graph</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Type</span> baseNodeType <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">FTNode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> requiresAgent <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> requiresPrimeNode <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> isTree <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">PlanarDirection</span> flowDirection <span class=\"token operator\">=></span> PlanarDirection<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> allowBlackboardOverrides <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> canAcceptVariableDrops <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _intTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _updateTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Status</span> _rootStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">FTNode</span> _currentNode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGraphStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"FlowTree </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 启动\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        _currentNode <span class=\"token operator\">=</span> primeNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span>_currentNode <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">?</span> _currentNode <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>FTNode<span class=\"token punctuation\">)</span>primeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGraphUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> _currentNode <span class=\"token keyword\">is</span> <span class=\"token class-name\">IUpdatable</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">(</span> _currentNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">IUpdatable</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">?.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGraphStoped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        _currentNode <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> index <span class=\"token operator\">></span> _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Success<span class=\"token punctuation\">;</span> <span class=\"token comment\">//editor vis</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>targetNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FTNode</span> node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        _currentNode <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        _currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">,</span> blackboard<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FTNode</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FTNode</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Node</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> maxInConnections <span class=\"token operator\">=></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> maxOutConnections <span class=\"token operator\">=></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Type</span> outConnectionType <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">FTConnection</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> allowAsPrime <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> canSelfConnect <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Alignment2x2</span> commentsAlignment <span class=\"token operator\">=></span> Alignment2x2<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Alignment2x2</span> iconAlignment <span class=\"token operator\">=></span> Alignment2x2<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/// 流程树</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">FlowTree</span> FlowTree <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>FlowTree<span class=\"token punctuation\">)</span>graph<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNodeInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnNodeInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">UnityEditor<span class=\"token punctuation\">.</span>GenericMenu</span> <span class=\"token function\">OnContextMenu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>GenericMenu</span> menu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            menu<span class=\"token punctuation\">.</span><span class=\"token function\">AddItem</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Breakpoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> isBreakpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> isBreakpoint <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>isBreakpoint<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> menu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FTConnection</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FTConnection</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">Connection</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"树步进和条件\"><a class=\"markdownIt-Anchor\" href=\"#树步进和条件\">#</a> 树步进和条件</h3>\n<p>有了数据结构还不行，我们还需要让数据按我们期望的方式流转起来，其实也就是我们需要告诉我们的树何时应该执行下一步。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>树步进</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> index <span class=\"token operator\">></span> _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Success<span class=\"token punctuation\">;</span> <span class=\"token comment\">//editor vis</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>targetNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FTNode</span> node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _currentNode <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">,</span> blackboard<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 FlowTree 中有这样一个方法用于控制树步进，传入一个 index 代表选择的链接分支索引，用于进入下一个节点，如果节点返回失败则停止图，如果成功则进入下一个。</p>\n<blockquote>\n<p>我们需要在所有需要进入下一个节点的地方调用 <code>GoNext</code></p>\n</blockquote>\n<p>例如当 Action 节点执行完时:</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnActionEnd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> success <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Success<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例如当条件节点执行完时：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Status</span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Component</span> agent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IBlackboard</span> bb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There are no connections on the Dialogue Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Condition <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There is no Conidition on the Dialoge Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> isSuccess <span class=\"token operator\">=</span> Condition<span class=\"token punctuation\">.</span><span class=\"token function\">CheckOnce</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> graphBlackboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    status <span class=\"token operator\">=</span> isSuccess <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span>status<span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例如当子图执行完成时：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDLGFinished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        status <span class=\"token operator\">=</span> success <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 让流程树继续</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>对于条件节点的处理，我们只需要提供一个 <code>ConditionTask</code>  用于处理即可：</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>ConditionNode</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">global</span><span class=\"token punctuation\">::</span>ParadoxNotion<span class=\"token punctuation\">.</span>Design<span class=\"token punctuation\">.</span><span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Condition\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Color</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"b3ff7f\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConditionNode</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ITaskAssignable<span class=\"token punctuation\">&lt;</span>ConditionTask<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">ConditionTask</span> _condition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ConditionTask</span> Condition</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> _condition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> _condition <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task</span> task</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> Condition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> Condition <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ConditionTask<span class=\"token punctuation\">)</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> maxOutConnections <span class=\"token operator\">=></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Status</span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Component</span> agent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IBlackboard</span> bb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There are no connections on the Dialogue Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Condition <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There is no Conidition on the Dialoge Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> isSuccess <span class=\"token operator\">=</span> Condition<span class=\"token punctuation\">.</span><span class=\"token function\">CheckOnce</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> graphBlackboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            status <span class=\"token operator\">=</span> isSuccess <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span>status<span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetConnectionInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">return</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">?</span> <span class=\"token string\">\"Then\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"Else\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"子图外接图\"><a class=\"markdownIt-Anchor\" href=\"#子图外接图\">#</a> 子图 / 外接图</h3>\n<blockquote>\n<p>对于子图来说，其实也是属于一个节点，所以本质是继承自 <code>FTNode</code> 。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FTNodeNested</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Category</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"SubGraphs\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Color</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"ffe4e1\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FTNodeNested<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IGraphAssignable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Graph</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>BBMappingParameter<span class=\"token punctuation\">></span></span> _variablesMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\">BBParameter</span> subGraphParameter <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">T</span> currentInstance <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\">T</span> subGraph <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token return-type class-name\">Graph</span> IGraphAssignable<span class=\"token punctuation\">.</span>currentInstance <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> currentInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> currentInstance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token return-type class-name\">Graph</span> IGraphAssignable<span class=\"token punctuation\">.</span>subGraph <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> subGraph<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> subGraph <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Dictionary<span class=\"token punctuation\">&lt;</span>Graph<span class=\"token punctuation\">,</span> Graph<span class=\"token punctuation\">></span></span> instances <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>BBMappingParameter<span class=\"token punctuation\">></span></span> variablesMap <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> _variablesMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> _variablesMap <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里我们考虑使 FlowTree 中可以接入子图 <code>DialogTree</code> :</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>NestedDT</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Name</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sub Dialogue\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Description</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Executes a sub Dialogue Tree. Returns Running while the sub Dialogue Tree is active. You can Finish the Dialogue Tree with the 'Finish' node and return Success or Failure.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">global</span><span class=\"token punctuation\">::</span>ParadoxNotion<span class=\"token punctuation\">.</span>Design<span class=\"token punctuation\">.</span><span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dialogue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropReferenceType</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">DialogueTree</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NestedDT</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FTNodeNested<span class=\"token punctuation\">&lt;</span>DialogueTree<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExposeField</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Name</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sub Tree\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">BBParameter<span class=\"token punctuation\">&lt;</span>DialogueTree<span class=\"token punctuation\">></span></span> _nestedDialogueTree <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">DialogueTree</span> subGraph</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> _nestedDialogueTree<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> _nestedDialogueTree<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">BBParameter</span> subGraphParameter <span class=\"token operator\">=></span> _nestedDialogueTree<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Status</span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Component</span> agent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IBlackboard</span> blackboard<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>subGraph <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> subGraph<span class=\"token punctuation\">.</span>primeNode <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">return</span> Status<span class=\"token punctuation\">.</span>Optional<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Resting<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">TryStartSubGraph</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">,</span> OnDLGFinished<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            currentInstance<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateGraph</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>graph<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDLGFinished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            status <span class=\"token operator\">=</span> success <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 让流程树继续</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnReset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentInstance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            currentInstance<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "行为树"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/07/14/HyBridCLR/",
            "url": "https://www.fasty97.top/2023/07/14/HyBridCLR/",
            "title": "HyBridCLR 初体验",
            "date_published": "2023-07-14T02:36:30.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th>版本号</th>\n<th>创建 / 更新时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>V1.0</td>\n<td>2023-07-14 10:36:30</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307141042564.png\" alt=\"image-20230714104235475\"></p>\n",
            "tags": [
                "热更新",
                "代码",
                "框架"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/07/13/YooAssets%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2023/07/13/YooAssets%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "YooAssets初体验",
            "date_published": "2023-07-13T01:10:43.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th>版本号</th>\n<th>创建 / 更新时间</th>\n<th>操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>V1.0</td>\n<td>2023-07-13 09:10:43</td>\n<td>创建</td>\n</tr>\n<tr>\n<td>V1.1</td>\n<td>2023-07-19 09:33:17</td>\n<td>添加着色器变体说明</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><code>YooAssets</code>  是一个资源管理工具，基于 ab 包实现。</p>\n<p>通过 <code>YooAssets</code>  可以方便的对资源进行管理、分析、更新。</p>\n</blockquote>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<p>打开管理界面 <strong>Edit/Project Settings/Package Manager</strong></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 输入以下内容（中国版）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">package<span class=\"token punctuation\">.</span>openupm<span class=\"token punctuation\">.</span>cn</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>URL<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token return-type class-name\">package<span class=\"token punctuation\">.</span>openupm<span class=\"token punctuation\">.</span>cn</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> com<span class=\"token punctuation\">.</span>tuyoogame<span class=\"token punctuation\">.</span>yooasset</pre></td></tr></table></figure><p>在包管理器中安装 YooAssets</p>\n<h3 id=\"划分组别\"><a class=\"markdownIt-Anchor\" href=\"#划分组别\">#</a> 划分组别</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140936034.png\" alt=\"image-20230714093639774\"></p>\n<h3 id=\"构建工具\"><a class=\"markdownIt-Anchor\" href=\"#构建工具\">#</a> 构建工具</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140940872.png\" alt=\"image-20230714093947222\"></p>\n<h3 id=\"报告工具\"><a class=\"markdownIt-Anchor\" href=\"#报告工具\">#</a> 报告工具</h3>\n<p>在打包后可以使用报告工具查看相关数据：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140941088.png\" alt=\"image-20230714094110038\"></p>\n<h2 id=\"调试工具\"><a class=\"markdownIt-Anchor\" href=\"#调试工具\">#</a> 调试工具</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140943294.png\" alt=\"image-20230714094332240\"></p>\n<h2 id=\"模式\"><a class=\"markdownIt-Anchor\" href=\"#模式\">#</a> 模式</h2>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>编辑器模式 EditorSimulateMode</td>\n<td>无需构建，直接使用</td>\n</tr>\n<tr>\n<td>离线模式 OfflinePlayMode</td>\n<td>单机游戏使用</td>\n</tr>\n<tr>\n<td>在线模式 HostPlayMode</td>\n<td>在线游戏热更新</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"代码范例\"><a class=\"markdownIt-Anchor\" href=\"#代码范例\">#</a> 代码范例</h2>\n<h3 id=\"封装资源加载\"><a class=\"markdownIt-Anchor\" href=\"#封装资源加载\">#</a> 封装资源加载</h3>\n<blockquote>\n<p>我们可以对通用资源加载进行封装，使用 1 行代码实现资源加载。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>封装资源加载</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token generic-method\"><span class=\"token function\">LoadAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token keyword\">class</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_package<span class=\"token punctuation\">.</span><span class=\"token function\">CheckLocationValid</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> handle <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">LoadAssetAsync</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">await</span> handle<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> handle<span class=\"token punctuation\">.</span>AssetObject <span class=\"token keyword\">as</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">key</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 資源尋址地址錯誤！\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"通用示例\"><a class=\"markdownIt-Anchor\" href=\"#通用示例\">#</a> 通用示例</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Scenes<span class=\"token punctuation\">.</span>YooTest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Sirenix<span class=\"token punctuation\">.</span>OdinInspector</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>SceneManagement</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">YooAsset</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">YooAssetTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ResourcePackage</span> _package<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> PackName <span class=\"token operator\">=</span> <span class=\"token string\">\"DefaultPackage\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">EPlayMode</span> playMode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        YooAssets<span class=\"token punctuation\">.</span><span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        _package <span class=\"token operator\">=</span> YooAssets<span class=\"token punctuation\">.</span><span class=\"token function\">CreatePackage</span><span class=\"token punctuation\">(</span>PackName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        YooAssets<span class=\"token punctuation\">.</span><span class=\"token function\">SetDefaultPackage</span><span class=\"token punctuation\">(</span>_package<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">InitializationOperation</span> hand<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>playMode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">case</span> EPlayMode<span class=\"token punctuation\">.</span>EditorSimulateMode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token comment\">// 編輯器模式</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EditorSimulateModeParameters</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    SimulateManifestFilePath <span class=\"token operator\">=</span> EditorSimulateModeHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SimulateBuild</span><span class=\"token punctuation\">(</span>PackName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                hand <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeAsync</span><span class=\"token punctuation\">(</span>sm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">await</span> hand<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">case</span> EPlayMode<span class=\"token punctuation\">.</span>OfflinePlayMode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 離線模式</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                hand <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OfflinePlayModeParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">await</span> hand<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">case</span> EPlayMode<span class=\"token punctuation\">.</span>HostPlayMode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token comment\">// 在線模式</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> hs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HostPlayModeParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span> QueryServices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">YooHostQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RemoteServices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">YooRemote</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                hand <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeAsync</span><span class=\"token punctuation\">(</span>hs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">await</span> hand<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hand<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"资源包初始化成功！当前资源版本:\"</span><span class=\"token operator\">+</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">GetPackageVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源包初始化失败：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">hand<span class=\"token punctuation\">.</span>Error</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">HostLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">HostLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">// 檢查版本</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> upHandle <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">UpdatePackageVersionAsync</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 關閉時間戳</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> upHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>upHandle<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token comment\">// 更新成功</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> packageVersion <span class=\"token operator\">=</span> upHandle<span class=\"token punctuation\">.</span>PackageVersion<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"已获取到最新版本号 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">packageVersion</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            HotConfig<span class=\"token punctuation\">.</span>NewVision <span class=\"token operator\">=</span> packageVersion<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token comment\">// 更新失败</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span>upHandle<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\">// 更新資源</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> upAssetHandle <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">UpdatePackageManifestAsync</span><span class=\"token punctuation\">(</span>upHandle<span class=\"token punctuation\">.</span>PackageVersion<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> upAssetHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>upAssetHandle<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新失敗：\"</span> <span class=\"token operator\">+</span> upAssetHandle<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> downloadingMaxNum <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> failedTryAgain <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> package <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> downloader <span class=\"token operator\">=</span> package<span class=\"token punctuation\">.</span><span class=\"token function\">CreateResourceDownloader</span><span class=\"token punctuation\">(</span>downloadingMaxNum<span class=\"token punctuation\">,</span> failedTryAgain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"需要下载的资源数量：\"</span><span class=\"token operator\">+</span>downloader<span class=\"token punctuation\">.</span>TotalDownloadCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token comment\">// 没有需要下载的资源</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>downloader<span class=\"token punctuation\">.</span>TotalDownloadCount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token comment\">// 需要下载的文件总数和总大小</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> totalDownloadCount <span class=\"token operator\">=</span> downloader<span class=\"token punctuation\">.</span>TotalDownloadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">long</span></span> totalDownloadBytes <span class=\"token operator\">=</span> downloader<span class=\"token punctuation\">.</span>TotalDownloadBytes<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token comment\">// 注册回调方法</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnDownloadErrorCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载资源出错！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnDownloadProgressCallback <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前下载进度：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnDownloadOverCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnStartDownloadFileCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始下载\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token comment\">// 开启下载</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span><span class=\"token function\">BeginDownload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> downloader<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token comment\">// 检测下载结果</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>downloader<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            <span class=\"token comment\">// 下载成功</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            <span class=\"token comment\">// 下载失败</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载失败：\"</span><span class=\"token operator\">+</span>downloader<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token generic-method\"><span class=\"token function\">LoadAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UI/Image\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateCube</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> g<span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token generic-method\"><span class=\"token function\">LoadAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UI/Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LoadScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sc <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">LoadSceneAsync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scene_1\"</span><span class=\"token punctuation\">,</span> LoadSceneMode<span class=\"token punctuation\">.</span>Additive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token keyword\">await</span> sc<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"着色器变体收集\"><a class=\"markdownIt-Anchor\" href=\"#着色器变体收集\">#</a> 着色器变体收集</h2>\n<h3 id=\"什么是着色器变体\"><a class=\"markdownIt-Anchor\" href=\"#什么是着色器变体\">#</a> 什么是着色器变体</h3>\n<blockquote>\n<p>当我们写完一个 shader 以后，unity 需要加载和编译，这个过程由着色器的构建管线来完成，它的输入是着色器，而它的输出就是今天的主角 — 着色器变体；每一个着色器进入构建管线后会被解析，然后提取着色器片段（顶点着色器和片元着色器等），收集预处理指令，然后每一个着色器变体会有一个参数表；<br>\n————————————————<br>\n 版权声明：本文为 CSDN 博主「莫之」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>\n原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MzgzNjIzL2FydGljbGUvZGV0YWlscy8xMDMzMjczODk=\">https://blog.csdn.net/qq_36383623/article/details/103327389</span></p>\n</blockquote>\n<h3 id=\"yooasset-收集着色器变体\"><a class=\"markdownIt-Anchor\" href=\"#yooasset-收集着色器变体\">#</a> YooAsset 收集着色器变体</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307190950490.png\" alt=\"image-20230719095020282\"></p>\n<blockquote>\n<p>收集的着色器变体文件需要打包进 AB 中，在 AB 中加载。</p>\n</blockquote>\n<h2 id=\"配合unitycdn使用\"><a class=\"markdownIt-Anchor\" href=\"#配合unitycdn使用\">#</a> 配合 UnityCDN 使用</h2>\n<blockquote>\n<p>PS：YooAsset 通过获取版本号，再更新对应版本资源。</p>\n<p>故可以将获取补丁文件的路径设置为动态的，通过获取到的版本号来获取对应资源，有利于资源在 CDN 的存储结构。</p>\n</blockquote>\n<ol>\n<li>创建一个 Bucket 存储池：</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140956218.png\" alt=\"image-20230714095638150\"></p>\n<ol start=\"2\">\n<li>下载相关 Unity 插件</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140958953.png\" alt=\"image-20230714095811900\"></p>\n<ol start=\"3\">\n<li>填写好相关 key</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140959349.png\" alt=\"\"></p>\n<ol start=\"4\">\n<li>上传相关文件</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307141001266.png\" alt=\"image-20230714100120217\"></p>\n<h2 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW9vYXNzZXQuY29tLw==\">Hello from YooAsset | YooAsset</span></li>\n<li>+<span class=\"exturl\" data-url=\"aHR0cHM6Ly91b3MudW5pdHkuY24vYXBwcw==\">UOS Developer Portal (unity.cn)</span></li>\n</ul>\n",
            "tags": [
                "热更新",
                "资源管理"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/05/10/%E5%9C%A8Unity%E4%BD%BF%E7%94%A8SqlLite/",
            "url": "https://www.fasty97.top/2023/05/10/%E5%9C%A8Unity%E4%BD%BF%E7%94%A8SqlLite/",
            "title": "在Unity使用SqlLite",
            "date_published": "2023-05-10T01:36:00.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<p>在游戏存储中我们可以使用多种方法，json、二进制、xml、csv、excel、或者是文本、自定义格式等等。使用这些的时候我们基本都需要将文件整个读入内存中，那有没有一种办法可以不用将所有数据载入内存呢？</p>\n<p>答案就是 ———— 使用<ins>数据库</ins>。</p>\n<p>数据库的种类很多，大都都服务于网络服务，在单机游戏中使用数据库的话，可以选择 sqllite。</p>\n<h2 id=\"sqllite\"><a class=\"markdownIt-Anchor\" href=\"#sqllite\">#</a> SqlLite</h2>\n<p>sqllite 是一种轻量的文件型数据库，整个数据库只有一个 <code>.db文件</code> 而且其使用范围非常广，支持的平台多，是我们在使用 Unity 开发单机游戏时的好选择。</p>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<p>要使用 SqlLite，我们至少需要导入:</p>\n<ul>\n<li>sqllte3.dll</li>\n<li>Mono.Data.Sqllite.dll</li>\n</ul>\n<p>在这里我们额外导入 Dapper 作为 Orm 方便我们对数据进行 curd：</p>\n<ul>\n<li>Dapper.dll</li>\n<li>Dapper.Contrib.dll</li>\n<li>Mono.Data.Sqlite.dll</li>\n</ul>\n<h3 id=\"创建数据表\"><a class=\"markdownIt-Anchor\" href=\"#创建数据表\">#</a> 创建数据表</h3>\n<p>首先我们创建一个数据表的模型类 User 如下：</p>\n<p>在类名上标注表的名称，<ins>这个名称需要和 db 文件中的数据表名称对应</ins>。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Dapper<span class=\"token punctuation\">.</span>Contrib<span class=\"token punctuation\">.</span>Extensions</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Scenes<span class=\"token punctuation\">.</span>SqlLiteDB<span class=\"token punctuation\">.</span>Tables</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Table</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"User\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Serializable</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Key</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> pass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"id:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">id</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> name:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> pass:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">pass</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> age:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">age</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "SqlLite",
                "存储",
                "数据库"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E8%AE%A9%E7%94%BB%E9%9D%A2%E5%8A%A8%E8%B5%B7%E6%9D%A5/",
            "url": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E8%AE%A9%E7%94%BB%E9%9D%A2%E5%8A%A8%E8%B5%B7%E6%9D%A5/",
            "title": "Unity入门精要（十一）让画面动起来",
            "date_published": "2022-12-26T03:34:17.000Z",
            "content_html": "<h2 id=\"unityshader的内置时间变量\"><a class=\"markdownIt-Anchor\" href=\"#unityshader的内置时间变量\">#</a> UnityShader 的内置时间变量</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212261137373.png\" alt=\"image-20221226113747301\"></p>\n<h2 id=\"序列帧动画\"><a class=\"markdownIt-Anchor\" href=\"#序列帧动画\">#</a> 序列帧动画</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212261519510.gif\" alt=\"\"></p>\n<blockquote>\n<p>通过使用 Time 实现循环的特效播放。</p>\n</blockquote>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"Unlit/Exp2Shader\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Properties</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">_Color</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Color Tint\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">_MainTex</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Texture\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>D<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">_HorizontalAmount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal Amount\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">_VerticalAmount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical Amount\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">_Speed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Speed\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    SubShader</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        Tags</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"Queue\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span> <span class=\"token string\">\"IgnoreProjector\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span> <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Pass</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">vertex vert</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">fragment frag</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// make fog work</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">multi_compile_fog</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnityCG.cginc\"</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">appdata</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                float4 vertex <span class=\"token operator\">:</span> POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                float2 uv <span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">v2f</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                float2 uv <span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                float4 vertex <span class=\"token operator\">:</span> SV_POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">sampler2D</span> _MainTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            float4 _MainTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            v2f <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span>appdata v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                v2f o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                o<span class=\"token punctuation\">.</span>vertex <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">=</span> <span class=\"token function\">TRANSFORM_TEX</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">,</span> _MainTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">float</span> _Speed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">float</span> _HorizontalAmount<span class=\"token punctuation\">,</span> _VerticalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            fixed4 _Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span>v2f i<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> SV_Target</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token keyword\">float</span> time <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>_Time<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _Speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">float</span> row <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> _HorizontalAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">float</span> column <span class=\"token operator\">=</span> time <span class=\"token operator\">-</span> row <span class=\"token operator\">*</span> _VerticalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                half2 uv <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">+</span> <span class=\"token function\">half2</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                uv<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/=</span> _HorizontalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                uv<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/=</span> _VerticalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                fixed4 c <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_MainTex<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                c<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*=</span> _Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    Fallback <span class=\"token string\">\"Transparent/VertexLit\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"无限滚动背景\"><a class=\"markdownIt-Anchor\" href=\"#无限滚动背景\">#</a> 无限滚动背景</h2>\n<p>很多无限滚动的背景也是使用了纹理动画。纹理资源： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuZ2FtZWFydC5vcmcv\">OpenGameArt.org</span></p>\n<blockquote>\n<p>注意： uv 现已经不存在 zw 值。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"Unlit/BackGroundShader\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Properties</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        _MainTex <span class=\"token punctuation\">(</span><span class=\"token string\">\"Texture\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">_DetailTex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2nd Layer (RGB)\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">2D</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">_ScrollX</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Base Layer Scrool Speed\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">_Scroll2X</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2nd Layer Scroll Speed\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">_Multiplier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Layer Multiplier\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    SubShader</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        Tags</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Opaque\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        LOD <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Pass</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> vertex vert</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> fragment frag</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// make fog work</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> multi_compile_fog</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token preprocessor property\">#include </span><span class=\"token string\">\"UnityCG.cginc\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">appdata</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token class-name\">float4</span> vertex <span class=\"token punctuation\">:</span> POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token class-name\">float2</span> uv <span class=\"token punctuation\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">v2f</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token class-name\">float2</span> uv <span class=\"token punctuation\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token function\">UNITY_FOG_COORDS</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token class-name\">float4</span> vertex <span class=\"token punctuation\">:</span> SV_POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token class-name\">sampler2D</span> _MainTex<span class=\"token punctuation\">,</span> _DetailTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">float4</span> _MainTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _ScrollX<span class=\"token punctuation\">,</span> _Scroll2X<span class=\"token punctuation\">,</span> _Multiplier<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token class-name\">float4</span> _DetailTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token return-type class-name\">v2f</span> <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">appdata</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\">v2f</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                o<span class=\"token punctuation\">.</span>vertex <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">=</span> <span class=\"token function\">TRANSFORM_TEX</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">,</span> _MainTex<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">frac</span><span class=\"token punctuation\">(</span><span class=\"token function\">float2</span><span class=\"token punctuation\">(</span>_ScrollX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _Time<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>zw <span class=\"token operator\">=</span> <span class=\"token function\">TRANSFORM_TEX</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">,</span> _DetailTex<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">frac</span><span class=\"token punctuation\">(</span><span class=\"token function\">float2</span><span class=\"token punctuation\">(</span>_Scroll2X<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _Time<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token function\">UNITY_TRANSFER_FOG</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token return-type class-name\">fixed4</span> <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">v2f</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> SV_Target</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token class-name\">fixed4</span> firstLayer <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_MainTex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token class-name\">fixed4</span> secondLayer <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_DetailTex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>zw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token class-name\">fixed4</span> c <span class=\"token operator\">=</span> <span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span>firstLayer<span class=\"token punctuation\">,</span> secondLayer<span class=\"token punctuation\">,</span> secondLayer<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                c<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*=</span> _Multiplier<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    Fallback <span class=\"token string\">\"VertexLit\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"顶点动画\"><a class=\"markdownIt-Anchor\" href=\"#顶点动画\">#</a> 顶点动画</h2>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%83%EF%BC%89%20%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/",
            "url": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%83%EF%BC%89%20%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/",
            "title": "Unity入门精要（七）基础纹理",
            "date_published": "2022-12-26T03:13:00.000Z",
            "content_html": "<h1 id=\"unity-shader-第七章-基础纹理\"><a class=\"markdownIt-Anchor\" href=\"#unity-shader-第七章-基础纹理\">#</a> Unity Shader 第七章 基础纹理</h1>\n<blockquote>\n<p>纹理 —— 使用一张图片来控制模型的外观，使用纹理映射技术把一张图黏在模型表面，逐纹素地控制模型的颜色。</p>\n</blockquote>\n<p>通常使用纹理映射坐标对应纹理中的 2D 坐标，这被称为是 UV 坐标。</p>\n<p>顶点 UV 坐标的范围通常被归一到 [0,1] 范围内。</p>\n<p>DirectX 中原点位于左上角，OpenGL 中原点位于左下角。</p>\n<p Unity=\"\" 使用的是OpenGL的坐标，即原点位于左下角=\"\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416024.png\" alt=\"image-20220824104021468\"></p>\n<h2 id=\"纹理采样\"><a class=\"markdownIt-Anchor\" href=\"#纹理采样\">#</a> 纹理采样</h2>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Upgrade NOTE: replaced 'mul(UNITY_MATRIX_MVP,*)' with 'UnityObjectToClipPos(*)'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Shader <span class=\"token string\">\"Book/SingleTexture\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Properties</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">_Color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Color Tint\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">_MainTex</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Texture\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>D<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//        反射</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">_Specular</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Specular\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//        高光</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">_Gloss</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Gloss\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    SubShader</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        Tags</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Opaque\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token string\">\"LightMode\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"ForwardBase\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        LOD <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Pass</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">vertex vert</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">fragment frag</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\">// make fog work</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">multi_compile_fog</span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnityCG.cginc\"</span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Lighting.cginc\"</span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 声明对应变量</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            fixed4 _Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">sampler2D</span> _MainTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            float4 _MainTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            fixed4 _Specular<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">float</span> _Gloss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">// 输入</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">a2v</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                float4 vertex<span class=\"token operator\">:</span> POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                float3 normal<span class=\"token operator\">:</span> NORMAL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                float4 texcoord<span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">v2f</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                float4 pos<span class=\"token operator\">:</span> SV_POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                float3 worldNormal<span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                float3 worldPos<span class=\"token operator\">:</span> TEXCOORD1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                float2 uv<span class=\"token operator\">:</span> TEXCOORD2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token comment\">// 进行顶点着色器</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            v2f <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span>a2v v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                v2f o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                o<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                o<span class=\"token punctuation\">.</span>worldNormal <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToWorldNormal</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                o<span class=\"token punctuation\">.</span>worldPos <span class=\"token operator\">=</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>unity_ObjectToWorld<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token comment\">// 计算 Thing And Offset</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span>texcoord<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">*</span> _MainTex_ST<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">+</span> _MainTex_ST<span class=\"token punctuation\">.</span>zw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token comment\">// 可使用 Unity 内置宏</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token comment\">// o.uv = TRANSFORM_TEX(v.texcoord, _MainTex);</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token comment\">// 进行片元着色器</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span>v2f i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> SV_Target</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token comment\">// 光线方向</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                fixed3 worldNormal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>worldNormal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                fixed3 worldLightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">UnityWorldSpaceLightDir</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>worldPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token comment\">// 纹理采样</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                fixed3 albedo <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_MainTex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> _Color<span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token comment\">// 环境光</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                fixed3 ambient <span class=\"token operator\">=</span> UNITY_LIGHTMODEL_AMBIENT<span class=\"token punctuation\">.</span>xyz <span class=\"token operator\">*</span> albedo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                <span class=\"token comment\">// 漫反射 - 半兰伯特模型</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                fixed3 diffuse <span class=\"token operator\">=</span> _LightColor0<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> albedo <span class=\"token operator\">*</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>worldNormal<span class=\"token punctuation\">,</span> worldLightDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                fixed3 viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">UnityWorldSpaceViewDir</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>worldPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                fixed3 halfDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>worldLightDir <span class=\"token operator\">+</span> viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token comment\">// 高光反射</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                fixed3 specular <span class=\"token operator\">=</span> _LightColor0<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> _Specular<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>worldNormal<span class=\"token punctuation\">,</span> halfDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _Gloss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">fixed4</span><span class=\"token punctuation\">(</span>ambient <span class=\"token operator\">+</span> diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    Fallback <span class=\"token string\">\"Specular\"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416080.png\" alt=\"image-20220824164058414\"></p>\n<p>值得注意的是：</p>\n<blockquote>\n<p>如果导入的纹理大小超过了 Max Texture Size 中的设置值，那么 Unity 将会把该纹理缩放为这个最大分辨率。理想情况下，导入的纹理可以是非正方形的，但长宽的大小应该是 2 的幂，例如 2、4、8、16、32、64 等。如果使用了非 2 的幂大小（Non Power of Two, NPOT）的纹理，那么这些纹理往往会占用更多的内存空间，而且 GPU 读取该纹理的速度也会有所下降。有一些平台甚至不支持这种 NPOT 纹理，这时 Unity 在内部会把它缩放成最近的 2 的幂大小。出于性能和空间的考虑，我们应该尽量使用 2 的幂大小的纹理。</p>\n</blockquote>\n<h2 id=\"凹凸映射\"><a class=\"markdownIt-Anchor\" href=\"#凹凸映射\">#</a> 凹凸映射</h2>\n<p>纹理的一种应用是凹凸映射（使用一张纹理来修改模型表面的法线，以便为模型提供更多的细节。）——++ 法线贴图 ++。</p>\n<p>有以下两种映射方式【高度纹理，法线纹理】：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416788.png\" alt=\"image-20220830094021154\"></p>\n<h3 id=\"高度纹理\"><a class=\"markdownIt-Anchor\" href=\"#高度纹理\">#</a> 高度纹理</h3>\n<p>存储颜色强度值来表示海拔高度，颜色越深表面越向外凸起，颜色越钱表面越向内凹陷。</p>\n<p>优点：直观明显</p>\n<p>缺点：计算复杂，不能实时计算得到表面法线，消耗性能。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416546.png\" alt=\"image-20220830094546307\"></p>\n<h3 id=\"法线纹理\"><a class=\"markdownIt-Anchor\" href=\"#法线纹理\">#</a> 法线纹理</h3>\n<p>存储表面法线方向，范围值为 [-1,1], 而像素分量范围为 [0,1]，需要进行映射。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131417006.png\" alt=\"image-20220830094820422\"></p>\n<p>在对法线纹理进行采样后，还需要对结果进行一次反映射得到法线方向：</p>\n<p><code>normal=pixel*2-1</code></p>\n<p>根据使用的坐标系分为：</p>\n<ol>\n<li>\n<p>模型空间的法线纹理</p>\n<p>因为法线方向各不相同，在对应到贴图上是会呈现出不同的颜色，不同的颜色就对应不同的法线方向。—— 直观</p>\n</li>\n<li>\n<p>切线空间的法线纹理</p>\n<p>切线空间下的法线则呈现浅蓝色</p>\n</li>\n</ol>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/10/08/Mirror%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2022/10/08/Mirror%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "Mirror初体验",
            "date_published": "2022-10-08T08:50:30.000Z",
            "content_html": "<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 🔖快速食用</h2>\n<p>在场景中创建一个空物体，并挂载如下几个脚本。</p>\n<h3 id=\"网络管理器\"><a class=\"markdownIt-Anchor\" href=\"#网络管理器\">#</a> 网络管理器</h3>\n<blockquote>\n<p>其中，需要指定 Player Prefab, 勾选自动生成玩家可以在连接到服务器时，自动生成玩家对象。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202210191630256.png\" alt=\"image-20221010100103105\"></p>\n<h3 id=\"玩家\"><a class=\"markdownIt-Anchor\" href=\"#玩家\">#</a> 玩家</h3>\n<p>为玩家添加如下组件：</p>\n<ul>\n<li>Network Identity 表示这是一个需要进行网络同步的物体。</li>\n<li>NetWork Transform 表示可同步 Transfrom</li>\n</ul>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202210191630897.png\" alt=\"image-20221010100400624\"></p>\n<blockquote>\n<p>PS: 注意勾选认证，让玩家只能控制自己的物体</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202210191630794.png\" alt=\"image-20221010100615058\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>玩家控制脚本</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Mirror</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UniRx</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Qpublic <span class=\"token keyword\">class</span> <span class=\"token class-name\">PlayerCtr</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">NetworkBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> speed <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SyncVar</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>hook <span class=\"token operator\">=</span> <span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>OnColorChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token class-name\">Color</span> _color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token class-name\">MeshRenderer</span> _renderer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         _renderer <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isServer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             <span class=\"token function\">RpcTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> isLocalPlayer <span class=\"token operator\">&amp;&amp;</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>             <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下空格\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>             <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> color <span class=\"token operator\">=</span> _color <span class=\"token operator\">==</span> Color<span class=\"token punctuation\">.</span>white <span class=\"token punctuation\">?</span> Color<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Color<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>             <span class=\"token function\">CmdChangeColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>         <span class=\"token comment\">//move</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> isLocalPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>             <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> h <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>             <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> v <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>             <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1f</span> <span class=\"token operator\">||</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                 <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> dir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalized<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                 transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>dir <span class=\"token operator\">*</span> speed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnColorChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span> oldColor<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span> newColor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>         <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"颜色变化\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         _renderer<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> newColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Command</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CmdChangeColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span> color<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         _color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> </pre></td></tr><tr><td data-num=\"63\"></td><td><pre> </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ClientRpc</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RpcTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>         <span class=\"token comment\">// 在服务器端调用时，分别在客户端进行调用</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>         <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前客户端为：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>netId</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\">#</a> 参考</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Nha2VfQy9hcnRpY2xlL2RldGFpbHMvMTIzMTY1MTYwP3NwbT0xMDAxLjIwMTQuMzAwMS41NTAy\"> UnityMirror 学习笔记 (2)：使用 SyncVar 进行数据同步_Cake_C 的博客 - CSDN 博客</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Nha2VfQy9hcnRpY2xlL2RldGFpbHMvMTIzMTcxMTIwP3NwbT0xMDAxLjIwMTQuMzAwMS41NTAy\">UnityMirror 学习笔记 (3)：服务器与客户端间的函数调用，互发控制指令：Command，ClientRpc，TargetRpc_Cake_C 的博客 - CSDN 博客</span></li>\n</ul>\n",
            "tags": [
                "多人"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%EF%BC%89%E9%AB%98%E7%BA%A7%E7%BA%B9%E7%90%86/",
            "url": "https://www.fasty97.top/2022/09/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%EF%BC%89%E9%AB%98%E7%BA%A7%E7%BA%B9%E7%90%86/",
            "title": "Unity入门精要（十）高级纹理",
            "date_published": "2022-09-20T13:14:05.000Z",
            "content_html": "<h1 id=\"高级纹理\"><a class=\"markdownIt-Anchor\" href=\"#高级纹理\">#</a> 高级纹理</h1>\n<ul>\n<li>基础纹理：法线纹理、渐变纹理、遮罩纹理等。</li>\n<li>高级纹理：CubeMap、Render Texture、Procedure Texture</li>\n</ul>\n<h2 id=\"cubemap立方体纹理\"><a class=\"markdownIt-Anchor\" href=\"#cubemap立方体纹理\">#</a> CubeMap 立方体纹理</h2>\n<blockquote>\n<p>在图形学中，立方体纹理是环境映射的一种实现方法。</p>\n</blockquote>\n<img data-src=\"http://pic.fasty97.top/NotePad/202209131407838.png\" alt=\"image-20220913140753789\" style=\"zoom:50%;\" />\n<center>立方体纹理采样</center>\n<p>立方体纹理常常用于天空盒、环境映射。</p>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/18/Unity%20Ui%E4%BA%8B%E4%BB%B6%E6%8E%A5%E5%8F%A3/",
            "url": "https://www.fasty97.top/2022/06/18/Unity%20Ui%E4%BA%8B%E4%BB%B6%E6%8E%A5%E5%8F%A3/",
            "title": "Unity Ui事件接口",
            "date_published": "2022-06-18T08:05:03.000Z",
            "content_html": "<p>在 Unity 中 UI 事件有两种方式，一种使用数据接口的方式，另一种使用监听组件的方式。</p>\n<h2 id=\"使用数据接口\"><a class=\"markdownIt-Anchor\" href=\"#使用数据接口\">#</a> 使用数据接口</h2>\n<p>通过继承数据额接口实现接口方法我们可以对 Ui 事件进行处理。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">APanel</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IPointerClickHandler</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPointerClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PointerEventData</span> eventData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ui被点击了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Unity 提供了各种各样的数据接口给我们使用，这里不在一一赘述。</p>\n<p class=\"blue\">需要注意的一点是，使用 Drag 类的接口时，我们必须使用 Drag 接口，其他的 BeginDrag、EndDrag 等接口才会响应。</p>\n<h2 id=\"使用监听组件\"><a class=\"markdownIt-Anchor\" href=\"#使用监听组件\">#</a> 使用监听组件</h2>\n<p>我们最常用的监听组件是 <code>Button组件</code> ，我们可以给任意一个 Ui 添加一个 Button 组件来让 Ui 具有 Button 的效果。</p>\n<p>在处理复杂的监听事件时，我们可以使用 <code>Event trigger</code>  组件。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622225810.png\" alt=\"\"></p>\n<p><code>Event trigger</code>  监听绑定和 Button 基本一致，我们可以在面板上通过拖拽来设定我们的响应事件和要触发的行为。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622225909.png\" alt=\"\"></p>\n<h3 id=\"使用代码绑定\"><a class=\"markdownIt-Anchor\" href=\"#使用代码绑定\">#</a> 使用代码绑定</h3>\n<p>使用那来绑定 Event Trigger 的方式和 Button 略有不同。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">EventTrigger</span> _eventTrigger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _eventTrigger <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>EventTrigger<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span>  entry<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EventTrigger<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>eventID <span class=\"token operator\">=</span> EventTriggerType<span class=\"token punctuation\">.</span>PointerClick<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    entry<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"被点击了@！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _eventTrigger<span class=\"token punctuation\">.</span>triggers<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们需要使用 Entry () 的一个类似工厂方法的方式来创建一个回调实体，并指定事件类型。</p>\n",
            "tags": [
                "Ui",
                "小技巧"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/14/%E3%80%8A%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F%E3%80%8B-%E4%B9%A6%E8%AF%84/",
            "url": "https://www.fasty97.top/2022/06/14/%E3%80%8A%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F%E3%80%8B-%E4%B9%A6%E8%AF%84/",
            "title": "《游戏编程模式》-书评",
            "date_published": "2022-06-13T17:17:36.000Z",
            "content_html": "<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>第一次打开《游戏编程模式》这本书已经好像已经是两年前的事情了，断断续续的算是读完了，其实花费的时间应该是大于 9 小时的，</p>\n<p>相比传统的设计模式来说，本书结合了游戏设计方面的思考，让我这个游戏程序员读的很起劲。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220614012226.png\" alt=\"\"></p>\n<h2 id=\"感悟\"><a class=\"markdownIt-Anchor\" href=\"#感悟\">#</a> 感悟</h2>\n<p>书中使用 C<ins> 进行讲解，除了设计模式本身，也让我使用底层 c</ins> 搭建游戏引擎有了一个基本认知，其实很多设计模式我们在平时已经在不经意间使用到了，只是不明确我们使用的是什么模式而已❤️。结合之前学习的 <code>《大话设计模式》</code> , 这算是第二次学习设计模式相关内容了，但我自我感觉自己在代码架构设计方面还是存在一些薄弱。之后考虑再读一下 <code>《设计模式与游戏完美开发》</code> ，主要是结合 C# 看一下在 Unity 中使用设计模式的具体方式。</p>\n",
            "tags": [
                "书评"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/14/%E4%BC%98%E5%8C%96%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E8%84%8F%E6%A0%87%E8%AE%B0%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2022/06/14/%E4%BC%98%E5%8C%96%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E8%84%8F%E6%A0%87%E8%AE%B0%E6%A8%A1%E5%BC%8F/",
            "title": "优化型模式-脏标记模式",
            "date_published": "2022-06-13T16:29:02.000Z",
            "content_html": "<blockquote>\n<p>将工作推迟到必要时进行以避免不必要的工作。</p>\n</blockquote>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<p>但一组数据因为另一组数据的变动而变动时，为了确认具体需要变动的数据，我们为数据进行标记。</p>\n<p><ins>一组原始数据随时间变化。一组衍生数据经过一些代价昂贵的操作由这些数据确定。一个脏标记跟踪这个衍生数据是否和原始数据同步。它在原始数据改变时被设置。如果它被设置了，那么当需要衍生数据时，它们就会被重新计算并且标记被清除。否则就使用缓存的数据。</ins></p>\n<blockquote>\n<p>仅当性能问题严重到值得增加代码复杂度时才使用它</p>\n</blockquote>\n<p>2022 年 6 月 14 日 00:38:00</p>\n<p><ins>等待更新</ins></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/13/%E8%A7%A3%E8%80%A6%E6%80%A7%E6%A8%A1%E5%BC%8F-%E6%9C%8D%E5%8A%A1%E5%AE%9A%E4%BD%8D%E5%99%A8/",
            "url": "https://www.fasty97.top/2022/06/13/%E8%A7%A3%E8%80%A6%E6%80%A7%E6%A8%A1%E5%BC%8F-%E6%9C%8D%E5%8A%A1%E5%AE%9A%E4%BD%8D%E5%99%A8/",
            "title": "解耦性模式-服务定位器",
            "date_published": "2022-06-13T15:34:29.000Z",
            "content_html": "<blockquote>\n<p>通过阅读 <code>《游戏编程模式》</code> 在我的理解下，服务定位器就是：<ins>将需要全局使用的对象进行统一的管理</ins>。</p>\n</blockquote>\n<p>主要是为了解决单例对象在众多系统中被使用暴露了真实系统实现的问题，通过在单例系统外围包裹一层，然后通过访问外界的定位器来范围真实的服务对象。</p>\n<p>当然这样就意味着，我们需要在定位器中对服务进行初始化管理。</p>\n<p class=\"red\">Ps：使用这样的方式，我们就可以通过定位器快捷的替换服务器的具体实现对象，以指定使用例如测试音频模块、发布音频模块等的发布环境区分的子服务类型。</p>\n<blockquote>\n<p>Tips: 其实对于上述的环境区分，我们也可以通过宏定义来处理。</p>\n</blockquote>\n<h2 id=\"时序耦合\"><a class=\"markdownIt-Anchor\" href=\"#时序耦合\">#</a> 时序耦合</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220614002525.png\" alt=\"\"></p>\n<p>在书中提到了一个<ins>时序耦合</ins>的概念，所谓时序耦合就是指两个或多个独立系统因为依赖关系导致，必须有 A 才能使用 B 的情况出现，解决时序耦合可以让我们真正让每个系统独立。</p>\n<p>为了防止出现 NULL 的情况，我们可以为服务指定一个默认初始化方式或默认初始化对象，同时我们可以在想要禁用该项服务时，返回这个默认的空对象。</p>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<blockquote>\n<p>服务定位器模式在很多方面和单例模式（第 6 章）非常相近，所以值得考虑两者来决定哪一个更适合你的需求。</p>\n</blockquote>\n<ul>\n<li>\n<p>Unity [插图] 框架把这个模式和组件模式（第 14 章）结合起来，并使用在了 GetComponent () 方法中。</p>\n</li>\n<li>\n<p>Microsoft 的 XNA [插图] 游戏开发框架将这个模式内嵌到它的核心 Game 类中。每个实例有一个 GameServices 对象，能够用来注册和定位任何类型的服务。</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/11/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFUIkit/",
            "url": "https://www.fasty97.top/2022/06/11/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFUIkit/",
            "title": "Unity 新技术UIkit",
            "date_published": "2022-06-11T06:14:27.000Z",
            "content_html": "<h1 id=\"简单介绍\"><a class=\"markdownIt-Anchor\" href=\"#简单介绍\">#</a> 简单介绍</h1>\n<h2 id=\"uibulider的使用\"><a class=\"markdownIt-Anchor\" href=\"#uibulider的使用\">#</a> UIBulider 的使用</h2>\n<blockquote>\n<p>UIElement 是一种类似于 Html 形式进行界面开发的方式，创建的 EditorWidow 包括以下 3 个文件。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220317003758.png\" alt=\"image-20220317003751243\"></p>\n<ul>\n<li>C#- 代码控制界面逻辑 类似于 js</li>\n<li>Uss - 样式控制器 类似于 Css</li>\n<li>Uxml - 基础骨架模板 类型 Html</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220317004247.png\" alt=\"image-20220317004247734\"></p>\n<center>UIBulider界面</center>\n<h2 id=\"双击asset打开编辑窗\"><a class=\"markdownIt-Anchor\" href=\"#双击asset打开编辑窗\">#</a> 双击 Asset 打开编辑窗</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DialogGraphEditWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">VisualElement</span> rootMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">OnOpenAsset</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">OpenAsset</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> line<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EditorUtility<span class=\"token punctuation\">.</span><span class=\"token function\">InstanceIDToObject</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">DialogTreeGraphAsset</span> graph<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> window <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>DialogGraphEditWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            window<span class=\"token punctuation\">.</span>titleContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"对话窗\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Editor/GraphWindow.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rootMain<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                rootMain <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            window<span class=\"token punctuation\">.</span>rootVisualElement<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rootMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            window<span class=\"token punctuation\">.</span>minSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uss-样式表\"><a class=\"markdownIt-Anchor\" href=\"#uss-样式表\">#</a> Uss 样式表</h2>\n<blockquote>\n<p>形如这样的称为样式表 uss，uss 决定了 ui 元素的显示效果。</p>\n</blockquote>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">Label</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">-unity-font-style</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>68<span class=\"token punctuation\">,</span> 138<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uxml-模板\"><a class=\"markdownIt-Anchor\" href=\"#uxml-模板\">#</a> Uxml 模板</h2>\n<blockquote>\n<p>uxml 模板类似于 html，其中包含了所有的静态元素内容。</p>\n<p>uxml 使用 uss 决定其中 ui 元素的具体显示效果。</p>\n</blockquote>\n<p>双击打开 uxml 时默认会自动打开可视化工具 ——UIBulider, 在 UiBulider 中进行可视化的数据操作。</p>\n<h2 id=\"ui-绑定\"><a class=\"markdownIt-Anchor\" href=\"#ui-绑定\">#</a> Ui 绑定</h2>\n<blockquote>\n<p>Ui 绑定文件类似于 JavaScript 代码</p>\n</blockquote>\n<p>我们可以在代码中使用相关的 Api 对 Ui 元素和样式表进行操作，如下所示：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>动态操作</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BagMgrWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Window/UI Toolkit/BagMgrWindow\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShowExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">BagMgrWindow</span> wnd <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>BagMgrWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            wnd<span class=\"token punctuation\">.</span>titleContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BagMgrWindow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// Each editor window contains a root VisualElement object</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> root <span class=\"token operator\">=</span> rootVisualElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// VisualElements objects can contain other VisualElement following a tree hierarchy.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> label <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! From C#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// Import UXML</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> visualTree <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/EditorWindows/BagMgrWindow.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> labelFromUXML <span class=\"token operator\">=</span> visualTree<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>labelFromUXML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// A stylesheet can be added to a VisualElement.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// The style will be applied to the VisualElement and all of its children.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> styleSheet <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>StyleSheet<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/EditorWindows/BagMgrWindow.uss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> labelWithStyle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! With Style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            labelWithStyle<span class=\"token punctuation\">.</span>styleSheets<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>styleSheet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>labelWithStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"debug-工具\"><a class=\"markdownIt-Anchor\" href=\"#debug-工具\">#</a> Debug 工具</h2>\n<blockquote>\n<p>提供有 Ui 检查工具，其中可以查看 Ui 元素的显示状态和包围盒结构，树形结构等，类似 html 的浏览器 F12.</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211211500451.png\" alt=\"image-20221121150027349\"></p>\n<h2 id=\"流程模板\"><a class=\"markdownIt-Anchor\" href=\"#流程模板\">#</a> 流程模板</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>UIElements</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IndexEditorWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">VisualElement</span> rootMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fasty/主界面\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Index.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        rootMain <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> window <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IndexEditorWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        window<span class=\"token punctuation\">.</span>rootVisualElement<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rootMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">CreateUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">InitEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        window<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/// 动态创建 Ui</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// 处理事件</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> btn <span class=\"token operator\">=</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showBtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        btn<span class=\"token punctuation\">.</span>clicked <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Label<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"查看被点击了\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        btn <span class=\"token operator\">=</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"descBtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        btn<span class=\"token punctuation\">.</span>clicked <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Label<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"说明被点击了\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"装备管理小案例\"><a class=\"markdownIt-Anchor\" href=\"#装备管理小案例\">#</a> 装备管理小案例</h1>\n<blockquote>\n<p><ins>2022 年 11 月 21 日 10:32:00 更新</ins></p>\n<p>此案例为 Uitoolkit 练习，使用 Unity2021.3.11f1c2</p>\n</blockquote>\n<h2 id=\"初步设计\"><a class=\"markdownIt-Anchor\" href=\"#初步设计\">#</a> 初步设计</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211211054281.png\" alt=\"image-20221121105406061\"></p>\n<center>简单装备管理设计</center>\n<p>其中涉及到 <code>ListView</code>  控件参考：[Unity - Manual: Create list and tree views (<span class=\"exturl\" data-url=\"aHR0cDovL3VuaXR5M2QuY29t\">unity3d.com</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnVuaXR5M2QuY29tLzIwMjIuMS9Eb2N1bWVudGF0aW9uL01hbnVhbC9VSUUtTGlzdFZpZXctVHJlZVZpZXcuaHRtbCM6fjp0ZXh0PUNyZWF0ZQ==\">https://docs.unity3d.com/2022.1/Documentation/Manual/UIE-ListView-TreeView.html#:~:text=Create</span> a list view 1 Right-click in the,the ListView control in the Hierarchy window. 更多项目)</p>\n<p>++ 🔖值得注意的是： 当因为修改脚本导致窗口无法打开时，可能是因为查找不到窗口的实例，在修正错误后，重启 Unity 编辑器才能正常打开窗体。++</p>\n<h2 id=\"listview的使用\"><a class=\"markdownIt-Anchor\" href=\"#listview的使用\">#</a> ListView 的使用</h2>\n<blockquote>\n<p>这里点击使用的是通用注册事件，同时也可以使用 ListView 的 OnValueChange 方法监听，在监听时获取不到 text 属性，可以在生成时将数据绑定到 <code>viewDataKey</code> 。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> list <span class=\"token operator\">=</span> _rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListView<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list<span class=\"token punctuation\">.</span>itemsSource <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list<span class=\"token punctuation\">.</span>makeItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list<span class=\"token punctuation\">.</span>bindItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">)</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    element<span class=\"token punctuation\">.</span>viewDataKey <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    element<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">RegisterCallback</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MouseDownEvent<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"点击了选项：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">element<span class=\"token punctuation\">.</span>viewDataKey</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> TrickleDown<span class=\"token punctuation\">.</span>TrickleDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "Ui",
                "编辑器扩展",
                "uitoolkit"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/11/%E5%85%B3%E4%BA%8E%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E6%80%9D%E8%80%83/",
            "url": "https://www.fasty97.top/2022/06/11/%E5%85%B3%E4%BA%8E%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E6%80%9D%E8%80%83/",
            "title": "关于状态机的思考",
            "date_published": "2022-06-10T18:15:39.000Z",
            "content_html": "<blockquote>\n<p>状态机是对状态模式的一种使用。用于独立处理在各个状态的具体情况和转换关系。</p>\n</blockquote>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>当我们需要处理带流程响应的问题时，可以将其抽象为状态问题。</p>\n<p class=\"red\">例如下图的我们需要处理 OnEnter、OnUpdate、OnExit 三个部分。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220615115055.png\" alt=\"\"></p>\n<h2 id=\"有限状态机\"><a class=\"markdownIt-Anchor\" href=\"#有限状态机\">#</a> 有限状态机</h2>\n<blockquote>\n<p>有且仅有可能处于一种状态，解决状态区分和转换问题。</p>\n<p>有限状态机是下列几种状态机的基础，下面的状态机都基于有限状态机进行相关功能的扩充。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220615115505.png\" alt=\"\"></p>\n<h3 id=\"转换方式\"><a class=\"markdownIt-Anchor\" href=\"#转换方式\">#</a> 转换方式</h3>\n<p>在状态机中，我们需要使用一种转换方式来进行状态切换，在 Unity 的 Animator 中使用条件参数进行跳转。我们可以使用类似事件的方式来跳转、或者使用任意能够保证正确进行 原状态到目标状态 转换的方式。</p>\n<h3 id=\"实现方式\"><a class=\"markdownIt-Anchor\" href=\"#实现方式\">#</a> 实现方式</h3>\n<blockquote>\n<p>对于有限状态机来说，我们只需要保证具有 <code>状态</code> 、 <code>转换关系</code> 即可。</p>\n</blockquote>\n<h4 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\">#</a> 状态</h4>\n<p>状态是我们需要管理的核心，状态中可以包含转换关系 Dict。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>非继承式状态</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">/// 简单 Fsm 状态</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FsmState</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmTranslation<span class=\"token punctuation\">></span></span> translationDict<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token function\">FsmState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         translationDict <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmTranslation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         <span class=\"token keyword\">return</span> Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"转换条件\"><a class=\"markdownIt-Anchor\" href=\"#转换条件\">#</a> 转换条件</h4>\n<p>转换条件包括了起止状态和状态切换时要执行的回调函数。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>转换条件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">/// 简单 Fsm 转换条件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FsmTranslation</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">FsmState</span> fromState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">FsmState</span> toState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">FsmTranslationCallBack</span> callBack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">/// 创建条件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"fromState\"> 开始状态 & lt;/param></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"name\"> 响应事件 & lt;/param></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"toState\"> 目标状态 & lt;/param></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"callBack\"> 转换回调 & lt;/param></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token function\">FsmTranslation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmState</span> fromState<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FsmState</span> toState<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FsmTranslationCallBack</span> callBack<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fromState <span class=\"token operator\">=</span> fromState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toState <span class=\"token operator\">=</span> toState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>callBack <span class=\"token operator\">=</span> callBack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"控制机器\"><a class=\"markdownIt-Anchor\" href=\"#控制机器\">#</a> 控制机器</h4>\n<p>我们需要一个控制机器来管理我们的状态和条件，让整个系统能够自动化的运转起来，这个部分我将其称之为<ins>状态机器</ins>。<br>\n状态机器存储了当前的状态情况，以及根据条件转变条件的方法 <code>HandleEvent</code> 。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>机器</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 当前状态</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">FsmState</span> CurState <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmState<span class=\"token punctuation\">></span></span> StateDict <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmState<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// 添加状态</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"state\">State.&lt;/param></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmState</span> state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    StateDict<span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/// 添加条转</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"translation\">Translation.&lt;/param></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddTranslation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmTranslation</span> translation<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    StateDict<span class=\"token punctuation\">[</span>translation<span class=\"token punctuation\">.</span>fromState<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">[</span>translation<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> translation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/// 启动状态机</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"state\">State.&lt;/param></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmState</span> state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    CurState <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">/// 处理事件</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"name\">Name.&lt;/param></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">HandleEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CurState <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> CurState<span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        UnityEngine<span class=\"token punctuation\">.</span>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fromState:\"</span> <span class=\"token operator\">+</span> CurState<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        CurState<span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">callBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        CurState <span class=\"token operator\">=</span> CurState<span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>toState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        UnityEngine<span class=\"token punctuation\">.</span>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toState:\"</span> <span class=\"token operator\">+</span> CurState<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h3>\n<p>通过上面这一步我们已经搭建了一个基本的状态机模板，上面使用的是<ins>非继承的模式</ins>，当然我们可以将状态机接口抽象出去，成为一个接口。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// FSM 有限状态机接口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFsmState</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnExit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如上所示这种形式，我们的状态类通过继承接口来外挂状态行为，这种方式有好有坏，好处是：<ins>可以结构更加严谨的使用状态机接口，逻辑清晰</ins>。</p>\n<p>坏处是：<ins>在使用时也许我们会为了一个状态而去创建一个子类，导致子类过多，而子类的功能本身存在重合的情况</ins>。</p>\n<h2 id=\"并发状态机\"><a class=\"markdownIt-Anchor\" href=\"#并发状态机\">#</a> 并发状态机</h2>\n<blockquote>\n<p>相当于同时运行多个有限状态机，解决多状态并行问题。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622170627.png\" alt=\"\"></p>\n<p>在 Unity 的 Animator Controller 中，我们每一个创建的控制器就是一个 FSM 状态机，但我们使用多个时，这些状态机并不会相互干扰，独立并发的运行，此时我们可以将这种多个状态机同时运行的情况称之为是并发状态机。</p>\n<h2 id=\"分层状态机\"><a class=\"markdownIt-Anchor\" href=\"#分层状态机\">#</a> 分层状态机</h2>\n<blockquote>\n<p>相当于在有限状态机中添加层级划分，通过层级来指定当前使用的状态机。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622170913.png\" alt=\"\"></p>\n<p>在动画系统中可以看到有 Layer 的概念，这就是使用分层状态机的概念，不过在我们的普通分层状态中，我们的每个层级权重都为 1，也就是说每次运行一个层级时有且只运行这一个层级，而 Unity 增加了权重的概念，这个概念让状态层级之间可以可以状态和层级的混合。</p>\n<h2 id=\"下推状态机\"><a class=\"markdownIt-Anchor\" href=\"#下推状态机\">#</a> 下推状态机</h2>\n<blockquote>\n<p>相当于使用一个栈来存储状态的历史记录，以便在需要时回到原先的状态。</p>\n<p>在退出一个状态时，自动恢复到之前的状态。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622171349.png\" alt=\"\"></p>\n<p>如图所示：每个次级状态都与前一个状态存在回溯关系（<ins>这个回溯关系是不需要条件的</ins>），当我们退出 C 状态时，我们会自动回到 B 状态，退出 B 状态时自动回到 A 状态。</p>\n<p class=\"red\">状态机会将每一个使用的状态放入状态栈中，在退出当前状态时自动回溯到上一个状态。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622171829.png\" alt=\"\"></p>\n<h2 id=\"相关阅读\"><a class=\"markdownIt-Anchor\" href=\"#相关阅读\">#</a> 相关阅读</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYXN0eTk3LnRvcC8yMDIxLzA5LzA4L05vZGVDYW52YXMlRTQlQjklOEJGU00lRTYlOUMlODklRTklOTklOTAlRTclOEElQjYlRTYlODAlODElRTYlOUMlQkEv\">NodeCanvas 之 FSM 有限状态机 - NodeCanvas - 游戏开发 | Fasty Blog = 指尖小屋</span></li>\n</ol>\n",
            "tags": [
                "状态机",
                "有限状态机",
                "并发状态机",
                "分层状态机",
                "下推状态机",
                "AI"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/08/URP%E4%B8%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%A4%84%E7%90%86/",
            "url": "https://www.fasty97.top/2022/06/08/URP%E4%B8%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%A4%84%E7%90%86/",
            "title": "URP下自定义后处理",
            "date_published": "2022-06-08T07:05:23.000Z",
            "content_html": "<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<blockquote>\n<p>在 URP 中 Unity 通过定义 <code>RenderFeature</code>  来编写自定义后处理效果，实现 <code>SRP渲染管线</code> 。</p>\n</blockquote>\n<pre>Error: Evaluation failed: TypeError: Cannot read property 'initialize' of undefined\n    at __puppeteer_evaluation_script__:3:32</pre><center>流程如上</center>\n<h2 id=\"step1-编写后处理shader\"><a class=\"markdownIt-Anchor\" href=\"#step1-编写后处理shader\">#</a> Step1 编写后处理 Shader</h2>\n<h2 id=\"setp2-编写render-feature\"><a class=\"markdownIt-Anchor\" href=\"#setp2-编写render-feature\">#</a> Setp2 编写 Render Feature</h2>\n<h3 id=\"render-feature\"><a class=\"markdownIt-Anchor\" href=\"#render-feature\">#</a> Render Feature</h3>\n<blockquote>\n<p>Render Feature 是一个处理集，继承自 <code>ScriptableRendererFeature</code> ，可以包含多个 Render Pass。</p>\n</blockquote>\n<p><code>public override void Create()</code></p>\n<p>用于在 RenderFeature 创建时调用，一般在这里进行使用到的 RenderPass 的初始化操作。</p>\n<p><code>public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)</code></p>\n<p>用于指定渲染队列信息，通过 <code>renderer.EnqueuePass(renderpass)</code>  方法来将 renderpass 加入渲染队列。</p>\n<h3 id=\"render-pass\"><a class=\"markdownIt-Anchor\" href=\"#render-pass\">#</a> Render Pass</h3>\n<blockquote>\n<p>RenderPass 类似于 ShaderPass，是一块处理单元，通过继承 <code>ScriptableRenderPass</code> , 实现生命周期和处理行为。</p>\n</blockquote>\n<center>按照生命周期流程如下</center>\n<pre>Error: Evaluation failed: TypeError: Cannot read property 'initialize' of undefined\n    at __puppeteer_evaluation_script__:3:32</pre><ul>\n<li>\n<p><code>public override void OnCameraSetup(CommandBuffer cmd, ref RenderingData renderingData)</code></p>\n<p>用于初始化 RenderPass，完成基础操作。</p>\n</li>\n<li>\n<p><code>public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)</code></p>\n<p>用于处理 Pass 逻辑。</p>\n</li>\n<li>\n<p><code>public override void OnCameraCleanup(CommandBuffer cmd)</code></p>\n<p>用于进行收尾操作，释放资源等。</p>\n</li>\n</ul>\n<h2 id=\"setp3-编写volume-component\"><a class=\"markdownIt-Anchor\" href=\"#setp3-编写volume-component\">#</a> Setp3 编写 Volume Component</h2>\n<p>创建一个类继承自 <code>VolumeComponent</code> , 实现 <code>IPostProcessComponent</code>  接口。</p>\n<p>定义 <code>VolumeComponentMenu</code>  菜单路径。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">VolumeComponentMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyPost-processing/Translation\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TranslationEffect</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">VolumeComponent</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IPostProcessComponent</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Range</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatParameter</span> width <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FloatParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Range</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatParameter</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FloatParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Range</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatParameter</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FloatParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2Parameter</span> viewport<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2Parameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> scale<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsTileCompatible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>PS：书写参数时，必须使用经过保证的参数类型，如 Float 应该使用 FloatParameter 类型代替。</p>\n</blockquote>\n<h2 id=\"setp4-编写控制脚本\"><a class=\"markdownIt-Anchor\" href=\"#setp4-编写控制脚本\">#</a> Setp4 编写控制脚本</h2>\n<h2 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMU5rNHkxbzd3SD9zcG1faWRfZnJvbT0zMzMuOTk5LjAuMA==\">【鸡丝菌的 ShaderGraph 小教室】动物森友会转场效果的实现_哔哩哔哩_bilibili</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnVuaXR5M2QuY29tL1NjcmlwdFJlZmVyZW5jZS9SZW5kZXJpbmcuU2NyaXB0YWJsZVJlbmRlckNvbnRleHQuaHRtbA==\">Unity - Scripting API: ScriptableRenderContext (unity3d.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MDA4NTgxMjE=\">URP 自定义后处理 - 知乎 (zhihu.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNjE2NTgzNDk=\">如何扩展 Unity URP 的后处理 Volume 组件 - 知乎 (zhihu.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzMyNzMzOTA=\">URP 系列教程 | 如何使用 Scriptable Renderer Feature 来自定义后处理效果 - 知乎 (zhihu.com)</span></li>\n</ol>\n",
            "tags": [
                "渲染管线",
                "后处理",
                "可编程渲染管线（SRP）"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%AD%97%E8%8A%82%E7%A0%81/",
            "url": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%AD%97%E8%8A%82%E7%A0%81/",
            "title": "行为型模式-字节码",
            "date_published": "2022-06-07T05:57:47.000Z",
            "content_html": "<blockquote>\n<p>将指令抽象为一组字节码，通过字节码的排列组合定义游戏行为，使得玩家或者策划能够自由设计游戏行为（例如 AI）。</p>\n<p><code>数据驱动</code> 让游戏逻辑脱离编码的限制，赋予数据 行为。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">// 使用这样的一种数据驱动的模式来编程，让游戏逻辑脱离编码的限制，赋予数据 行为</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">// 使用堆栈存储指令，每次将堆栈中的指令出栈执行再入栈，直到栈空</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Stack<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> actlist <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            actlist<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> player <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Character</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// 解析字节码</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> act <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ActType<span class=\"token punctuation\">)</span>stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>act<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token keyword\">case</span> ActType<span class=\"token punctuation\">.</span>AddHp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> parm <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        player<span class=\"token punctuation\">.</span><span class=\"token function\">AddHp</span><span class=\"token punctuation\">(</span>parm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token comment\">//stack.Push(player.Hp);</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token keyword\">case</span> ActType<span class=\"token punctuation\">.</span>PlaySound<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        parm <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        player<span class=\"token punctuation\">.</span><span class=\"token function\">PlaySound</span><span class=\"token punctuation\">(</span>parm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token keyword\">case</span> ActType<span class=\"token punctuation\">.</span>Spell<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        parm <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        player<span class=\"token punctuation\">.</span><span class=\"token function\">Spell</span><span class=\"token punctuation\">(</span>parm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ActType</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        AddHp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        Spell <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        PlaySound <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Character</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Mp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddHp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            Hp <span class=\"token operator\">+=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"增加生命值：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">value</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Spell</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"释放法术：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">pos</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PlaySound</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"播放音效: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">id</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1/",
            "url": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1/",
            "title": "行为型模式-类型对象",
            "date_published": "2022-06-07T05:04:33.000Z",
            "content_html": "<blockquote>\n<p>通过创建一个类来支持新类型的灵活创建，其每个实例都代表一个不同的对象类型。</p>\n</blockquote>\n<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>试着想象一下，如果我们来设计一个怪物的数据我们会如何？</p>\n<ul>\n<li>名称</li>\n<li>种族</li>\n<li>生命值</li>\n<li>攻击力</li>\n<li>…</li>\n</ul>\n<p>以及我们的 Attack 行为。</p>\n<p>可以想到诸如这些的属性，在以这些数据的基础上来派生更多的特殊化数据。</p>\n<h2 id=\"传统设计\"><a class=\"markdownIt-Anchor\" href=\"#传统设计\">#</a> 传统设计</h2>\n<p>按照我们的常规思维，我们很容易想到如下的设计方案。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MosterBase</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Race <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Damage <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BigCat</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MosterBase</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"喵！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Elf</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MosterBase</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"精灵攻击\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>假如，此时我们希望怪物的数值和种族挂钩。</p>\n</blockquote>\n<p>我们第一时间想到的肯定是将 <code>种族</code> 也划分为一个类。</p>\n<p>于是我们有了以下的代码：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Race</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Damage <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MosterBase</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Damage <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Race</span> Race <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>Race</code>  类可以帮助我们存放所有同种族 怪物的共享信息。</p>\n<blockquote>\n<p>这种，类似组合的设计方案，帮助我们共享一部分数据，但在行为层面 也导致了我们子类过多的问题。</p>\n</blockquote>\n<h2 id=\"使用类型对象\"><a class=\"markdownIt-Anchor\" href=\"#使用类型对象\">#</a> 使用类型对象</h2>\n<blockquote>\n<p>在类中放置一个对象引用来表述类型，通过怪物 + 种族的组合方式，来解决子类过多的设计。</p>\n<p>❤️ 放置的对象引用已经表述了类型，就无需通过继承来表达关系。</p>\n<p>❤️ 通过类型对象搭建工厂生成对象。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>             * 类型对象：是指通过组合的方式去解决继承导致的强耦合问题</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>             * 例如：在下面的例子中，如果我们将种族放在 Moster 中，然后通过继承的方式实现抽象类 Moster，会导致子类过多，耦合强。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>             * 使用一个单独的对象将种族抽离出来，通过怪物和种族的组合方式就可以创建不同的怪物。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>             */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> breed <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Breed</span> <span class=\"token punctuation\">&#123;</span> AttackLevel <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> BaseHp <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"狼\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Moster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Hp <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"灰狼\"</span><span class=\"token punctuation\">,</span> Breed <span class=\"token operator\">=</span> breed <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Moster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Hp <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"白狼\"</span><span class=\"token punctuation\">,</span> Breed <span class=\"token operator\">=</span> breed <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>breed<span class=\"token punctuation\">.</span><span class=\"token function\">NewMoster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> breed2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Breed</span> <span class=\"token punctuation\">&#123;</span> AttackLevel <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"死灵狼\"</span><span class=\"token punctuation\">,</span> Parent <span class=\"token operator\">=</span> breed <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mos <span class=\"token operator\">=</span> breed2<span class=\"token punctuation\">.</span><span class=\"token function\">NewMoster</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恐怖之狼\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">//Console.WriteLine(mos);</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>breed2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// 怪物</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Moster</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Breed</span> Breed <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> SumHp <span class=\"token operator\">=></span> Breed<span class=\"token punctuation\">.</span>BaseHp <span class=\"token operator\">+</span> Hp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> HP:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">SumHp</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> breedName：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Breed<span class=\"token punctuation\">.</span>Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> AttackLevel:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Breed<span class=\"token punctuation\">.</span>AttackLevel</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">/// 种族</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Breed</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> AttackLevel <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\">// 为了区分是否为子种族重写值，我们可以如此判定</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> baseHp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> BaseHp</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>baseHp <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> Parent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> Parent<span class=\"token punctuation\">.</span>baseHp<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token keyword\">return</span> baseHp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">set</span> <span class=\"token punctuation\">&#123;</span> baseHp <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">// 可以通过这种方式为种族添加一个方法工厂化生成 Moster</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Moster</span> <span class=\"token function\">NewMoster</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Moster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Breed <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token comment\">// 可以通过指定父种族指定层级关系，不使用继承，存储内存地址，在子类和父类仅仅只是数据上不同时，可以避免子类数目过多</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Breed</span> Parent <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Parent<span class=\"token punctuation\">.</span>Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">-></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> AttackLevel:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">AttackLevel</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> BaseHp:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">BaseHp</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/05/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B9%9D%EF%BC%89%E5%A4%8D%E6%9D%82%E5%85%89%E7%85%A7/",
            "url": "https://www.fasty97.top/2022/05/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B9%9D%EF%BC%89%E5%A4%8D%E6%9D%82%E5%85%89%E7%85%A7/",
            "title": "Unity入门精要（九）复杂光照",
            "date_published": "2022-05-19T22:58:51.000Z",
            "content_html": "<h1 id=\"复杂光照\"><a class=\"markdownIt-Anchor\" href=\"#复杂光照\">#</a> 复杂光照</h1>\n<p>在之前的学习中，我们使用的都是单一光照，实际在游戏中可能存在多个光源，不同的光源会互相影响构成真正的光照系统，在这一节我们将实现一个真正可用的光照模型。</p>\n<h2 id=\"渲染路径-rendering-path\"><a class=\"markdownIt-Anchor\" href=\"#渲染路径-rendering-path\">#</a> 渲染路径 Rendering Path</h2>\n<blockquote>\n<p>📖 决定了光照是如何应用到 Unity Shader 中的。</p>\n</blockquote>\n<p>我们只有为 Shader 正确地选择和设置了需要的渲染路径，该 Shader 的光照计算才能被正确执行。</p>\n<p>🏷渲染路径的分类</p>\n<ul>\n<li>前向渲染路径（Forward Rendering Path）</li>\n<li>延迟渲染路径（Deferred Rendering Path）</li>\n<li>顶点照明渲染路径（Vertex Lit Rendering Path）—— 已经被弃用</li>\n</ul>\n<p>目前 unity 提供了新的渲染路径代替了原来的渲染路径。</p>\n<blockquote>\n<p>默认使用 Graphics 中的设置，可以在摄像机中对设置进行覆盖。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021127030.png\" alt=\"image-20220902112709918\"></p>\n<p>在 Shader Pass 中来指定该 Pass 使用的渲染路径：</p>\n<figure class=\"highlight scss\"><figcaption data-lang=\"Sass (Scss)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">Pass  </span><span class=\"token punctuation\">&#123;</span> <span class=\"token selector\">Tags  </span><span class=\"token punctuation\">&#123;</span>  <span class=\"token string\">\"LightMode\"</span>  =  <span class=\"token string\">\"ForwardBase\"</span>  <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>LightMode 标签可供使用的渲染路径：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021129823.png\" alt=\"image-20220902112959760\"></p>\n<p>💭为 Pass 指定正确的渲染路径对于 Unity 光照变量正确赋值具有重要意义。</p>\n<blockquote>\n<p>Unity 默认使用前向渲染光照路径.</p>\n</blockquote>\n<h3 id=\"前向渲染路径\"><a class=\"markdownIt-Anchor\" href=\"#前向渲染路径\">#</a> 前向渲染路径</h3>\n<blockquote>\n<p>前向渲染是传统渲染方式，也是我们常用的一种渲染路径。</p>\n</blockquote>\n<p>📖 原理：每进行一次完整的前向渲染，我们需要渲染该对象的渲染图元，并计算两个缓冲区的信息：颜色缓冲区和深度缓冲区。</p>\n<center>前向渲染伪代码</center>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021402465.png\" alt=\"image-20220902140220407\"></p>\n<p>每个光照下的物体都需要进行一次逐像素的 Pass，也就是在一个场景中，n 个物体 m 个光源的下，渲染场景需要 n*m 次 Pass。</p>\n<h3 id=\"unity中的前向渲染\"><a class=\"markdownIt-Anchor\" href=\"#unity中的前向渲染\">#</a> Unity 中的前向渲染</h3>\n<p>Unity 中照亮物体有 3 种方式：</p>\n<ol>\n<li>逐顶点处理 Spherical</li>\n<li>逐像素处理 Harmonics</li>\n<li>球谐函数 SH</li>\n</ol>\n<p>光源使用哪一种处理方式取决于它的类型和渲染模式。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021411344.png\" alt=\"image-20220902141112298\"></p>\n<blockquote>\n<p>将渲染类型设置为 Important（重要的）来告诉 Unity 这个光源是重要的，把它当成一个逐像素光源来处理。</p>\n<p>通常，Unity 会自动根据远近、强度等参数对光源的重要性进行排序。</p>\n</blockquote>\n<ul>\n<li>\n<p>场景中最亮的平行光总是按逐像素处理的。</p>\n</li>\n<li>\n<p>渲染模式被设置成 Not Important 的光源，会按逐顶点或者 SH 处理。・渲染模式被设置成 Important 的光源，会按逐像素处理。</p>\n</li>\n<li>\n<p>如果根据以上规则得到的逐像素光源数量小于 Quality Setting 中的逐像素光源数量 (Pixel Light Count)，会有更多的光源以逐像素的方式进行渲染。</p>\n</li>\n</ul>\n<h3 id=\"内置变量函数\"><a class=\"markdownIt-Anchor\" href=\"#内置变量函数\">#</a> 内置变量函数</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021420443.png\" alt=\"image-20220902142017381\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021420246.png\" alt=\"image-20220902142034183\"></p>\n<h3 id=\"相关参考\"><a class=\"markdownIt-Anchor\" href=\"#相关参考\">#</a> 相关参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85Mzg0NjAwMA==\">Unity 渲染路径 - 知乎 (zhihu.com)</span></p>\n<h2 id=\"顶点照明渲染路径\"><a class=\"markdownIt-Anchor\" href=\"#顶点照明渲染路径\">#</a> 顶点照明渲染路径</h2>\n<blockquote>\n<p>顶点照明渲染路径是对硬件配置要求最少、运算性能最高，但同时也是得到的效果最差的一种类型，它不支持那些逐像素才能得到的效果，例如阴影、法线映射、高精度的高光反射等。</p>\n</blockquote>\n<p>📖同理，使用逐顶点的方式进行光照计算。—— 是前向渲染的一个子集。</p>\n<h2 id=\"延迟渲染路径\"><a class=\"markdownIt-Anchor\" href=\"#延迟渲染路径\">#</a> 延迟渲染路径</h2>\n<blockquote>\n<p>当场景中包含大量实时光源时，前向选人的性能会急速下降。</p>\n</blockquote>\n<p>除了前向渲染中使用的颜色缓冲和深度缓冲之外，延迟渲染还需要利用额外的缓冲 —— 这些缓冲被统称为 GBuffer。</p>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021438497.png\" alt=\"image-20220902143817442\"></p>\n<p>在光照计算 Pass 中直接存储法线，表面情况等，从 Gbuff 取到数据后直接在光照 Pass 中计算，故而延迟渲染和场景复杂度不挂钩，通常就只使用两个 Pass 完成故而效率较高。</p>\n<h3 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\">#</a> 缺点</h3>\n<ul>\n<li>不支持真正的抗锯齿（anti-aliasing）功能。</li>\n<li>不能处理半透明物体。</li>\n<li>对显卡有一定要求。如果要使用延迟渲染的话，显卡必须支持 MRT（Multiple Render Targets）、Shader Mode 3.0 及以上、深度渲染纹理以及双面的模板缓冲。</li>\n</ul>\n<blockquote>\n<p>通常我们使用前向渲染路径类型：)</p>\n</blockquote>\n<h2 id=\"unity光源类型\"><a class=\"markdownIt-Anchor\" href=\"#unity光源类型\">#</a> Unity 光源类型</h2>\n<h2 id=\"阴影\"><a class=\"markdownIt-Anchor\" href=\"#阴影\">#</a> 阴影</h2>\n<h3 id=\"不透明物体的阴影\"><a class=\"markdownIt-Anchor\" href=\"#不透明物体的阴影\">#</a> 不透明物体的阴影</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131137666.png\" alt=\"image-20220913113734111\"></p>\n<center>通过MeshRender可以设置阴影</center>\n<p>将 CastShaows 设置为 <code>Two Sided</code>  可以双面渲染。</p>\n<blockquote>\n<p>Unity 选择使用一个额外的 Pass 来专门更新光源的阴影映射纹理，这个 Pass 就是 <code>LightMode</code>  标签被设置为 <code>ShadowCaster</code>  的 <code>Pass</code> 。</p>\n</blockquote>\n<ul>\n<li>接收阴影：对阴影纹理进行采样，最终把阴影纹理和光照进行相乘。</li>\n<li>投射阴影：加入到光源的阴影纹理计算中，通过指定的 Pass 来实现，如果使用了屏幕空间投射，还会生成一张摄像机的深度图。</li>\n</ul>\n<h4 id=\"接收阴影\"><a class=\"markdownIt-Anchor\" href=\"#接收阴影\">#</a> 接收阴影</h4>\n<ol>\n<li>在 BasePass 中包含内置文件：</li>\n</ol>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AutoLight.cginc\"</span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在顶点着色器的输出结构体中添加 <code>SHADOW_COORDS</code></li>\n</ol>\n<p>SHADOW_COORDS(2)</p>\n<ol start=\"3\">\n<li>在顶点着色器返回之前添加一个内置宏 <code>TRANSFER_SHADOW</code></li>\n</ol>\n<p>TRANSFER_SHADOW(o)</p>\n<ol start=\"4\">\n<li>在片元着色器中计算阴影值，使用 <code>SHADOW_ATTENUATION</code></li>\n</ol>\n<p>fixed shadow=SHADOW_ATTENUATION(i)</p>\n<blockquote>\n<p>📖PS: 由于这些宏中会使用上下文变量来进行相关计算，例如 TRANSFER_SHADOW 会使用 v.vertex 或 a.pos 来计算坐标，因此为了能够让这些宏正确工作，我们需要保证自定义的变量名和这些宏中使用的变量名相匹配。我们需要保证：a2f 结构体中的顶点坐标变量名必须是 vertex，顶点着色器的输出结构体 v2f 必须命名为 v，且 v2f 中的顶点位置变量必须命名为 pos。</p>\n</blockquote>\n<h3 id=\"透明物体的阴影\"><a class=\"markdownIt-Anchor\" href=\"#透明物体的阴影\">#</a> 透明物体的阴影</h3>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/03/07/Unity%E6%88%AA%E5%9B%BE%E4%BF%9D%E5%AD%98/",
            "url": "https://www.fasty97.top/2022/03/07/Unity%E6%88%AA%E5%9B%BE%E4%BF%9D%E5%AD%98/",
            "title": "Unity截图保存",
            "date_published": "2022-03-07T10:20:39.000Z",
            "content_html": "<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<p>以下是关于一个游戏存档的设计，包括截取游戏画面，记录时间和存储数据等内容，记录一下，以备以后回顾。</p>\n<blockquote>\n<p>大致的效果如下，将所有存档展示出来，有截图对应，点选载入存档。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220302204934.png\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> Application<span class=\"token punctuation\">.</span>persistentDataPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/aa111.png\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"PATH:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">path</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ScreenCapture<span class=\"token punctuation\">.</span><span class=\"token function\">CaptureScreenshot</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 截图并保存截图文件</span></pre></td></tr></table></figure><blockquote>\n<p>结合存档系统，就可以设计出如下所示的存档功能</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220302230034.gif\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 游戏管理器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameManager</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">SingletonManager<span class=\"token punctuation\">&lt;</span>GameManager<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> startScene <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> startLine <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Unity",
                "存档系统",
                "截图"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/12/07/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%94%EF%BC%89Shader%E5%85%A5%E9%97%A8/",
            "url": "https://www.fasty97.top/2021/12/07/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%94%EF%BC%89Shader%E5%85%A5%E9%97%A8/",
            "title": "Unity入门精要（五）Shader入门",
            "date_published": "2021-12-07T07:31:05.000Z",
            "content_html": "",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/12/04/shaderGraph%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E9%87%8A%E4%B9%89/",
            "url": "https://www.fasty97.top/2021/12/04/shaderGraph%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E9%87%8A%E4%B9%89/",
            "title": "shaderGraph常用功能释义",
            "date_published": "2021-12-04T05:56:51.000Z",
            "content_html": "<blockquote>\n<p>本文用于记录一些使用 Shader 实现的基础性效果</p>\n<p>Unity2020.3.8f1</p>\n</blockquote>\n<h1 id=\"基础设置\"><a class=\"markdownIt-Anchor\" href=\"#基础设置\">#</a> 基础设置</h1>\n<p>创建一个空 Shader，可以设置 Graph 以满足需要。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204140159.png\" alt=\"image-20211204140152535\"></p>\n<h1 id=\"顶点着色器\"><a class=\"markdownIt-Anchor\" href=\"#顶点着色器\">#</a> 顶点着色器</h1>\n<h2 id=\"法线外扩\"><a class=\"markdownIt-Anchor\" href=\"#法线外扩\">#</a> 法线外扩</h2>\n<blockquote>\n<p>可以改变一个模型的大小</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204141255.png\" alt=\"image-20211204141255134\"></p>\n<p>其中获取法线方向也可以使用：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204144226.png\" alt=\"image-20211204144226426\"></p>\n<p>通过将法线位置（物体本地位置）归一化得到法线，然后乘以一个数值来实现。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204141734.gif\" alt=\"112\"></p>\n<h2 id=\"模型裁切\"><a class=\"markdownIt-Anchor\" href=\"#模型裁切\">#</a> 模型裁切</h2>\n<blockquote>\n<p>原理： <code>AlphaClip</code>  的值如果比 <code>Alpha</code>  的值大，则会不显示</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204153235.png\" alt=\"image-20211204153235344\"></p>\n<p>简单效果预览：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204153431.gif\" alt=\"112\"></p>\n<p>加强版本</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207153433.png\" alt=\"image-20211207153426670\"></p>\n<p>效果预览</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207153856.gif\" alt=\"112\"></p>\n<h3 id=\"remap-重映射\"><a class=\"markdownIt-Anchor\" href=\"#remap-重映射\">#</a> Remap 重映射</h3>\n<blockquote>\n<p>根据输入 In 在 InMinMax 中的插值，计算输出。(按照比例位置输出)</p>\n</blockquote>\n<p>比如输入 In 为 0，InMinMax 时（-10，10），那么 In 在 InMinMax 的<br>\n位置就是 0.5，如果 OutMinMax 为（0，10），那么输出 Out 就是 5<br>\n 公式为： Out = OutMinMax.x + (In - InMinMax.x) * (OutMinMax.y - OutMinMax.x) / (InMinMax.y -<br>\nInMinMax.x)</p>\n<h3 id=\"one-minus-1减去\"><a class=\"markdownIt-Anchor\" href=\"#one-minus-1减去\">#</a> One Minus 1 减去</h3>\n<blockquote>\n<p>输出 1-in</p>\n</blockquote>\n<h3 id=\"step-阶梯\"><a class=\"markdownIt-Anchor\" href=\"#step-阶梯\">#</a> Step 阶梯</h3>\n<blockquote>\n<p>输入 in 大于等于 Edge 取 1，否则取 0</p>\n</blockquote>\n<h2 id=\"溶解\"><a class=\"markdownIt-Anchor\" href=\"#溶解\">#</a> 溶解</h2>\n<blockquote>\n<p>原理： <code>AlphaClip</code>  的值如果比 <code>Alpha</code>  的值大，则会不显示</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207162307.gif\" alt=\"112\"></p>\n<h3 id=\"边缘发光\"><a class=\"markdownIt-Anchor\" href=\"#边缘发光\">#</a> 边缘发光</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207163904.png\" alt=\"image-20211207163904223\"></p>\n<p>效果预览</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207164030.gif\" alt=\"112\"></p>\n<h3 id=\"subtract-减法\"><a class=\"markdownIt-Anchor\" href=\"#subtract-减法\">#</a> Subtract 减法</h3>\n<blockquote>\n<p>A-B</p>\n</blockquote>\n<h3 id=\"saturate-0-1\"><a class=\"markdownIt-Anchor\" href=\"#saturate-0-1\">#</a> Saturate 0-1</h3>\n<blockquote>\n<p>将输入控制在 [0-1]</p>\n</blockquote>\n<h2 id=\"边缘发光-2\"><a class=\"markdownIt-Anchor\" href=\"#边缘发光-2\">#</a> 边缘发光</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207165311.png\" alt=\"image-20211207165311854\"></p>\n<h2 id=\"简单卡通效果\"><a class=\"markdownIt-Anchor\" href=\"#简单卡通效果\">#</a> 简单卡通效果</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207171547.png\" alt=\"image-20211207171547100\"></p>\n<h3 id=\"dot-product-点乘\"><a class=\"markdownIt-Anchor\" href=\"#dot-product-点乘\">#</a> Dot Product 点乘</h3>\n<blockquote>\n<p>计算 2 个向量点乘</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207171656.png\" alt=\"image-20211207171656516\"></p>\n<h2 id=\"表面叠加\"><a class=\"markdownIt-Anchor\" href=\"#表面叠加\">#</a> 表面叠加</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207173140.png\" alt=\"image-20211207173140006\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207173246.gif\" alt=\"112\"></p>\n<h3 id=\"tiling-and-offset-平铺和偏移\"><a class=\"markdownIt-Anchor\" href=\"#tiling-and-offset-平铺和偏移\">#</a> Tiling And Offset 平铺和偏移</h3>\n<p>这个功能我们会经常用到，一般只要有贴图的材质上都会有 Tiling And Offset。<br>\n将输入参数 UV 的值，通过 Tiling 和 Offset 改变平铺和偏移。</p>\n<h2 id=\"像素化\"><a class=\"markdownIt-Anchor\" href=\"#像素化\">#</a> 像素化</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207182510.gif\" alt=\"112\"></p>\n<h2 id=\"粒子消融\"><a class=\"markdownIt-Anchor\" href=\"#粒子消融\">#</a> 粒子消融</h2>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/12/03/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%9B%9B%EF%BC%89%20%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/",
            "url": "https://www.fasty97.top/2021/12/03/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%9B%9B%EF%BC%89%20%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/",
            "title": "Unity入门精要（四） 数学基础",
            "date_published": "2021-12-03T15:18:37.000Z",
            "content_html": "<blockquote>\n<p>最常使用到的就是矢量和矩阵（数学的分支之一 —— 线性代数）</p>\n</blockquote>\n<h1 id=\"笛卡尔坐标系\"><a class=\"markdownIt-Anchor\" href=\"#笛卡尔坐标系\">#</a> 笛卡尔坐标系</h1>\n<blockquote>\n<p>大部分的计算位置、距离和角度等变量都是在笛卡尔坐标系下进行的。</p>\n</blockquote>\n<h2 id=\"二维笛卡尔坐标系\"><a class=\"markdownIt-Anchor\" href=\"#二维笛卡尔坐标系\">#</a> 二维笛卡尔坐标系</h2>\n<ul>\n<li>一个特殊的位置，原点，它是整个坐标系的中心</li>\n<li>两条过原点相互垂直的矢量，x 轴和 y 轴。</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203134502.png\" alt=\"image-20211203134455788\"></p>\n<blockquote>\n<p>不同的渲染方式，坐标系不同</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203134650.png\" alt=\"image-20211203134650147\"></p>\n<h2 id=\"三维笛卡尔坐标系\"><a class=\"markdownIt-Anchor\" href=\"#三维笛卡尔坐标系\">#</a> 三维笛卡尔坐标系</h2>\n<ul>\n<li>三个坐标轴相互垂直，长度为 1，这样的基矢量被称为标准正交基</li>\n<li>这三个坐标轴被称为是基矢量</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203134755.png\" alt=\"image-20211203134755628\"></p>\n<h2 id=\"左手坐标系和右手坐标系\"><a class=\"markdownIt-Anchor\" href=\"#左手坐标系和右手坐标系\">#</a> 左手坐标系和右手坐标系</h2>\n<blockquote>\n<p>在二维笛卡尔坐标系中，我们可以通过旋转将任何的坐标系重合，也就是说所有的二维笛卡尔坐标系都是等价的。</p>\n<p>但对于 <code>三维坐标系</code> ，有时不能靠这种旋转来使 2 个不同朝向的坐标系重合。</p>\n</blockquote>\n<h3 id=\"左手坐标系\"><a class=\"markdownIt-Anchor\" href=\"#左手坐标系\">#</a> 左手坐标系</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203135648.png\" alt=\"image-20211203135647988\"></p>\n<h3 id=\"右手坐标系\"><a class=\"markdownIt-Anchor\" href=\"#右手坐标系\">#</a> 右手坐标系</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203135727.png\" alt=\"image-20211203135727456\"></p>\n<h2 id=\"unity的坐标系\"><a class=\"markdownIt-Anchor\" href=\"#unity的坐标系\">#</a> Unity 的坐标系</h2>\n<ul>\n<li>在模型空间和世界空间中，使用左手坐标系</li>\n<li>观察空间，使用右手坐标系，z 轴坐标的减少意味着场景深度的增加</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203140041.png\" alt=\"image-20211203140041620\"></p>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h2>\n<ol>\n<li>右手坐标系</li>\n<li></li>\n</ol>\n<h1 id=\"点和矢量\"><a class=\"markdownIt-Anchor\" href=\"#点和矢量\">#</a> 点和矢量</h1>\n<h1 id=\"矩阵\"><a class=\"markdownIt-Anchor\" href=\"#矩阵\">#</a> 矩阵</h1>\n<h1 id=\"矩阵变换\"><a class=\"markdownIt-Anchor\" href=\"#矩阵变换\">#</a> 矩阵变换</h1>\n<h1 id=\"坐标空间\"><a class=\"markdownIt-Anchor\" href=\"#坐标空间\">#</a> 坐标空间</h1>\n<h1 id=\"法线变换\"><a class=\"markdownIt-Anchor\" href=\"#法线变换\">#</a> 法线变换</h1>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/11/30/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%89%EF%BC%89UnityShader/",
            "url": "https://www.fasty97.top/2021/11/30/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%89%EF%BC%89UnityShader/",
            "title": "Shader入门精要（三）UnityShader",
            "date_published": "2021-11-30T14:30:18.000Z",
            "content_html": "<h1 id=\"第三章-unityshader基础\"><a class=\"markdownIt-Anchor\" href=\"#第三章-unityshader基础\">#</a> 第三章 UnityShader 基础</h1>\n<blockquote>\n<p>正式进入 shader 学习了，好耶！</p>\n</blockquote>\n<p>使用 UnityShader 的流程：</p>\n<ol>\n<li>创建一个材质</li>\n<li>创建一个 UnityShader，为材质添加</li>\n<li>把材质赋给对象</li>\n<li>调整 shader 属性</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130223524.png\" alt=\"image-20211130223524763\"></p>\n<h2 id=\"创建shader\"><a class=\"markdownIt-Anchor\" href=\"#创建shader\">#</a> 创建 Shader</h2>\n<p>Unity 包含了多种 shader 模板供我们使用。</p>\n<table>\n<thead>\n<tr>\n<th>Standard Surface Shader</th>\n<th>标准光照模型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Unlit Shader</td>\n<td>不包含光照（但包含雾效）</td>\n</tr>\n<tr>\n<td>mage Effect Shader</td>\n<td>实现各种屏幕后处理效果</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Unity Shader 的导入面板还可以方便地查看其使用的渲染队列（Render queue）、是否关闭批处理（Disablebatching）、属性列表（Properties）等信息。</p>\n<h2 id=\"shaderlab\"><a class=\"markdownIt-Anchor\" href=\"#shaderlab\">#</a> ShaderLab</h2>\n<p>ShaderLab 是 Unity 为我们抽象的一种 shader 语言，可以更方便的通用。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130224529.png\" alt=\"image-20211130224529408\"></p>\n<h3 id=\"基本结构\"><a class=\"markdownIt-Anchor\" href=\"#基本结构\">#</a> 基本结构</h3>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"ShaderName\"</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tProperties<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token comment\">// 属性</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display name\"</span><span class=\"token punctuation\">,</span> PropertyType<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>DefaultValue</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tSubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">//A 着色器</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tSubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token comment\">//B 着色器</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tFallback <span class=\"token string\">\"VertexLit\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"属性类型\"><a class=\"markdownIt-Anchor\" href=\"#属性类型\">#</a> 属性类型</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130225328.png\" alt=\"image-20211130225328452\"></p>\n<p>根据以上属性得到的 Shader 放置在材质上效果：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201122201.png\" alt=\"image-20211201122154053\"></p>\n<h3 id=\"subshader\"><a class=\"markdownIt-Anchor\" href=\"#subshader\">#</a> SubShader</h3>\n<blockquote>\n<p>每个 Unityshader 可以包含多个 SubShader， <code>最少要有一个</code> 。</p>\n</blockquote>\n<p>加载时会自动选择第一个可以执行的 SubShader，如果都不支持的话，使用 FallBack 指定的 shader。（为了解决不同显卡的差异）</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 可选的</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span>Tages<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 可选的</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span>RenderSetup<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Pass <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//other Passes</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>每个 Pass 定义了一次完整的渲染流程，Pass 过多，性能下降。</p>\n<h4 id=\"状态设置\"><a class=\"markdownIt-Anchor\" href=\"#状态设置\">#</a> 状态设置</h4>\n<p>在 SubShader 中我们可以设置渲染的一些状态。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201123019.png\" alt=\"image-20211201123019333\"></p>\n<p>在 SubShader 中设置的状态会应用到所有的 Pass，也可以在 Pass 中单独设置。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Tags<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"TagName1\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Value1\"</span> <span class=\"token string\">\"TagName2\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"CC\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//Tags 是一些 str 键值对</span></pre></td></tr></table></figure><h4 id=\"subshader标签类型\"><a class=\"markdownIt-Anchor\" href=\"#subshader标签类型\">#</a> SubShader 标签类型</h4>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201123359.png\" alt=\"image-20211201123359479\"></p>\n<blockquote>\n<p>这些标签只能在 SubShader 中申明不可在 Pass 中申明</p>\n</blockquote>\n<h3 id=\"pass\"><a class=\"markdownIt-Anchor\" href=\"#pass\">#</a> Pass</h3>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Pass<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span>Name<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span>Tags<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span>RenderSetup<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//Other</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以通过 Name 来使用 Pass，例如：</p>\n<p><code>UsePass &quot;MyShader/PASSNAME&quot;</code></p>\n<blockquote>\n<p>默认 Unity 会将所有 Pass 名称转换为大写，所以使用时需要使用大写名称</p>\n</blockquote>\n<h4 id=\"pass标签类型\"><a class=\"markdownIt-Anchor\" href=\"#pass标签类型\">#</a> Pass 标签类型</h4>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201124000.png\" alt=\"image-20211201124000121\"></p>\n<ul>\n<li>\n<p>・UsePass：如我们之前提到的一样，可以使用该命令来复用其他 Unity Shader 中的 Pass；</p>\n</li>\n<li>\n<p>・GrabPass：该 Pass 负责抓取屏幕并将结果存储在一张纹理中，以用于后续的 Pass 处理（详见 10.2.2 节）。</p>\n</li>\n</ul>\n<h3 id=\"fallback\"><a class=\"markdownIt-Anchor\" href=\"#fallback\">#</a> FallBack</h3>\n<p>在 SubShader 后定义，如果上述的都不支持，用这个最低级的 Shader 吧！</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Fallback <span class=\"token string\">\"name\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Fallback off</pre></td></tr></table></figure><blockquote>\n<p>FallBack 还会影响阴影的透射</p>\n</blockquote>\n<h2 id=\"unity-shader形式\"><a class=\"markdownIt-Anchor\" href=\"#unity-shader形式\">#</a> Unity Shader 形式</h2>\n<p>着色器代码可以写在 SubShader 中（表面着色器做法），也可以写在 Pass 语义块中（顶点 / 片元着色器和固定函数着色器的做法）。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"MyShader\"</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Properties<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 所需的各种属性</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 真正意义上的 shader 代码会放在这里</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 表面着色器（Surface Shader）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 顶点 / 片元着色器（Vertex/Fragment Shader)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 固定函数着色器（Fixed Function Shader）</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 和上一哥 SubShader 类似</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"表面着色器surface-shader\"><a class=\"markdownIt-Anchor\" href=\"#表面着色器surface-shader\">#</a> 表面着色器 (Surface Shader)</h3>\n<blockquote>\n<p>是 Unity 自己创造的一种着色器代码类型，需要的代码量少，渲染代价比较大</p>\n</blockquote>\n<p>在背后，任然转换为顶点片元着色器。</p>\n<pre><code class=\"language-glSL\">Shader &quot;Custom/Simple&quot;&#123;\n    SubShader&#123;\n        Tags&#123;&quot;RenderType&quot;= &quot;Opaque&quot;&#125;\n        CGPROGRAM\n        #pragma suface surf lambert\n            struct Input&#123;\n                float4 color: COLOR;\n            &#125;\n        void surf(Input In,in out SurfaceOutput o)&#123;\n            o.Albedo=1;\n        &#125;\n        ENDCG\n    &#125;\n    Fallback &quot;Diffuse&quot;\n&#125;\n</code></pre>\n<p>表面着色器不需要关心，有多少个 Pass，每个 Pass 如何渲染</p>\n<p>CGPROGRAM 和 ENDCG 之间的代码是使用 CG/HLSL 编写的，也就是说，我们需要把 CG/HLSL 语言嵌套在 ShaderLab 语言中。</p>\n<h3 id=\"顶点片元着色器vertexfragment-shader\"><a class=\"markdownIt-Anchor\" href=\"#顶点片元着色器vertexfragment-shader\">#</a> 顶点片元着色器（Vertex/Fragment Shader）</h3>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"Custom/Simple VertexFragment Shader\"</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Pass<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">vertex vert</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">fragment frag float4 <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span>float4 v<span class=\"token operator\">:</span> POSITION<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>SV_POSITION<span class=\"token punctuation\">&#123;</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>UNITY_MATRIX_MVP<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>SV_Target<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">fixed4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>顶点 / 片元着色器的代码也需要定义在 CGPROGRAM 和 ENDCG 之间，但不同的是，顶点 / 片元着色器是写在 Pass 语义块内，而非 SubShader 内的.</p>\n<h3 id=\"固定函数着色器\"><a class=\"markdownIt-Anchor\" href=\"#固定函数着色器\">#</a> 固定函数着色器</h3>\n<blockquote>\n<p>对于一些比较老旧的设备，不支持可编程管线着色器，就需要使用固定函数着色器</p>\n</blockquote>\n<h3 id=\"使用哪种形式\"><a class=\"markdownIt-Anchor\" href=\"#使用哪种形式\">#</a> 使用哪种形式？</h3>\n<ul>\n<li>如果你想和各种光源打交道，你可能更喜欢使用表面着色器，但需要小心它在移动平台的性能表现。</li>\n<li>如果你需要使用的光照数目非常少，例如只有一个平行光，那么使用顶点 / 片元着色器是一个更好的选择。</li>\n<li>最重要的是，如果你有很多自定义的渲染效果，那么请选择顶点 / 片元着色器。</li>\n</ul>\n<blockquote>\n<p>至此，第三章完！</p>\n</blockquote>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/10/17/Unity%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2021/10/17/Unity%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "title": "Unity中的单例模式",
            "date_published": "2021-10-17T05:26:56.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<p>单例模式在 Unity 中是一种非常常用的方式，和传统单例不同，在 Unity 中针对不同的情况可分为以下几种方式❤️ 。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211017134711.jpg\" alt=\"87590528_p0\"></p>\n<h2 id=\"普通单例\"><a class=\"markdownIt-Anchor\" href=\"#普通单例\">#</a> 普通单例</h2>\n<ul>\n<li>适用于普通的 Mono 类。</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">singleton</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 单例</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                _instance<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"单例管理器\"><a class=\"markdownIt-Anchor\" href=\"#单例管理器\">#</a> 单例管理器</h2>\n<ul>\n<li>适用于继承自 Mono 的类。</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">singleton</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// 单例管理器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonManager<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token comment\">// 在场景中寻找是否已经存在相同的管理器</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go<span class=\"token operator\">=</span> GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>go<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> go<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ins <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GameObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                _instance <span class=\"token operator\">=</span> ins<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"创建 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> \"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 防止加载场景销毁</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token function\">DontDestroyOnLoad</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"单例scriptableobject\"><a class=\"markdownIt-Anchor\" href=\"#单例scriptableobject\">#</a> 单例 ScriptableObject</h2>\n<ul>\n<li>适用于 ScriptableObject 单例数据存储</li>\n<li>需要放置在 Resource 目录下用于读取</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">singleton</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// So 单例</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonSoManager<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Object</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ins<span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ins<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" 不存在！！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                _instance <span class=\"token operator\">=</span> ins<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/10/16/Async%E4%BB%A3%E6%9B%BF%E5%8D%8F%E7%A8%8B/",
            "url": "https://www.fasty97.top/2021/10/16/Async%E4%BB%A3%E6%9B%BF%E5%8D%8F%E7%A8%8B/",
            "title": "Async代替协程",
            "date_published": "2021-10-16T13:51:24.000Z",
            "content_html": "<blockquote>\n<p>在之前 Unity 想要实现延迟执行或者是等待，要么只能使用自己计数的方法，要么使用协程。</p>\n</blockquote>\n<h1 id=\"ep1-协程\"><a class=\"markdownIt-Anchor\" href=\"#ep1-协程\">#</a> Ep.1 协程</h1>\n<p>首先让我们来看一个协程示例：</p>\n<p>示例是循环 10 次，每次等待 0.2s。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>协程示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 启动协程</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"ep2-async-异步\"><a class=\"markdownIt-Anchor\" href=\"#ep2-async-异步\">#</a> Ep.2 Async 异步</h1>\n<blockquote>\n<p>Async 异步的概念是微软基于多线程提出的 Task 解决方案，相比传统多线程具有很多优势。</p>\n</blockquote>\n<ul>\n<li>❤️相比协程来说，异步的方式不需要搭建基础的协程框架（ <code>不需要新创建一个方法</code> ），可以直接在方法中使用关键字实现等待。</li>\n<li>不需要启动</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>Async示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AsyncFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"ep3-解决痛点\"><a class=\"markdownIt-Anchor\" href=\"#ep3-解决痛点\">#</a> Ep.3 解决痛点</h1>\n<blockquote>\n<p>其实 async 还有其他的优势，让我们来看看这些例子😺</p>\n</blockquote>\n<h2 id=\"协程队列\"><a class=\"markdownIt-Anchor\" href=\"#协程队列\">#</a> 协程队列</h2>\n<p>🌓 有时我们需要这样一种情况，需要在 A 执行结束后执行 B，B 执行结束后执行 C。</p>\n<h3 id=\"协程解决方案\"><a class=\"markdownIt-Anchor\" href=\"#协程解决方案\">#</a> 协程解决方案</h3>\n<p>可以看到，通用的解决方案需要创建多个协程方法，并创建一个总协程方法来为所有参与协程进行排序。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全部执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"异步解决方案\"><a class=\"markdownIt-Anchor\" href=\"#异步解决方案\">#</a> 异步解决方案</h3>\n<p>按照协程的思路我们可以这样来替换。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">Fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FunEnd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"特殊使用\"><a class=\"markdownIt-Anchor\" href=\"#特殊使用\">#</a> 特殊使用</h2>\n<h3 id=\"持续执行\"><a class=\"markdownIt-Anchor\" href=\"#持续执行\">#</a> 持续执行</h3>\n<p>可以使用如下的方式来持续执行一系列的动作！😏</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Rote</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> endTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector3</span> dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Time<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> endTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> dir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 线程让步，让线程池重新排</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"多任务并行\"><a class=\"markdownIt-Anchor\" href=\"#多任务并行\">#</a> 多任务并行</h3>\n<p>可以为 Start 方式设定异步 Async</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tasks<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Task<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 异步启动多个 Task 任务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        tasks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">WhenAll</span><span class=\"token punctuation\">(</span>tasks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全部执行完\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"ep4-总结\"><a class=\"markdownIt-Anchor\" href=\"#ep4-总结\">#</a> Ep.4 总结</h1>\n<blockquote>\n<p>使用这样 Async 方式，大大简化了协程的使用复杂度，简化了代码数量，重要的是可以将一些 Task 的特性使用出来。</p>\n<p>✔️同时，Unity 再也不是虚假的多线程了！</p>\n</blockquote>\n",
            "tags": [
                "协程",
                "Async"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/13/%E5%85%B3%E4%BA%8ECinemachine%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E6%91%84%E5%83%8F%E6%9C%BA/",
            "url": "https://www.fasty97.top/2021/09/13/%E5%85%B3%E4%BA%8ECinemachine%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E6%91%84%E5%83%8F%E6%9C%BA/",
            "title": "关于Cinemachine第三人称摄像机",
            "date_published": "2021-09-13T11:35:35.000Z",
            "content_html": "<h2 id=\"参考视频\"><a class=\"markdownIt-Anchor\" href=\"#参考视频\">#</a> 参考视频</h2>\n<iframe width=\"100%\" height=\"600\" src=\"//player.bilibili.com/player.html?aid=669740085&bvid=BV1Xa4y1j7iP&cid=237960877&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n",
            "tags": [
                "Cinemachine"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "url": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "title": "Shader入门精要（二）",
            "date_published": "2021-09-10T07:00:15.000Z",
            "content_html": "<blockquote>\n<p>因为第一章内容太少，就再更一章吧～</p>\n</blockquote>\n<h1 id=\"第二篇-渲染流水线\"><a class=\"markdownIt-Anchor\" href=\"#第二篇-渲染流水线\">#</a> 第二篇 渲染流水线</h1>\n<p>Q: 渲染流水线在干什么？</p>\n<p>A: 渲染流水线的最终目的在于生成或者说是渲染一张二维纹理，即我们在电脑屏幕上看到的所有效果。它的输入是一个虚拟摄像机、一些光源、一些 Shader 以及纹理等。</p>\n<p>使用流水线的好处在于可以提高单位时间的生产量。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210911215359.png\" alt=\"image-20210911215352715\"></p>\n<p>流水线系统中决定最后生产速度的是最慢的工序所需的时间 ( <code>短板效应</code> )</p>\n<p>理想情况下，如果把一个非流水线系统分成 n 个流水线阶段，且每个阶段耗费时间相同的话，会使整个系统得到 n 倍的速度提升。（多线渲染？）</p>\n<h2 id=\"渲染流程概念上的流水线\"><a class=\"markdownIt-Anchor\" href=\"#渲染流程概念上的流水线\">#</a> 渲染流程 (概念上的流水线)</h2>\n<blockquote>\n<p>渲染流程分成 3 个阶段：应用阶段（Application Stage）、几何阶段（Geometry Stage）、光栅化阶段（Rasterizer Stage）。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210911215704.png\" alt=\"image-20210911215704318\"></p>\n<h3 id=\"应用阶段\"><a class=\"markdownIt-Anchor\" href=\"#应用阶段\">#</a> 应用阶段</h3>\n<p>这个阶段 <code>是由我们的应用主导</code> 的，因此通常由 <code>CPU负责实现</code> 。主要包含三个任务：</p>\n<pre>Error: Evaluation failed: TypeError: Cannot read property 'initialize' of undefined\n    at __puppeteer_evaluation_script__:3:32</pre><h3 id=\"几何阶段\"><a class=\"markdownIt-Anchor\" href=\"#几何阶段\">#</a> 几何阶段</h3>\n<p>几何阶段用于处理所有和我们要绘制的几何相关的事情。例如，决定需要绘制的图元是什么，怎样绘制它们，在哪里绘制它们。这一阶段 <code>通常在GPU上</code> 进行。几何阶段负责和每个渲染图元打交道，进行逐顶点、逐多边形的操作。这个阶段 <code>可以进一步分成更小的流水线阶段</code> ，这在下一章中会讲到。几何阶段的一个重要任务就是 <code>把顶点坐标变换到屏幕空间中</code> ，再交给光栅器进行处理。通过对输入的渲染图元进行多步处理后，这一阶段将会输出屏幕空间的二维顶点坐标、每个顶点对应的深度值、着色等相关信息，并传递给下一个阶段。</p>\n<h3 id=\"光栅化阶段\"><a class=\"markdownIt-Anchor\" href=\"#光栅化阶段\">#</a> 光栅化阶段</h3>\n<p>这一阶段将会使用上个阶段传递的数据来产生屏幕上的像素，并 <code>渲染出最终的图像</code> 。 <code>这一阶段也是在GPU上运行</code> 。光栅化的任务主要是 <code>决定每个渲染图元中的哪些像素应该被绘制在屏幕上</code> 。它需要对上一个阶段得到的逐顶点数据（例如纹理坐标、顶点颜色等）进行插值，然后再进行逐像素处理。和上一个阶段类似，光栅化阶段也 <code>可以分成更小的流水线阶段</code> 。</p>\n<h2 id=\"cpu与gpu通信\"><a class=\"markdownIt-Anchor\" href=\"#cpu与gpu通信\">#</a> CPU 与 GPU 通信</h2>\n<blockquote>\n<p>真实的流水线🔨</p>\n</blockquote>\n<p>渲染流水线的起点是 CPU，即应用阶段。应用阶段大致可分为下面 3 个阶段：</p>\n<pre>Error: Evaluation failed: TypeError: Cannot read property 'initialize' of undefined\n    at __puppeteer_evaluation_script__:3:32</pre><h3 id=\"把数据加载到显存中\"><a class=\"markdownIt-Anchor\" href=\"#把数据加载到显存中\">#</a> 把数据加载到显存中</h3>\n<p>数据需要从硬盘到内存再到显存，显存读取速度快！加载之后就会丢弃，为了运算，某些数据不应该被丢弃，</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210911221304.png\" alt=\"image-20210911221304571\"></p>\n<p>因为从硬盘加载到 RAM 的过程是十分耗时的，故我们要编写程序指导 CPU ，不要丢弃。</p>\n<blockquote>\n<p>9.14 继续更新啦😃</p>\n</blockquote>\n<h3 id=\"设置渲染状态\"><a class=\"markdownIt-Anchor\" href=\"#设置渲染状态\">#</a> 设置渲染状态</h3>\n<blockquote>\n<p>这些状态定义了场景中的网格是怎样被渲染的</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210914131155.png\" alt=\"image-20210914131148894\"></p>\n<center>在同一状态下渲染3个网格。由于没有更改渲染状态，因此3个网格的外观看起来像是同一种材质的物体</center>\n<h3 id=\"调用draw-call\"><a class=\"markdownIt-Anchor\" href=\"#调用draw-call\">#</a> 调用 Draw Call</h3>\n<p>在设置好渲染状态后，就开始绘制了。 <code>由CPU发起，GPU接收</code> 。</p>\n<blockquote>\n<p>11.30 继续更新 😺</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130192907.png\" alt=\"image-20211130192900305\"></p>\n<h2 id=\"gpu流水线\"><a class=\"markdownIt-Anchor\" href=\"#gpu流水线\">#</a> GPU 流水线</h2>\n<blockquote>\n<p>当 GPU 收到渲染命令后，进行一系列流水线操作，将图元渲染到屏幕上</p>\n</blockquote>\n<p>GPU 主要实现 几何阶段和光栅化阶段。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130193451.png\" alt=\"image-20211130193451213\"></p>\n<p>其中说明如下：</p>\n<ul>\n<li>完全可编程控制： 顶点着色器、曲面细分着色器、几何着色器、片元着色器</li>\n<li>可配置不可编程：逐片元、裁剪、</li>\n<li>不可控制：屏幕映射、三角形设置、三角形遍历</li>\n<li><code>实现为必须由开发者实现，虚线为可选</code></li>\n</ul>\n<h3 id=\"顶点着色器\"><a class=\"markdownIt-Anchor\" href=\"#顶点着色器\">#</a> 顶点着色器</h3>\n<p>完全可编程</p>\n<blockquote>\n<p>用于实现顶点的空间变换、顶点着色</p>\n</blockquote>\n<ol>\n<li>输入来自于 CPU</li>\n<li>处理单位为顶点</li>\n<li>不可以创建或销毁顶点、无法得到顶点之间的关系</li>\n<li>处理速度很快</li>\n<li>进行坐标变换和顶点光照</li>\n<li>还可以输出后续所需要的一些数据</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130214131.png\" alt=\"image-20211130214131052\"></p>\n<p>核心任务：** 顶点坐标从 <code>模型空间</code> 转换到 <code>齐次裁剪空间</code></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130214642.png\" alt=\"image-20211130214642514\"></p>\n<p>转换到齐次裁减空间后，硬件通过做透视触发得到 <code>NDC（设备坐标）</code> 下的坐标。</p>\n<blockquote>\n<p>NDC OpenGL (Unity) 范围在【-1,1】</p>\n</blockquote>\n<h3 id=\"曲面细分着色器\"><a class=\"markdownIt-Anchor\" href=\"#曲面细分着色器\">#</a> 曲面细分着色器</h3>\n<p>是一个可选的着色器，它用于细分图元</p>\n<h3 id=\"几何着色器\"><a class=\"markdownIt-Anchor\" href=\"#几何着色器\">#</a> 几何着色器</h3>\n<p>是一个可选的着色器，它可以被用于执行逐图元（Per-Primitive）的着色操作，或者被用于产生更多的图元</p>\n<h3 id=\"裁剪\"><a class=\"markdownIt-Anchor\" href=\"#裁剪\">#</a> 裁剪</h3>\n<p><strong>可配置但不可编程。</strong></p>\n<blockquote>\n<p>这一阶段的目的是将那些不在摄像机视野内的顶点裁剪掉，并剔除某些三角图元的面片</p>\n</blockquote>\n<p><code>用于完成裁剪掉只有部分在摄像机范围内出现的物体。</code></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130215204.png\" alt=\"image-20211130215204031\"></p>\n<p>经过裁剪，会在相交处生成新的点，同时原先的旧的点（在范围外）将被删除掉。</p>\n<h3 id=\"屏幕映射\"><a class=\"markdownIt-Anchor\" href=\"#屏幕映射\">#</a> 屏幕映射</h3>\n<p>输入三维坐标，二维屏幕坐标</p>\n<blockquote>\n<p>任务：把每个图元的 X 和 y 坐标转换到屏幕坐标系</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130215609.png\" alt=\"image-20211130215609144\"></p>\n<p>在 OpenGL 中，原点位于左下角，在 DirectX 中，原点在左上角</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130215806.png\" alt=\"image-20211130215806421\"></p>\n<h3 id=\"三角形遍历\"><a class=\"markdownIt-Anchor\" href=\"#三角形遍历\">#</a> 三角形遍历</h3>\n<blockquote>\n<p>检查每个像素是否被一个三角网格所覆盖。如果被覆盖就生成一个 ` 片元，输出片元序列。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130220052.png\" alt=\"image-20211130220052140\"></p>\n<h3 id=\"片元着色器\"><a class=\"markdownIt-Anchor\" href=\"#片元着色器\">#</a> 片元着色器</h3>\n<p>计算出颜色</p>\n<blockquote>\n<p>经过前面的三角形步骤，获得了一系列的数据信息，用来表述一个三角形网格式怎样覆盖到每个像素的。</p>\n<p>输入为：顶点插值数据</p>\n<p>输出为：一个或多个颜色</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130220450.png\" alt=\"image-20211130220450027\"></p>\n<h3 id=\"逐片元\"><a class=\"markdownIt-Anchor\" href=\"#逐片元\">#</a> 逐片元</h3>\n<p>渲染流水线的最后一步❤️</p>\n<blockquote>\n<p>逐片元操作（Per-FragmentOperations）阶段负责执行很多重要的操作，例如 <code>修改颜色</code> 、 <code>深度缓冲</code> 、 <code>进行混合等</code></p>\n<p>用于合并数据。</p>\n</blockquote>\n<p>这一个阶段有如下任务：</p>\n<ol>\n<li>决定每个片元的可见性。这涉及了很多测试工作，例如深度测试、模板测试等。</li>\n<li>如果一个片元通过了所有的测试，就需要把这个片元的颜色值和已经存储在颜色缓冲区中的颜色进行合并，或者说是混合。</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130220813.png\" alt=\"image-20211130220813558\"></p>\n<p>需要通过所有的测试，才能和颜色缓冲区混合，最后写入颜色缓冲区</p>\n<blockquote>\n<p>这些测试用于筛选掉一些无用片元</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130221004.png\" alt=\"image-20211130221004246\"></p>\n<p>当片元通过了所有测试，就会进入混合阶段</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130221310.png\" alt=\"image-20211130221310360\"></p>\n<p>对于透明效果需要开启混合，对于不透明物体可以选择关闭混合效果</p>\n<blockquote>\n<p>出于性能考虑，很多 GPU 会先进行测试在进行片元着色器 —— Early-Z 技术</p>\n</blockquote>\n<p>为了避免我们看到正在光栅化的图元，GPU 使用 <code>双重缓冲</code> ，我们看到的是前置渲染结构，同时后置渲染也在工作，但后置渲染完成就会交换前后渲染的内容。</p>\n<h1 id=\"什么是shader\"><a class=\"markdownIt-Anchor\" href=\"#什么是shader\">#</a> 什么是 Shader?</h1>\n<ul>\n<li>GPU 流水线上一些可高度编程的阶段，而由着色器编译出来的最终代码是会在 GPU 上运行的（对于固定管线的渲染来说，着色器有时等同于一些特定的渲染设置）</li>\n<li>有一些特定类型的着色器，如顶点着色器、片元着色器等；</li>\n</ul>\n<blockquote>\n<p>第二章完！</p>\n</blockquote>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%80%EF%BC%89/",
            "url": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%80%EF%BC%89/",
            "title": "Shader入门精要（一）",
            "date_published": "2021-09-10T06:57:37.000Z",
            "content_html": "<h2 id=\"致自己\"><a class=\"markdownIt-Anchor\" href=\"#致自己\">#</a> 致自己</h2>\n<blockquote>\n<p>之前我学习过一段时间的 Shader 入门精要（大概是学到第六章吧），但后面的章节都没有学习，加上时间久远很多内容都忘记了，故打算重新学一遍。</p>\n<p>为了勉励自己坚持下去，也为了记录一些学习过程，此系列就出现啦！</p>\n<p>❤️ ❤️</p>\n<p>(希望自己能够坚持学完，在渲染方面有所收获，可以制作出满意的效果)</p>\n<p>📑 此系列每周一更</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910151044.png\" alt=\"image-20210910151043222\"></p>\n<h1 id=\"第一篇-欢迎来到shader的世界\"><a class=\"markdownIt-Anchor\" href=\"#第一篇-欢迎来到shader的世界\">#</a> 第一篇 欢迎来到 Shader 的世界</h1>\n<h2 id=\"语录\"><a class=\"markdownIt-Anchor\" href=\"#语录\">#</a> 语录</h2>\n<ul>\n<li>\n<p>程序员的三大浪漫是编译原理、操作系统和图形学（是的，我已经听到很多人在反驳这句话了，不要当真啦）</p>\n</li>\n<li>\n<p>我们是程序员中的 “外貌协会”，期待着用代码编写出一个绚丽多姿的世界。这就是我们的浪漫。</p>\n</li>\n<li>\n<p>我们之所以要学习 Shader，是想要学习如何把物体按照自己的意愿渲染到屏幕上，但是，Shader 只是整个渲染流程中的一个子部分。</p>\n</li>\n<li>\n<p>和 C++ 这样的高级语言不同，尽管 Shader 的编写语言已经达到了我们可以理解的程度，但 Shader 更多地是面向 GPU 的工作方式，所以它的一些语法对我们来说并不那么直观。</p>\n</li>\n</ul>\n<h2 id=\"基础篇大纲1-4章\"><a class=\"markdownIt-Anchor\" href=\"#基础篇大纲1-4章\">#</a> 基础篇大纲 1-4 章</h2>\n<ol>\n<li><code>第2章 渲染流水线</code>  这一章讲解了现代 GPU 是如何实现整个渲染流水线的，这些内容对于理解 Shader 的工作原理有着非常重要的作用。</li>\n<li><code>第3章Unity Shader基础</code>  Unity 在原有的渲染流程上进行了封装，并提供给开发者新的图像编程接口 ——Unity Shader。这一章将讲解 Unity Shader 的实现原理和基本语法</li>\n<li><code>第4章 学习Shader所需的数学基础</code>  数学向来是初学者面对的一大学习障碍。然而，在初级阶段的渲染学习中，我们需要掌握的数学理论实际并不复杂。本章将为读者讲解渲染过程中常见的数学知识，如矢量、矩阵运算、坐标空间等。</li>\n</ol>\n<h2 id=\"自我理解\"><a class=\"markdownIt-Anchor\" href=\"#自我理解\">#</a> 自我理解</h2>\n<p>本章主要讲述了本书的结构的内容大纲，引出了 shader 学习的问题。</p>\n<p>尽管是第二次读，依然觉得有趣～</p>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/10/NodeCanvas%E6%89%A9%E5%B1%95/",
            "url": "https://www.fasty97.top/2021/09/10/NodeCanvas%E6%89%A9%E5%B1%95/",
            "title": "NodeCanvas扩展",
            "date_published": "2021-09-10T02:12:21.000Z",
            "content_html": "<blockquote>\n<p>除去三大功能外，NodeCanvas 还有一些别的有趣的东西，能帮助我们改进 3 大流程。</p>\n</blockquote>\n<h3 id=\"standalone-action-list\"><a class=\"markdownIt-Anchor\" href=\"#standalone-action-list\">#</a> Standalone Action List</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910101555.png\" alt=\"image-20210910101555501\"></p>\n<p>给对线添加如上脚本后，我们可以在对象上进行一些可视化的对话构建。</p>\n<h3 id=\"自定义action和condition\"><a class=\"markdownIt-Anchor\" href=\"#自定义action和condition\">#</a> 自定义 Action 和 Condition</h3>\n<blockquote>\n<p>我们可以自定义自己的节点，方便我们在 3 大功能上使用。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910101826.png\" alt=\"image-20210910101826535\"></p>\n<p>生成脚本如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>生成的行为</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Framework</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">ParadoxNotion<span class=\"token punctuation\">.</span>Design</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">.</span>Actions</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Category</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"my\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Description</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"输出一些内容\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Mylog</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ActionTask</span></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">//Use for initialization. This is called only once in the lifetime of the task.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token comment\">//Return null if init was successfull. Return an error string otherwise</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">OnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token comment\">//This is called once each time the task is enabled.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token comment\">//Call EndAction() to mark the action as finished, either in success or failure.</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token comment\">//EndAction can be called from anywhere.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         <span class=\"token function\">EndAction</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\">//Called once per frame while the action is active.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\">//Called when the task is disabled.</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token comment\">//Called when the task is paused.</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建之后可以在 Action 中找到：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910102308.png\" alt=\"image-20210910102308892\"></p>\n<p>条件如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>生成的条件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Framework</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">ParadoxNotion<span class=\"token punctuation\">.</span>Design</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">.</span>Conditions</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Category</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"my\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Description</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制条件\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">myCon</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ConditionTask</span></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">//Use for initialization. This is called only once in the lifetime of the task.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token comment\">//Return null if init was successfull. Return an error string otherwise</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">OnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token comment\">//Called whenever the condition gets enabled.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\">//Called whenever the condition gets disabled.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDisable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\">//Called once per frame while the condition is active.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token comment\">//Return whether the condition is success or failure.</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">OnCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在图中使用：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910102705.png\" alt=\"image-20210910102705181\"></p>\n<h3 id=\"全局黑板\"><a class=\"markdownIt-Anchor\" href=\"#全局黑板\">#</a> 全局黑板</h3>\n<blockquote>\n<p>可以在所有图中使用</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910102835.png\" alt=\"image-20210910102835494\"></p>\n<h3 id=\"类型管理器\"><a class=\"markdownIt-Anchor\" href=\"#类型管理器\">#</a> 类型管理器</h3>\n<blockquote>\n<p>用于管理添加新的数据类型</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103000.png\" alt=\"image-20210910103000347\"></p>\n<h3 id=\"图控制台\"><a class=\"markdownIt-Anchor\" href=\"#图控制台\">#</a> 图控制台</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103100.png\" alt=\"image-20210910103100590\"></p>\n<h3 id=\"结构视图\"><a class=\"markdownIt-Anchor\" href=\"#结构视图\">#</a> 结构视图</h3>\n<blockquote>\n<p>可快速定位到对应节点</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103148.png\" alt=\"image-20210910103148583\"></p>\n<h3 id=\"运行视图\"><a class=\"markdownIt-Anchor\" href=\"#运行视图\">#</a> 运行视图</h3>\n<p>方便在游戏运行中，显示运行的所有树</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103307.png\" alt=\"image-20210910103307475\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<blockquote>\n<p>比起另一套行为树插件来说， <code>NodeCanvas</code>  提供的功能比较基础，其更像是一个程序框架，因此其扩展性也更佳，通过提供的接口和程式，我们可以打造定制化的工作流，代码设计简洁有力。</p>\n</blockquote>\n<p>总之还是非常不错的！😏</p>\n",
            "tags": [
                "Unity Tool"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/09/NodeCanvas%E4%B9%8B%E5%AF%B9%E8%AF%9D%E6%A0%91/",
            "url": "https://www.fasty97.top/2021/09/09/NodeCanvas%E4%B9%8B%E5%AF%B9%E8%AF%9D%E6%A0%91/",
            "title": "NodeCanvas之对话树",
            "date_published": "2021-09-09T05:03:59.000Z",
            "content_html": "<h2 id=\"主要功能\"><a class=\"markdownIt-Anchor\" href=\"#主要功能\">#</a> 主要功能</h2>\n<blockquote>\n<p>基础功能都有，具备良好的扩展性。</p>\n</blockquote>\n<ol>\n<li>播放对话</li>\n<li>对话音效</li>\n<li>分支对话</li>\n<li>概览对话</li>\n<li>条件对话</li>\n<li>…</li>\n</ol>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<h3 id=\"添加脚本\"><a class=\"markdownIt-Anchor\" href=\"#添加脚本\">#</a> 添加脚本</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910095523.png\" alt=\"image-20210910095523494\"></p>\n<h3 id=\"添加角色并给角色添加\"><a class=\"markdownIt-Anchor\" href=\"#添加角色并给角色添加\">#</a> 添加角色并给角色添加</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910100346.png\" alt=\"image-20210910100346800\"></p>\n<h3 id=\"编写对话树\"><a class=\"markdownIt-Anchor\" href=\"#编写对话树\">#</a> 编写对话树</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910095400.png\" alt=\"image-20210910095352935\"></p>\n<h4 id=\"启动对话树\"><a class=\"markdownIt-Anchor\" href=\"#启动对话树\">#</a> 启动对话树</h4>\n<blockquote>\n<p><code>默认是不启动</code> 对话树的，可以在代码中控制启动也可以在属性面板设置游戏开始时启动。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">DialogueTreeController</span> dialogueTreeController<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dialogueTreeController<span class=\"token punctuation\">.</span><span class=\"token function\">StartBehaviour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为了保证对话正确显示，在 UI 层需要添加官方的预制体和事件系统监听</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910100905.png\" alt=\"image-20210910100905937\"></p>\n<h2 id=\"存在的问题待学习\"><a class=\"markdownIt-Anchor\" href=\"#存在的问题待学习\">#</a> 存在的问题待学习</h2>\n<ol>\n<li>\n<p>❓NodeCanvas 的对话树似乎 在显示富文本内容时存在问题。例如使用颜色代码，会出现输出颜色代码之后再实现效果的问题</p>\n</li>\n<li>\n<p>❓ 其配置的 UI 显示界面不清楚是如何进行绑定的</p>\n</li>\n</ol>\n",
            "tags": [
                "Unity Tool"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/08/NodeCanvas%E4%B9%8BFSM%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/",
            "url": "https://www.fasty97.top/2021/09/08/NodeCanvas%E4%B9%8BFSM%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/",
            "title": "NodeCanvas之FSM有限状态机",
            "date_published": "2021-09-08T14:27:11.000Z",
            "content_html": "<blockquote>\n<p>FSM 有限状态机是一种设计方式，用于处理不同状态的切换</p>\n<p>其主要包含以下几个部分：</p>\n<ol>\n<li>状态（进入、更新、离开）</li>\n<li>过渡条件 【 <code>用于控制状态的切换</code> 】</li>\n<li>状态机控制器【 <code>用于控制状态机</code> 】</li>\n</ol>\n</blockquote>\n<p>本文主要介绍 <code>NodeCanvas</code>  的 FSM 使用，具体基础 FSM 概念不做解释。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908225324.png\" alt=\"image-20210908225324425\"></p>\n<center>FSM示例图</center>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>为游戏对象添加如下脚本：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210909125307.png\" alt=\"image-20210909125300176\"></p>\n<h2 id=\"结点类型\"><a class=\"markdownIt-Anchor\" href=\"#结点类型\">#</a> 结点类型</h2>\n<p>NodeCanvas 中结点分为几个类型：</p>\n<ol>\n<li>Action State（动作状态，只处理进入状态）</li>\n<li>Super Action State （超级动作状态，能处理进入、更新、离开状态）</li>\n<li>Pass（过渡态，不做任何处理）</li>\n<li>Parallel（并行。 在状态机处于任意状态时，并行执行）</li>\n<li>Any State（能够从任意状态进行状态切换，在状态机过程中，时刻监听）</li>\n</ol>\n<h2 id=\"结语\"><a class=\"markdownIt-Anchor\" href=\"#结语\">#</a> 结语</h2>\n<p>在 FSM 中，也没什么太多可以讲的，其条件和行为结点为 <code>NodeCanvas</code>  行为树、状态机、对话树所共用。</p>\n<blockquote>\n<p>个人感觉，NodeCanvas 设计最棒的一点就是，他三种系统用的同一个底层，而且可以互相嵌套兼容。</p>\n</blockquote>\n",
            "tags": [
                "Unity Tool",
                "FSM",
                "状态机",
                "有限状态机"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/04/NodeCanvas%E4%B9%8B%E8%A1%8C%E4%B8%BA%E6%A0%91/",
            "url": "https://www.fasty97.top/2021/09/04/NodeCanvas%E4%B9%8B%E8%A1%8C%E4%B8%BA%E6%A0%91/",
            "title": "NodeCanvas之行为树",
            "date_published": "2021-09-04T12:15:26.000Z",
            "content_html": "<h2 id=\"认识行为树\"><a class=\"markdownIt-Anchor\" href=\"#认识行为树\">#</a> 认识行为树</h2>\n<ol>\n<li>什么是行为树？<br>\n自顶向下的树形结构</li>\n</ol>\n<p>行为树 Behavior Tree 是一种数据结构，自顶向下的树形结构。</p>\n<ol start=\"2\">\n<li>什么情况下要使用行为树？<br>\n情况多变，条件复杂</li>\n</ol>\n<p>在处理逻辑复杂的问题时，这个复杂可能是条件复杂，情况多样。</p>\n<p>行为树并非是游戏 Ai 的专属，在处理其他复杂业务逻辑或可能时都可以尝试用行为树来解决。</p>\n<ol start=\"3\">\n<li>行为树有什么优点？<br>\n高效可读，易于扩展</li>\n</ol>\n<p>行为树解决的问题是将复杂的关系，简单化，能很大程度的加强程序的可读性，健壮性。</p>\n<ol start=\"4\">\n<li>\n<p>行为树由哪几部分组成？<br>\n主要由四部分  CDAC 组成 ，两根两叶</p>\n<pre><code>Composites  组合节点    只能作为根节点，控制子节点的执行（顺序）\nDecorator 装饰节点         只能作为根节点，修饰子节点\nActions     行为节点         只能作为叶子节点，执行具体动作\nConditinals 条件节点       只能作为叶子节点，判断条件\n</code></pre>\n<ol start=\"5\">\n<li>行为树的工作流程？<br>\n自顶向下，从左至右（并发进行），逐层进行</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>行为树执行的成果（成功 / 失败），由其子节点决定，子节点执行完成后会向父节点传递成功 / 失败的消息，<br>\n最终这些来自各个子枝的消息汇聚到行为树，行为树将结果整合得到行为树的最终执行结果。<br>\n其最终结果：同真为真，一假则假</p>\n</blockquote>\n<h2 id=\"关于nodecanvas\"><a class=\"markdownIt-Anchor\" href=\"#关于nodecanvas\">#</a> 关于 NodeCanvas</h2>\n<blockquote>\n<p><code>NodeCanvas</code>  是一个集成了:</p>\n<ul>\n<li>行为树</li>\n<li>对话树</li>\n<li>FSM 有限状态机</li>\n</ul>\n<p>的可视化 开发工具。</p>\n</blockquote>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\">#</a> 快速开始</h2>\n<h3 id=\"准备\"><a class=\"markdownIt-Anchor\" href=\"#准备\">#</a> 准备</h3>\n<p>准备一个角色，1.  配置好动画控制器，2. 进行 NaveMesh 的网格烘焙。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904203556.png\" alt=\"Aa\"></p>\n<p>添加上以下组件:</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904203733.png\" alt=\"image-20210904203733291\"></p>\n<h3 id=\"创建行为树\"><a class=\"markdownIt-Anchor\" href=\"#创建行为树\">#</a> 创建行为树</h3>\n<p>可以看到由两个部分组成</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904204124.png\" alt=\"image-20210904204124080\"></p>\n<h4 id=\"数据黑板\"><a class=\"markdownIt-Anchor\" href=\"#数据黑板\">#</a> 数据黑板</h4>\n<blockquote>\n<p>“黑板”（Blackboard）在人工智能领域已经是一个很古老的东西了，它基于一种很直观的概念，就是一群人为了解决一个问题，在黑板前聚集，每个人都可以发表自己的意见，然后在黑板上写下自己的看法，当然你也可以基于别人记录在黑板上的看法，来发表和更新自己的看法，在这样不断的意见交换，看法更新的过程中，越来越趋向于对于问题的最终解答。一开始的黑板系统就是这样一个由多个子系统来共同协作的人工智能解决方案。</p>\n</blockquote>\n<p>可参考: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5haXNoYXJpbmcuY29tL2FyY2hpdmVzLzgwMQ==\">http://www.aisharing.com/archives/801</span></p>\n<p><code>在NodeCanvas里，我们可以把需要共享点数据放在黑板里，在多个行为树中共享。</code></p>\n<h4 id=\"操作窗口\"><a class=\"markdownIt-Anchor\" href=\"#操作窗口\">#</a> 操作窗口</h4>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904204714.png\" alt=\"image-20210904204714062\"></p>\n<p>左上可以导入导出，右上是黑板数据。</p>\n<p>可以添加不同类型点节点， <code>行为树一般从流程节点开始</code> 。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904204908.png\" alt=\"image-20210904204908578\"></p>\n<h4 id=\"基本流程\"><a class=\"markdownIt-Anchor\" href=\"#基本流程\">#</a> 基本流程</h4>\n<ol>\n<li>\n<p>Sequencer 依次执行直到失败</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904205615.png\" alt=\"image-20210904205615378\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904205615.png\" alt=\"\"><br>\n完成效果如下:<br>\n<img data-src=\"https://pic.fasty97.top/NotePad/20210904210007.gif\" alt=\"\"></p>\n</li>\n<li>\n<p>Selector 依次执行直到成功</p>\n</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904210501.png\" alt=\"image-20210904210501209\"></p>\n<ol start=\"3\">\n<li>Parallel  并行执行</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904210629.png\" alt=\"image-20210904210629825\"> 其中，可以结束配置参数：</p>\n<p>第一次成功、第一次失败、第一次成功或失败。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904211016.png\" alt=\"image-20210904211016371\"></p>\n<h2 id=\"完成的行为树\"><a class=\"markdownIt-Anchor\" href=\"#完成的行为树\">#</a> 完成的行为树</h2>\n<blockquote>\n<p>包含攻击、追逐、徘徊、巡逻几个状态</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210905162014.png\" alt=\"image-20210905162014408\"></p>\n<h3 id=\"节点介绍\"><a class=\"markdownIt-Anchor\" href=\"#节点介绍\">#</a> 节点介绍</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hMTI0NzA1NzdmZDA=\">NodeCanvas—— 行为树节点介绍 - 简书 (jianshu.com)</span></p>\n<h2 id=\"扩展-分层行为树\"><a class=\"markdownIt-Anchor\" href=\"#扩展-分层行为树\">#</a> 扩展 - 分层行为树</h2>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTYyNDAyNC9hcnRpY2xlL2RldGFpbHMvODA4NzkyOTQ=\">分层机制 - 复杂行为树的行为控制_一生做游戏 - CSDN 博客_复杂行为树</span></p>\n<h2 id=\"综合参考\"><a class=\"markdownIt-Anchor\" href=\"#综合参考\">#</a> 综合参考</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210905122921.png\" alt=\"image-20210905122914367\"></p>\n",
            "tags": [
                "Unity Tool",
                "行为树"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/07/26/VFXGraph%E4%BD%93%E9%AA%8C-%E7%81%AB%E8%8A%B1%E6%95%88%E6%9E%9C/",
            "url": "https://www.fasty97.top/2021/07/26/VFXGraph%E4%BD%93%E9%AA%8C-%E7%81%AB%E8%8A%B1%E6%95%88%E6%9E%9C/",
            "title": "VFXGraph体验-火花效果",
            "date_published": "2021-07-26T06:35:45.000Z",
            "content_html": "<blockquote>\n<p>本文采用：unity2021.1.5f1c1 HDRP 渲染管线</p>\n</blockquote>\n<h1 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h1>\n<p>创建 HDRP 项目，并设置好相关配置。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726143925.png\" alt=\"image-20210726143918376\"></p>\n<p>搭建的场景如图所示：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726144023.png\" alt=\"image-20210726144023543\"></p>\n<h1 id=\"认识vfx-graph\"><a class=\"markdownIt-Anchor\" href=\"#认识vfx-graph\">#</a> 🔸认识 VFX Graph</h1>\n<p>创建一个 VFX Graph 可以点击 Edit 进入编辑界面，其编辑界面和 ShaderGraph 类似。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726144442.png\" alt=\"image-20210726144442857\"></p>\n<h1 id=\"编写graph\"><a class=\"markdownIt-Anchor\" href=\"#编写graph\">#</a> 🔹 编写 Graph</h1>\n<h2 id=\"孵化器循环\"><a class=\"markdownIt-Anchor\" href=\"#孵化器循环\">#</a> 孵化器循环</h2>\n<blockquote>\n<p>针对于持续性和非持续性进行区分</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726144914.png\" alt=\"image-20210726144914494\"></p>\n<h2 id=\"初始化粒子\"><a class=\"markdownIt-Anchor\" href=\"#初始化粒子\">#</a> 初始化粒子</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726150137.png\" alt=\"image-20210726150137280\"></p>\n<blockquote>\n<p>完成上述 2 个步骤时，效果如下，记得替换粒子的贴图</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726145903.gif\" alt=\"\"></p>\n<h2 id=\"渲染粒子\"><a class=\"markdownIt-Anchor\" href=\"#渲染粒子\">#</a> 渲染粒子</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726230116.png\" alt=\"image-20210726230116859\"></p>\n<blockquote>\n<p>通过渲染器设置，火花效果更好了</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726230231.gif\" alt=\"效果\"></p>\n<h2 id=\"更新粒子-使用重力\"><a class=\"markdownIt-Anchor\" href=\"#更新粒子-使用重力\">#</a> 更新粒子 - 使用重力</h2>\n<p>现在我们的火花是直线发射的，我们想让其受到一个重力自动下垂。</p>\n<p>在更新粒子模块，增加重力，设置一个随机数重力。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726230856.png\" alt=\"image-20210726230856799\"></p>\n<blockquote>\n<p>添加重力后，可以看到我们的粒子受重力而下垂。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726231034.gif\" alt=\"\"></p>\n<h1 id=\"️完善火花\"><a class=\"markdownIt-Anchor\" href=\"#️完善火花\">#</a> ❤️完善火花</h1>\n<h2 id=\"发射形状\"><a class=\"markdownIt-Anchor\" href=\"#发射形状\">#</a> 发射形状</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726233034.png\" alt=\"image-20210726233034173\"></p>\n<h2 id=\"local和world坐标\"><a class=\"markdownIt-Anchor\" href=\"#local和world坐标\">#</a> Local 和 World 坐标</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726233115.png\" alt=\"image-20210726233115448\"></p>\n<blockquote>\n<p>在布局坐标中，粒子效果不会残留，为了让我们的火花可以在世界中残留，需该为世界坐标系</p>\n</blockquote>\n<h1 id=\"添加碰撞\"><a class=\"markdownIt-Anchor\" href=\"#添加碰撞\">#</a> 添加碰撞</h1>\n<blockquote>\n<p>我们希望火花粒子能够和周围环境产生碰撞</p>\n</blockquote>\n<h2 id=\"碰撞框\"><a class=\"markdownIt-Anchor\" href=\"#碰撞框\">#</a> 碰撞框</h2>\n<p>添加如下碰撞框组件：</p>\n<p>其中： <code>LifeTime Loss为生命损失</code></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729201759.png\" alt=\"image-20210729201752721\"></p>\n<p>发现我们的粒子在接触碰撞框时会被弹开。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729201835.gif\" alt=\"\"></p>\n<h2 id=\"碰撞事件\"><a class=\"markdownIt-Anchor\" href=\"#碰撞事件\">#</a> 碰撞事件</h2>\n<blockquote>\n<p>为了响应碰撞添加如下组件</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729202054.png\" alt=\"碰撞响应\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729202141.png\" alt=\"事件处理\"></p>\n<blockquote>\n<p>其效果如下，每个粒子碰撞死亡后将生产 1 个蓝色粒子</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729202653.gif\" alt=\"\"></p>\n<h1 id=\"完善和脚本控制\"><a class=\"markdownIt-Anchor\" href=\"#完善和脚本控制\">#</a> 完善和脚本控制</h1>\n<p>调整一下粒子，将循环关闭，使用脚本控制粒子。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>脚本控制VFX</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VFXTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> vfx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>vfx<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> vf <span class=\"token operator\">=</span> go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualEffect<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            vf<span class=\"token punctuation\">.</span><span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>其效果如下图所示，按下 A 自动生成一个特效</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729205458.gif\" alt=\"\"></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/07/20/ASE%E4%BD%93%E9%AA%8C-%E8%8F%B2%E6%B6%85%E5%B0%94%E6%95%88%E6%9E%9C/",
            "url": "https://www.fasty97.top/2021/07/20/ASE%E4%BD%93%E9%AA%8C-%E8%8F%B2%E6%B6%85%E5%B0%94%E6%95%88%E6%9E%9C/",
            "title": "ASE体验-菲涅尔效果",
            "date_published": "2021-07-20T13:27:04.000Z",
            "content_html": "<blockquote>\n<p>体验一下 ASE 插件</p>\n</blockquote>\n<h3 id=\"体验\"><a class=\"markdownIt-Anchor\" href=\"#体验\">#</a> 体验</h3>\n<p>创建一个 ASE Suface shader，依图连接节点。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210720212833.png\" alt=\"image-20210720212826746\"></p>\n<p>效果如下：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210720213139.gif\" alt=\"\"></p>\n<h3 id=\"感受\"><a class=\"markdownIt-Anchor\" href=\"#感受\">#</a> 感受</h3>\n<blockquote>\n<p>整体感受 ASE 插件，在某些方面确实强于 ShaderGraph ，例如可以直接在默认渲染管线中使用。</p>\n<p>总之，用起来挺爽的。😄</p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/06/08/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFHDRP/",
            "url": "https://www.fasty97.top/2021/06/08/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFHDRP/",
            "title": "Unity 新技术HDRP",
            "date_published": "2021-06-08T03:42:01.000Z",
            "content_html": "<blockquote>\n<p>本系列基于 Unity2021.1.5f1c1</p>\n</blockquote>\n<h2 id=\"安装hdrp\"><a class=\"markdownIt-Anchor\" href=\"#安装hdrp\">#</a> 安装 HDRP</h2>\n<p>在管理器安装 hdrp 后会自动弹出此初始化对话框。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210608121937.png\" alt=\"image-20210608121930293\"></p>\n<p>根据对话框检测的步骤，将需要修正的地方进行修正。</p>\n<blockquote>\n<p>修正后全部呈现绿√。</p>\n</blockquote>\n<p>修正完成，系统自动添加了如下包。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210608122232.png\" alt=\"image-20210608122232513\"></p>\n<h3 id=\"添加天空盒子\"><a class=\"markdownIt-Anchor\" href=\"#添加天空盒子\">#</a> 添加天空盒子</h3>\n<p>在 Volume 组件中添加如下组件，可以设置天空盒。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210730125729.png\" alt=\"image-20210730125722895\"></p>\n<h3 id=\"调节光线亮度\"><a class=\"markdownIt-Anchor\" href=\"#调节光线亮度\">#</a> 调节光线亮度</h3>\n<p>在 Volume 组件中添加如下组件，可以设置调节光线。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210730125833.png\" alt=\"image-20210730125833770\"></p>\n",
            "tags": [
                "unity",
                "HDRP"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/04/29/PUN2%EF%BC%88%E4%BA%8C%EF%BC%89%E5%AF%B9%E8%B1%A1%E5%90%8C%E6%AD%A5/",
            "url": "https://www.fasty97.top/2021/04/29/PUN2%EF%BC%88%E4%BA%8C%EF%BC%89%E5%AF%B9%E8%B1%A1%E5%90%8C%E6%AD%A5/",
            "title": "PUN2（二）对象同步",
            "date_published": "2021-04-29T06:58:33.000Z",
            "content_html": "<blockquote>\n<p>对象同步是多人在线游戏的核心在 Pun 中使用 Photon View 组件来同步对象</p>\n</blockquote>\n<h2 id=\"创建同步对象\"><a class=\"markdownIt-Anchor\" href=\"#创建同步对象\">#</a> 创建同步对象</h2>\n<p>创建一个胶囊体，并为其添加 <code>Photon View</code> ， <code>Photon Transform View</code> 、 <code>Photon Rigidbody View</code>  组件使其监听。</p>\n<img data-src=\"https://pic.fasty97.top/NotePad/20210429151825.png\" alt=\"image-20210429151825946\"  />\n<center>Photon View</center>\n<h2 id=\"连接同步\"><a class=\"markdownIt-Anchor\" href=\"#连接同步\">#</a> 连接同步</h2>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/04/21/%E4%B8%80%E4%B8%AAPyGame%E6%B8%B8%E6%88%8F%E7%9A%84%E8%AF%9E%E7%94%9F/",
            "url": "https://www.fasty97.top/2021/04/21/%E4%B8%80%E4%B8%AAPyGame%E6%B8%B8%E6%88%8F%E7%9A%84%E8%AF%9E%E7%94%9F/",
            "title": "一个PyGame游戏的诞生",
            "date_published": "2021-04-21T01:38:02.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<blockquote>\n<p>得益于各种各样的原因，接手了几个 pygame 游戏的小项目。在自己完成项目设计的时候，发现网络上关于 pygame 的资料比较稀少而且有很多误区，特别是在制作控件，场景切换，资源加载方面。</p>\n<p>趁着自己还有点映像，把一些学习感悟记录下来吧😼。</p>\n</blockquote>\n<h2 id=\"想法\"><a class=\"markdownIt-Anchor\" href=\"#想法\">#</a> 想法</h2>\n<blockquote>\n<p>不论是制作什么项目，都缺少不了你的想法。.</p>\n<p>想法也代表着你的创意，在一个游戏中创意是至关重要的哦❤️。</p>\n</blockquote>\n<p>在你有想法的时候你至少需要明确一下这些点:</p>\n<ol>\n<li>游戏的运行平台：手机、PC、网页…</li>\n<li>游戏的玩家人数：单人、双人、更多人</li>\n<li>游戏的获胜方式：合作、对抗、过关…</li>\n<li>游戏的展现形式：2D，3D (pygame 似乎只支持 2D 😄)</li>\n<li>游戏的视角：Top-Down、Left-Right…</li>\n<li>…</li>\n</ol>\n<p>有了想法的支撑，就好像有了方向，知道朝着哪个方向去做。</p>\n<h2 id=\"搜集或制作游戏的素材\"><a class=\"markdownIt-Anchor\" href=\"#搜集或制作游戏的素材\">#</a> 搜集或制作游戏的素材</h2>\n<blockquote>\n<p>游戏和其他软件项目很大的不同就是，游戏需要很多素材，声音、模型、图片、视频…</p>\n</blockquote>\n<p>这里推荐一些比较好用的游戏素材处理软件：</p>\n<ul>\n<li>建模和贴图处理\n<ul>\n<li>blender 建模</li>\n<li>Substance Painter 贴图处理</li>\n</ul>\n</li>\n<li>像素画和像素动画\n<ul>\n<li>Aseprite</li>\n</ul>\n</li>\n<li>图片处理\n<ul>\n<li>photoshop</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"搭建开发环境\"><a class=\"markdownIt-Anchor\" href=\"#搭建开发环境\">#</a> 搭建开发环境</h2>\n<blockquote>\n<p>对于 pygame 来说，只需要按照 pygame 游戏库就足够了</p>\n</blockquote>\n<p>开发工具可以使用 vscode、pycharm 等任何支持 python 的编辑器。</p>\n<h2 id=\"创造我们的游戏\"><a class=\"markdownIt-Anchor\" href=\"#创造我们的游戏\">#</a> 创造我们的游戏</h2>\n<h3 id=\"跑起来\"><a class=\"markdownIt-Anchor\" href=\"#跑起来\">#</a> 跑起来</h3>\n<h3 id=\"写点控件\"><a class=\"markdownIt-Anchor\" href=\"#写点控件\">#</a> 写点控件</h3>\n<h3 id=\"资源加载\"><a class=\"markdownIt-Anchor\" href=\"#资源加载\">#</a> 资源加载</h3>\n<h3 id=\"精灵和精灵组\"><a class=\"markdownIt-Anchor\" href=\"#精灵和精灵组\">#</a> 精灵和精灵组</h3>\n<h3 id=\"场景切换\"><a class=\"markdownIt-Anchor\" href=\"#场景切换\">#</a> 场景切换</h3>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n",
            "tags": [
                "python"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/03/09/PUN%EF%BC%88%E4%B8%80%EF%BC%89%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87/",
            "url": "https://www.fasty97.top/2021/03/09/PUN%EF%BC%88%E4%B8%80%EF%BC%89%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87/",
            "title": "PUN2（一）前置准备",
            "date_published": "2021-03-09T02:07:15.000Z",
            "content_html": "<h2 id=\"创建app\"><a class=\"markdownIt-Anchor\" href=\"#创建app\">#</a> 创建 APP</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhvdG9uZW5naW5lLmNvbS8=\">photo 光子服务器官网</span></p>\n<p>在 photo 官网注册后，进入面板，创建一个新 APP，类型选择 PUN</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310100355.png\" alt=\"photo\"></p>\n<p>记录下新创建 App 的 App ID</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310100925.png\" alt=\"image-20210310100925155\"></p>\n<h2 id=\"下载导入unity-pun\"><a class=\"markdownIt-Anchor\" href=\"#下载导入unity-pun\">#</a> 下载导入 Unity PUN</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310101044.png\" alt=\"image-20210310101044859\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310101241.png\" alt=\"image-20210310101241690\"></p>\n<h2 id=\"连接到服务器\"><a class=\"markdownIt-Anchor\" href=\"#连接到服务器\">#</a> 连接到服务器</h2>\n<p>使用 <code>PhotonNetwork.ConnectUsingSettings();</code>  来连接到服务器</p>\n<p>可以通过继承 <code>MonoBehaviourPunCallbacks</code>  类来实现连接相关的回调。</p>\n<h3 id=\"简单的连接示例\"><a class=\"markdownIt-Anchor\" href=\"#简单的连接示例\">#</a> 简单的连接示例</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Photon<span class=\"token punctuation\">.</span>Pun</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Photon<span class=\"token punctuation\">.</span>Realtime</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">PUNTest</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PunLink</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviourPunCallbacks</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 同步场景</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            PhotonNetwork<span class=\"token punctuation\">.</span>AutomaticallySyncScene <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 使用设置连接</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            PhotonNetwork<span class=\"token punctuation\">.</span><span class=\"token function\">ConnectUsingSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始连接...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConnected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已连接到服务器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 连接到主机</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConnectedToMaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\">// 加入房间</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            PhotonNetwork<span class=\"token punctuation\">.</span><span class=\"token function\">JoinOrCreateRoom</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"room\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RoomOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>MaxPlayers <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>TypedLobby<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始加入房间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnJoinedRoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已加入房间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/20210310110333.gif\" alt=\"ani\"></p>\n<center>效果图</center>",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/03/04/Unity%20PlasticSCM%20%E6%89%98%E7%AE%A1/",
            "url": "https://www.fasty97.top/2021/03/04/Unity%20PlasticSCM%20%E6%89%98%E7%AE%A1/",
            "title": "Unity PlasticSCM 托管",
            "date_published": "2021-03-04T01:21:52.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<blockquote>\n<p>记得之前 unity 也有自己的云同步，但是在使用后体验并不好，开启云同步后对于配置低的电脑软件负担会很大。而且在国内网络下，速度非常慢；所以在试过一次后我还是转战 github 和码云了。</p>\n</blockquote>\n<p>现在 Unity 推出了一套新的托管系统 —— <code>PlasticSCM</code></p>\n<p>在创建项目时，勾选启用 <code>PlasticSCM</code> ，在第一次使用时会自动下载 <code>PlasticSCM</code>  客户端。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304092525.png\" alt=\"创建项目\"></p>\n<h2 id=\"托管界面\"><a class=\"markdownIt-Anchor\" href=\"#托管界面\">#</a> 托管界面</h2>\n<h3 id=\"pending-changes\"><a class=\"markdownIt-Anchor\" href=\"#pending-changes\">#</a> pending changes</h3>\n<p>在 <code>pending changes</code>  界面会显示当前的 <code>changeList</code> ，默认勾选了 AutoSave。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304094320.png\" alt=\"托管界面\"></p>\n<h3 id=\"changesets\"><a class=\"markdownIt-Anchor\" href=\"#changesets\">#</a> Changesets</h3>\n<p>Changesets 面板显示项目的提交记录和资源变化。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304101907.png\" alt=\"Changesets\"></p>\n<h2 id=\"客户端\"><a class=\"markdownIt-Anchor\" href=\"#客户端\">#</a> 客户端</h2>\n<p>点击 Launch Plastic 可以启动客户端。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304102159.png\" alt=\"客户端\"></p>\n<p>客户端可以直观方便的管理托管项目。</p>\n<h2 id=\"使用感受\"><a class=\"markdownIt-Anchor\" href=\"#使用感受\">#</a> 使用感受</h2>\n<ol>\n<li>PlasticSCM 支持大文件存储，相比传统 git 更加适应游戏开发的需要。</li>\n<li>与 Unity 高度集成，可以在 unity 中进行快捷操作</li>\n<li>是替代 git 的不二选择</li>\n</ol>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/02/22/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2021/02/22/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/",
            "title": "原型模式",
            "date_published": "2021-02-22T04:47:13.000Z",
            "content_html": "<blockquote>\n<p>原型模式：使用特定原型实例来创建特定种类的对象，并且通过拷贝原型来创建新的对象。</p>\n</blockquote>\n<h3 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h3>\n<p>假如在游戏中我们需要生成各种各样的怪物，我们需要一个孵化器，我们想到为每个怪物类型确定一个孵化器，如下图所示：</p>\n<pre>Error: Evaluation failed: TypeError: Cannot read property 'initialize' of undefined\n    at __puppeteer_evaluation_script__:3:32</pre><p>✔️ 不难想到，我们可以抽象出怪物的基类对上面的结构进行优化。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 怪物基类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> Speed <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\">Monster</span> <span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"Hp:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Hp</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Speed:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Speed</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> \t<span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// 幽灵类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Ghost</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Monster</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Monster</span> <span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Ghost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>Hp<span class=\"token operator\">=</span><span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span>Hp<span class=\"token punctuation\">,</span>Speed <span class=\"token operator\">=</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span>Speed<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/// 孵化器</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Spawner</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Monster</span> _monster<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Spawner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Monster</span> monster<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            _monster <span class=\"token operator\">=</span> monster<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Monster</span> <span class=\"token function\">SpawnerMonster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">return</span> _monster<span class=\"token punctuation\">.</span><span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>调用</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> gh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Ghost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>Hp <span class=\"token operator\">=</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> Speed <span class=\"token operator\">=</span> <span class=\"token number\">3.3f</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> spa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Spawner</span><span class=\"token punctuation\">(</span>gh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> en<span class=\"token operator\">=</span> spa<span class=\"token punctuation\">.</span><span class=\"token function\">SpawnerMonster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>en<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\">#</a> 结论</h3>\n<blockquote>\n<p>关于这个模式，有一点比较优雅的是，它不仅克隆原型类，而且它也克隆了对象的状态。</p>\n</blockquote>\n<p>基于这样的 <code>模板(原型)</code> ，我们可以创建出类似的一系列对象。</p>\n<p>📘 Ps: 有兴趣的话可以去看看 <code>Self语言</code> 相信你会对原型，oop 有新的认识 —— 类并不是实现 oop 的唯一方法。</p>\n<p>📖OOP 的特征是它将状态和行为结合得更紧密。</p>\n<h3 id=\"扩展\"><a class=\"markdownIt-Anchor\" href=\"#扩展\">#</a> 扩展</h3>\n<p>正是 self 基于原型的设计理念，诞生了现在大受欢迎的 <code>javascript</code> ；</p>\n<p>正是 self 不断强化编译技术，虚拟机效率，现在的动态语言才能高效执行。</p>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/02/22/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2021/02/22/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/",
            "title": "观察者模式",
            "date_published": "2021-02-22T01:35:56.000Z",
            "content_html": "<blockquote>\n<p>观察者模式（Observer）：在对象间定义一种 <code>一对多</code> 的依赖关系，以便当某对象的状态改变时，与它存在依赖关系的所有对象都能收到通知并自动进行更新。</p>\n</blockquote>\n<ul>\n<li>MVC 模式的底层可以说就是利用了观察者模式</li>\n</ul>\n<h2 id=\"基础设计\"><a class=\"markdownIt-Anchor\" href=\"#基础设计\">#</a> 基础设计</h2>\n<blockquote>\n<p>我们可以使用如下的方式设计一个简单的观察者模式，在被观察者中需要存储一个观察者组，提供一个发送消息的方法对观察组进行消息推送。</p>\n<p>在观察者中提供一个消息响应的方法，响应消息。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>事件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 事件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Event</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        捡到金币<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        通关</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>接口</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 观察者接口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IObserver</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">/// 接收通知</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"subject\">&lt;/param></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"eventMsg\">&lt;/param></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Subject</span> subject<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Event</span> eventMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// 被观察者接口</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISubject</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span> <span class=\"token function\">Observers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>实体对象</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 观察者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IObserver</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Subject</span> subject<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Event</span> eventMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>eventMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">case</span> Event<span class=\"token punctuation\">.</span>捡到金币<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    subject<span class=\"token punctuation\">.</span>Score <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">case</span> Event<span class=\"token punctuation\">.</span>通关<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    subject<span class=\"token punctuation\">.</span>Score <span class=\"token operator\">+=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">/// 被观察者</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Subject</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ISubject</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span> _observers<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// 发送消息</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"eventMsg\">&lt;/param></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Notify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Event</span> eventMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            _observers<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">=></span>x<span class=\"token punctuation\">.</span><span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>eventMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            _observers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span> <span class=\"token function\">Observers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">return</span> _observers<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            _observers<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            _observers<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"使用委托和事件\"><a class=\"markdownIt-Anchor\" href=\"#使用委托和事件\">#</a> 使用委托和事件</h2>\n<p>在 Csharp 中内置了委托和事件来处理这种一对多的响应方式。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>c#内置了委托和事件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObserverPattern</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// 观察者模式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">internal</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"小白\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mouse</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"小鼠\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            c<span class=\"token punctuation\">.</span><span class=\"token function\">OnCatCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">event</span> <span class=\"token class-name\">Action</span> catCom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCatCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;来了\"</span><span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            catCom<span class=\"token punctuation\">?.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Mouse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cat</span> cat<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 将事件绑定到方法</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            cat<span class=\"token punctuation\">.</span>catCom <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>MouseRun<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MouseRun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;快跑!!\"</span><span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>        </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h2>\n<p>其实观察者模式就是对象的一种 <code>间接同步调用</code> ，使用这种方法是为了解除耦合，达到统一分配管理的作用。</p>\n<p>从上文提到的可以知道，这种模式是同步的，也就是说当存在一组观察者时，那么可能会导致 <code>阻塞</code> ，但在实际中可能没这么严重，但在使用中我们还需注意。</p>\n<blockquote>\n<p>如果你在每次响应后给出一个状态，表示通知的响应情况，那么这就接近  <code>责任链模式</code> 了。</p>\n</blockquote>\n<h2 id=\"销毁对象\"><a class=\"markdownIt-Anchor\" href=\"#销毁对象\">#</a> 销毁对象？</h2>\n<p>在书中提到一个问题很有趣，在观察者模式中销毁对象该怎么办呢？</p>\n<p>在销毁对象前，需要解除监听，确保对象被正确销毁。</p>\n<h2 id=\"现状\"><a class=\"markdownIt-Anchor\" href=\"#现状\">#</a> 现状</h2>\n<blockquote>\n<p>观察者模式出现于 1994 年（比我还大😄), 因此基本都是基于类来实现的，但现在更流行 <code>函数式编程</code> ，可能不太符合现在的编程美学。例如 C# 的 event 就是现代化的观察者模式。</p>\n</blockquote>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/12/29/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2020/12/29/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/",
            "title": "享元模式",
            "date_published": "2020-12-29T09:17:22.000Z",
            "content_html": "<blockquote>\n<p>享元模式 (FlyweightPattern)：使用共享以高效地支持大量的细粒度对象。</p>\n</blockquote>\n<p>FlyweightPattern 的目的是  <code>提高效率，节省内存空间</code> 。</p>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/09/11/Unity%E7%83%AD%E6%9B%B4%E6%96%B0%E5%88%9D%E6%AD%A5/",
            "url": "https://www.fasty97.top/2020/09/11/Unity%E7%83%AD%E6%9B%B4%E6%96%B0%E5%88%9D%E6%AD%A5/",
            "title": "Unity热更新初步",
            "date_published": "2020-09-11T04:21:41.000Z",
            "content_html": "<blockquote>\n<p>此文为热更新学习笔记记录</p>\n</blockquote>\n<h3 id=\"ab包\"><a class=\"markdownIt-Anchor\" href=\"#ab包\">#</a> AB 包</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200911/aMXVGwgBYNkX.png\" alt=\"AB包浏览器\"><br>\n<img data-src=\"https://pic.fasty97.top/blog/20200911/8uaUFBUnpFsG.png\" alt=\"AB包配置\"></p>\n<ul>\n<li>LZ4 比标准压缩程度小，但对于内存的占用相对较小，在使用时无需全部解压（<strong>推荐使用</strong>）</li>\n<li>ETI 在资源包中不包含资源的类型信息</li>\n<li>FR 重新打包时需要重新构建包和 ClearFolders 不同，它不会删除不存在的包。</li>\n<li>ITTC 增量构建检查时，忽略类型数的更改</li>\n<li>Append Hash 将文件哈希值附加到资源包名上</li>\n<li>SM 严格模式，如果打包出错，则打包直接失败</li>\n<li>DRB 运行时构建</li>\n</ul>\n<h4 id=\"打包\"><a class=\"markdownIt-Anchor\" href=\"#打包\">#</a> 打包</h4>\n<p>进过 AB 打包后，我们发现生成了如下的文件：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200911/OOvX2aB3ieJj.png\" alt=\"打包生成文件\"><br>\n其中包含我们的<strong>主包文件</strong> PC 和我们的资源包文件 model。<br>\n打包完成的资源包以<strong>二进制存储</strong><br>\n manifest 文件为对应资源的配置文件。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200911/2xEeB6noUX5c.png\" alt=\"AB包资源浏览\"></p>\n<h3 id=\"加载资源\"><a class=\"markdownIt-Anchor\" href=\"#加载资源\">#</a> 加载资源</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 加载 AB 包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ab<span class=\"token operator\">=</span> AssetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">LoadFromFile</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>streamingAssetsPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/model\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 加载资源</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> asset<span class=\"token operator\">=</span> ab<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAsset</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>asset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 注意 Ab 包不能重复加载（否则会出错）</span></pre></td></tr></table></figure><h4 id=\"异步加载资源\"><a class=\"markdownIt-Anchor\" href=\"#异步加载资源\">#</a> 异步加载资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 异步加载资源</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"abName\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"resName\">&lt;/param></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"callBack\">&lt;/param></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token generic-method\"><span class=\"token function\">LoadAbResAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> abName<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> resName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">UnityAction<span class=\"token punctuation\">&lt;</span>AssetBundleRequest<span class=\"token punctuation\">></span></span> callBack<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ab <span class=\"token operator\">=</span> AssetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">LoadFromFileAsync</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>streamingAssetsPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/model\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> ab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> res <span class=\"token operator\">=</span> ab<span class=\"token punctuation\">.</span>assetBundle<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>resName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tcallBack<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 卸载单个 ab 包</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tab<span class=\"token punctuation\">.</span>assetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">Unload</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 卸载所有 Ab 包，选 true 会删除场景上通过 ab 包加载的资源</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tAssetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">UnloadAllAssetBundles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 异步加载</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token generic-method\"><span class=\"token function\">LoadAbResAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"model\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"资源加载完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>asset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"资源依赖\"><a class=\"markdownIt-Anchor\" href=\"#资源依赖\">#</a> 资源依赖</h3>\n<p>如果一个资源被打包为 ab 包，那么这个资源使用的其他资源依赖会被默认打入资源包。</p>\n",
            "tags": [
                "unity",
                "热更新"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/07/04/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2020/07/04/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/",
            "title": "命令模式",
            "date_published": "2020-07-04T08:36:31.000Z",
            "content_html": "<blockquote>\n<p>游戏编程模式算是一本比较著名的书了，全书针对游戏编程中的问题介绍了多种设计模式。学习设计模式可以加强我们的程序架构能力，写出更加强大和优雅的程序。</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90cnkuZG90Lm5ldC8=\">在线 C#</span></p>\n<h3 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h3>\n<p>其实针对 <code>设计模式</code> ，之前我就学习过《大话设计模式》自己也随书将二十多种设计模式实现了一遍；但我在学习游戏开发的过程中发现，标准的设计模式并非对游戏编程支持良好，故而有了专门看一看游戏设计模式的打算，加上寒假学习 cpp，让我有了拿起这本书的想法。<br>\n此文仅为学习记录，欢迎指正。</p>\n<p><code>设计模式并不是刻意为之的东西，是前辈经验的总结，也许你在不知不觉中就已经使用了某种设计模式。</code></p>\n<h3 id=\"命令模式\"><a class=\"markdownIt-Anchor\" href=\"#命令模式\">#</a> 命令模式</h3>\n<blockquote>\n<p>将一个请求封装成一个对象，从而允许你使用不同的请求、队列和日志将将客户端参数化，支持请求的撤销与恢复。</p>\n</blockquote>\n<p>从上述的描述中我们可以找到几个关键点： <code>请求队列</code> ， <code>日志</code> ， <code>撤销与恢复</code> 。<br>\n如果你需要这些特性，此事不妨试试命令模式吧。</p>\n<h4 id=\"适用场景\"><a class=\"markdownIt-Anchor\" href=\"#适用场景\">#</a> 适用场景</h4>\n<ol>\n<li>试想一下，我们在游戏中需要监听用户的输入，以让我们控制的角色响应玩家发布的 <code>命令</code> ，这个命令可能是移动，攻击，也可能是打开菜单，退出游戏。在需要复杂的输入检测时，你可能需要将玩家输入进行组合，如在恰当的时机按下某几个键位就可以使用特殊技能。</li>\n<li>在网络游戏中，我们操控我们的角色需要在所有连接的客户端中同步，其中有一种同步方式称为 <code>状态同步</code> ，及玩家操作角色时，客户端会向所有服务器执行相同的命令，以同步角色的状态信息。这样的情况，多少也使用了命令模式在里面。</li>\n<li>如果你需要撤销和重做，如一款回合制策略游戏，你可能需要撤销之前的动作，让玩家更专注于策略本身。</li>\n</ol>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<p>根据上述描述，我们可以建立一个最基础的命令模式模板。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pl<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> moveC<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MoveCommand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    moveC<span class=\"token punctuation\">.</span><span class=\"token function\">Excute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    moveC<span class=\"token punctuation\">.</span><span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token function\">Player</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"玩家pos:[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">y</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Command</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Excute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MoveCommand</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">Command</span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Player</span> player<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token function\">MoveCommand</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span><span class=\"token class-name\">Player</span> pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token operator\">=</span>pl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Excute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move Excute!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move To &#123;0&#125;,&#123;1&#125;\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    player<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    player<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+=</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move Undo!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    player<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    player<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-=</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如上所示就是一个命令模式的基本使用，在某些情况下我们应该将所有操作用命令管理，尽管这样比较麻烦，但一旦建立起一个统一的管理模式后，你会发现一切都是值得的。</p>\n<h3 id=\"存在的问题\"><a class=\"markdownIt-Anchor\" href=\"#存在的问题\">#</a> 存在的问题</h3>\n<p>仔细观察你会发现，我们每次我们使用一个命令都会创建一个命令对象，如果我们频繁的使用命令我们就会不断的创建对象，而这些对象其实我们只使用了一次。怎么解决这个问题呢？下一章的 <code>享元模式</code> 让我们一起来解决吧。</p>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/05/23/%E8%88%92%E6%9C%8D%E7%9A%842D%E7%9B%B8%E6%9C%BA-Cinemachine/",
            "url": "https://www.fasty97.top/2020/05/23/%E8%88%92%E6%9C%8D%E7%9A%842D%E7%9B%B8%E6%9C%BA-Cinemachine/",
            "title": "舒服的2D相机-Cinemachine",
            "date_published": "2020-05-23T03:13:14.000Z",
            "content_html": "<blockquote>\n<p>上周我利用一周的时间完成了一个解密竞速小游戏，这也是没空更新的一个原因吧</p>\n</blockquote>\n<p>因为时间比较短，就选择了 2D 项目来练练手，在人物角色控制写完了之后，就想着写个摄像机来控制视野，索性就想到了 <code>Cinemachine</code> ，记得之前好像看到 Cinemachine 有一套比较好用的摄像机系统，就拿来试试了。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/qb1Kss4Mw96k.gif\" alt=\"效果预览\"></p>\n<p>可以看到其效果包含以下几个方面</p>\n<ul>\n<li>跟随玩家角色的移动</li>\n<li>在小范围内移动不会触发摄像机位置的改变</li>\n<li>摄像机缓动</li>\n<li>摄像机视野不会超出地图范围</li>\n</ul>\n<p>这几个效果自己手写还是挺麻烦，让我们来看看 <code>Cinemachine</code>  怎么做。</p>\n<h3 id=\"如何使用\"><a class=\"markdownIt-Anchor\" href=\"#如何使用\">#</a> 如何使用</h3>\n<ol>\n<li>创建一个 2D 虚拟相机：</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/AVXP8rVMR5N9.png\" alt=\"\"><br>\n2. 为虚拟相机指定 Flow<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/KJPSbevHst01.png\" alt=\"\"><br>\n3. 设置活死区和插值<br>\n <code>此时已经可以实现摄像机跟随了，但是此时摄像机可能会照到非地图区域</code> <br>\n 4. 设定地图碰撞区域<br>\n创建一个空物体并挂载多边形碰撞器（目前只支持这种类型的碰撞器） <code>记得设置为触发器</code> <br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/mjeXKALIvuha.png\" alt=\"\"><br>\n为虚拟相机添加如下组件，将碰撞设置进去<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/E1mVRf835ude.png\" alt=\"\"><br>\n此时你可以实现上述的所有功能了。</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/28/Ink%E5%89%A7%E6%83%85%E7%BC%96%E6%8E%92/",
            "url": "https://www.fasty97.top/2020/04/28/Ink%E5%89%A7%E6%83%85%E7%BC%96%E6%8E%92/",
            "title": "Ink剧情编排",
            "date_published": "2020-04-28T13:54:55.000Z",
            "content_html": "<h3 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h3>\n<ol>\n<li>下载 inky 编辑器</li>\n<li>编写 ink 文件</li>\n<li>下载安装 unity 支持</li>\n<li>找到 ink 示例，将对应的 ink 生成的 json 导入运行游戏即可。</li>\n</ol>\n<h3 id=\"unity使用流程\"><a class=\"markdownIt-Anchor\" href=\"#unity使用流程\">#</a> unity 使用流程</h3>\n<p>在 unity 中，我们需要通过代码来驱动我们的剧情的进行。</p>\n<ol>\n<li>\n<p>首先我们需要 <code>创建至少2种Prefab</code> ，一种表示文字，一种表示按钮。</p>\n</li>\n<li>\n<p>然后我们需要创建一个 story 对象，载入对应的 json 文件<br>\n <code>story = new Story (inkJSONAsset.text);</code></p>\n</li>\n<li>\n<p>判断 story 能否继续，若能继续使用代码创建对应的游戏对象</p>\n</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>canContinue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Continue gets the next line of the story</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text <span class=\"token operator\">=</span> story<span class=\"token punctuation\">.</span>Continue <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// This removes any white space from the text.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">Trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Display the text on screen!</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">CreateContentView</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// Display all the choices, if there are any!</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>currentChoices<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> story<span class=\"token punctuation\">.</span>currentChoices<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">Choice</span> choice <span class=\"token operator\">=</span> story<span class=\"token punctuation\">.</span>currentChoices <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token class-name\">Button</span> button <span class=\"token operator\">=</span> CreateChoiceView <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>Trim <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token comment\">// Tell the button what to do when we press it</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tbutton<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span>AddListener <span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tOnClickChoiceButton <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// If we've read all the content and there's no choices, the story is finished!</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token class-name\">Button</span> choice <span class=\"token operator\">=</span> <span class=\"token function\">CreateChoiceView</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End of story.\\nRestart?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tchoice<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">StartStory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> CreateContentView <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">Text</span> storyText <span class=\"token operator\">=</span> Instantiate <span class=\"token punctuation\">(</span>textPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tstoryText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tstoryText<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>SetParent <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Creates a button showing the choice text</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token return-type class-name\">Button</span> CreateChoiceView <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// Creates the button from a prefab</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token class-name\">Button</span> choice <span class=\"token operator\">=</span> Instantiate <span class=\"token punctuation\">(</span>buttonPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Button</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tchoice<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>SetParent <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// Gets the text from the button prefab</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token class-name\">Text</span> choiceText <span class=\"token operator\">=</span> choice<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Text<span class=\"token punctuation\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tchoiceText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// Make the button expand to fit the text</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token class-name\">HorizontalLayoutGroup</span> layoutGroup <span class=\"token operator\">=</span> choice<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span> <span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>HorizontalLayoutGroup<span class=\"token punctuation\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tlayoutGroup<span class=\"token punctuation\">.</span>childForceExpandHeight <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> choice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>要记得每次显示时清除上一次的显示结果</li>\n</ol>\n<h2 id=\"书写规则\"><a class=\"markdownIt-Anchor\" href=\"#书写规则\">#</a> 书写规则</h2>\n<blockquote>\n<p>ink 有一套自己的书写格式，不符合规范时无法编译。</p>\n</blockquote>\n<ul>\n<li>选项 + xx 在选择后会重复 选项</li>\n<li>选项 + [xx] 在选择后不会重复 选项</li>\n<li>…</li>\n</ul>\n<h2 id=\"unity支持\"><a class=\"markdownIt-Anchor\" href=\"#unity支持\">#</a> Unity 支持</h2>\n<p>更新时间：2022 年 12 月 8 日 16:39:09</p>\n<blockquote>\n<p>INk 提供了 Unity 插件来支持。我们可以在 github 或者是 AssterStore 中获取。</p>\n</blockquote>\n<p>在 Unity 导入 <code>.ink</code>  文件可以在右侧检视图看到如下界面：</p>\n<p>在这个界面可以对整个故事流程进行概览。</p>\n<p>同时每次修改 <code>.ink</code>  文件后，都会自动生成一个 <code>json</code>  文件。我们要使用的就是生成的 Json 文件。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212151532228.png\" alt=\"image-20221215153223990\"></p>\n<h3 id=\"常用功能\"><a class=\"markdownIt-Anchor\" href=\"#常用功能\">#</a> 常用功能</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 设置变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Ink<span class=\"token punctuation\">.</span>variablesState<span class=\"token punctuation\">[</span><span class=\"token string\">\"hp\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 游戏端函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Ink<span class=\"token punctuation\">.</span><span class=\"token function\">BindExternalFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> info<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日志：\"</span> <span class=\"token operator\">+</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 保存</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> savedJson <span class=\"token operator\">=</span> _inkStory<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">ToJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 读取</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>_inkStory<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">LoadJson</span><span class=\"token punctuation\">(</span>savedJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 从节点获取元数据</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tags<span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">TagsForContentAtPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DATA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>tags<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tag|\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>2023 年 6 月 14 日 09:58:30 更新</p>\n</blockquote>\n<h3 id=\"text-animator-for-unity\"><a class=\"markdownIt-Anchor\" href=\"#text-animator-for-unity\">#</a> Text Animator for Unity</h3>\n<blockquote>\n<p>这里推荐一个插件用于字符动画的播放 <code>Text Animator for Unity</code></p>\n</blockquote>\n<p>只需在 Text 上挂上相关组件即可以使用来实现文字的动画效果。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202306140946043.png\" alt=\"Text Animator\"></p>\n<p>同时插件提供了很多内置的效果：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202306140949470.png\" alt=\"image-20230614094916425\"></p>\n<p>使用 ink 和 textAnimator 配合实现的对话效果预览：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202306140956218.gif\" alt=\"效果预览\"></p>\n<center>效果预览</center>\n<h3 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5rbGVzdHVkaW9zLmNvbS9pbmsv\">inkle 官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lua2xlL2lua3kvcmVsZWFzZXMvdGFnLzAuMTEuMA==\">inky 编辑器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbmRpZW5vdmEuY29tL3UvYmxpbmR2b2xmL2Jsb2dyZWFkLzIzMjQ5\">相关教程参考 - 基础</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbmRpZW5vdmEuY29tL3UvYmxpbmR2b2xmL2Jsb2dyZWFkLzIzMjU3\">相关教程参考 - 高级</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lua2xlL2luay9ibG9iL21hc3Rlci9Eb2N1bWVudGF0aW9uL1J1bm5pbmdZb3VySW5rLm1k\">ink/RunningYourInk.md at master · inkle/ink (github.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNTAwNjExL2FydGljbGUvZGV0YWlscy8xMDkwMzM0MTQ=\">Ink 脚本语言学习笔记（一）_嘉神川优衣的博客 - CSDN 博客_unity ink 使用</span></li>\n</ul>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/27/YarnSpinner%E5%89%A7%E6%83%85%E7%BC%96%E8%BE%91/",
            "url": "https://www.fasty97.top/2020/04/27/YarnSpinner%E5%89%A7%E6%83%85%E7%BC%96%E8%BE%91/",
            "title": "YarnSpinner剧情编辑",
            "date_published": "2020-04-27T14:49:45.000Z",
            "content_html": "<p>本来说好的每周一更又鸽了…<br>\n 今天来水一期，介绍一款很棒的剧情编排应用  <code>YarnSpinner</code> 。</p>\n<h3 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<p><code>YarnSpinner</code>  是一款开源免费的剧情编排应用（或者说是一种用于剧情编排的标记语言）。<br>\n试想我们在开发游戏时，剧情有分支选择，有各种条件检查，如果我们全在代码中去判断和检查不仅繁杂而且非常麻烦，策划学习成本高，耦合性过强。你可能自己想出一套标记语言来表述剧情流程，但自己的力量毕竟是有限的，难免出现一些 bug 和坑。此时，不妨试试这款免费开源，多人共同维护的应用吧。</p>\n<h3 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h3>\n<h4 id=\"代码式编辑\"><a class=\"markdownIt-Anchor\" href=\"#代码式编辑\">#</a> 代码式编辑</h4>\n<p>这里我使用 vscode 作为编辑器，下载一下插件：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200427/a07bJtR8tRDh.png\" alt=\"扩展\"></p>\n<p>我们先创建一个 <code>.yarn</code>  格式的文件，并写入以下内容：</p>\n<pre><code>title: cc\ntags:\ncolorID: 0\nposition: 1,-22\n---\nFasty97: Hi\nPC: 你好？！\nFasty97: 我又回来了！\nPC: 是忘了什么东西吗？\n===\n\n</code></pre>\n<p>这是一段剧本最基本的格式（一个 yarn 文件至少包含一段剧本）：</p>\n<pre><code>title: cc\ntags:\ncolorID: 0\nposition: 1,-22\n</code></pre>\n<p>以上被称为一个剧本头，表示一段剧本，这些是一些剧本段的基本信息，其中<font color=\"red\">title 必填，position 必填</font>.position 为剧本段的标识符类似于 ID 一样的东西，不要重复。</p>\n<h4 id=\"在unity中使用\"><a class=\"markdownIt-Anchor\" href=\"#在unity中使用\">#</a> 在 unity 中使用</h4>\n<ol>\n<li>下载相关的 unity 支持包（官网有）</li>\n<li>在场景中放入一个 Dialogue 预制体，预制体包含一个默认的设置示例。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200427/AgJFSizXO2LE.png\" alt=\"\"></li>\n<li>创建一个脚本</li>\n<li>设定好相关的资源和引用</li>\n<li>运行游戏尝试按下空格键吧</li>\n</ol>\n<h4 id=\"脚本设定\"><a class=\"markdownIt-Anchor\" href=\"#脚本设定\">#</a> 脚本设定</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditorInternal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Yarn<span class=\"token punctuation\">.</span>Unity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Yarn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">YarnTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DialogueRunner</span> dr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">YarnProgram</span> scriptToLoad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 注入对话资源</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        dr<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>scriptToLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始对话\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 开始一个对话</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            dr<span class=\"token punctuation\">.</span><span class=\"token function\">StartDialogue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/blog/20200427/XkItpdgndrM8.gif\" alt=\"默认\"></p>\n<h3 id=\"使用自定义方法\"><a class=\"markdownIt-Anchor\" href=\"#使用自定义方法\">#</a> 使用自定义方法</h3>\n<p>我现在希望我第一次与角色交流时输出前 2 句，之后每次与角色交流只输出最后 2 句，这是一个游戏中常用的机制。但现在我们的对话只是按照流程依次执行，我们希望这个流程应该是能够动态控制的。<br>\n我们修改上面的 yarn 为：</p>\n<pre><code>title: cc\ntags: \ncolorID: 0\nposition: 1,-22\n---\n&lt;&lt;if visited(&quot;cc&quot;) is false&gt;&gt;\n    Fasty97: Hi\n    PC: 你好？！\n&lt;&lt;else&gt;&gt;\n    Fasty97: 我又回来了！\n    PC: 是忘了什么东西吗？\n&lt;&lt;endif&gt;&gt;\n===\n</code></pre>\n<p>可以看到这次我们使用 类似 if 语句的东西？ 这是 yarn 中提供的一种语法模式，在这里我们会执行一个自定义的方法 visted 并将 &quot;cc&quot; 传入方法中，如果返回的结果是 false 就执行下面的语句块。</p>\n<h4 id=\"处理自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#处理自定义事件\">#</a> 处理自定义事件</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> visitedNodes<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 已使用节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 注入对话资源</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dr<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>scriptToLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 注入处理方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    dr<span class=\"token punctuation\">.</span><span class=\"token function\">AddFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"visited\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Value<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> parameters<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> nodeName <span class=\"token operator\">=</span> parameters<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> visitedNodes<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>nodeName<span class=\"token punctuation\">.</span>AsString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 绑定事件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dr<span class=\"token punctuation\">.</span>onNodeComplete<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> visitedNodes<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建一个 HashSet 集合用于存放所有已经被使用过的 node，绑定一个 onNodeComplete 事件，这个事件有系统自动调用，在实现中为集合加入元素。<br>\n然后注入一个方法，第一个参数指定方法名（在 yarn 文件下的名称），第二个参数指定参数个数，第三个参数就是写入一个方法了，在方法中我们检查集合是否已经包含该值返回结果，一个自定义不可重复方法就处理好了。</p>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200427/zqkvGNEMJPMw.gif\" alt=\"visited效果\"></p>\n<p>使用相同的方法你还可以创建各种各样的方法在 yarn 中使用。<br>\n值得注意的是：<br>\n通过源代码我们可以知道，yarn 只支持以下几种数据类型。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Number<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>NumberValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>StringValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Bool<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>BoolValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Null<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJuc3Bpbm5lci5kZXYv\">YarnSpinner 官网</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJuc3Bpbm5lcnRvb2wuZ2l0aHViLmlvL1lhcm5FZGl0b3Iv\"> YarnSpinner 在线编辑器</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lhcm5TcGlubmVyVG9vbC9ZYXJuU3Bpbm5lcg==\"> YarnSpinner github</span></p>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/15/Cinemachine%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/04/15/Cinemachine%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Cinemachine的基本使用",
            "date_published": "2020-04-15T10:02:16.000Z",
            "content_html": "<p>Unity 版本：<font color=green>2019.3.6f1</font></p>\n<p><font color=red>长文警告！！！</font></p>\n<blockquote>\n  是否为摄像机脚本困扰？是否为镜头动画烦恼？ Cinemachine 超强插件解决你的问题！\n</blockquote>\n<h3>安装Cinemachine</h3>\n<p>现在 Cinemachine 作者已经投靠 unity 官方了，所以 Cinemachine 也成为了 Unity 的官方插件，我们可以直接在 PackageManager 中下载：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/DBHDdslXchVa.png\" alt=\"\"></p>\n<h3>各类相机简述</h3>\n<p>安装之后我们可以在顶部菜单栏，看到如下的选项：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/gd1H7MDqJgJs.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n  <th>选项</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Virtual Camera</td>\n  <td>虚拟摄像机</td>\n</tr>\n<tr>\n  <td>FreeLook Camera</td>\n  <td>自由相机，可以保证镜头内出现头和身体，及相机的活动范围在目标周围圆柱（曲面的）表面，一般用于第三人称控制器</td>\n</tr>\n<tr>\n  <td>State-driven Camera</td>\n  <td>状态驱动相机。添加虚拟相机列表，可以在不同的相机直接直接实现平滑切换，同时其子相机列表如果没有设置LookAt对象等，会直接使用这个父相机的对象。</td>\n</tr>\n<tr>\n  <td>ClearShot Camera</td>\n  <td>干净镜头相机。类似上一个相机，区别在于这个相机可以通过判断子相机的CinemachineCollider（如果有），看是否相机被场景物体阻碍，切换相机。具体可看其源码注释。</td>\n</tr>\n<tr>\n  <td>Dolly Camera with Track</td>\n  <td>可推拉的轨道相机。通过结合轨道路径，就可以模拟像拍电影般镜头轨道移动。</td>\n</tr>\n<tr>\n  <td>Group Target Camera</td>\n  <td>多目标相机。可以同时设置多个目标。</td>\n</tr>\n</tbody>\n</table>\n<h4>Cinemachine Brain</h4>\n<p>在我们创建任意虚拟相机后，插件会为我们的摄像机添加此组件，此组件是我们虚拟相机的大脑，控制着真实相机的行为。（不可或缺）<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/4LQud3dfJPHP.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n  <th>变量名</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Live Camera</td>\n  <td>当前选择的虚拟相机。</td>\n</tr>\n<tr>\n  <td>Live Blend</td>\n  <td>当前的镜头转换名称。</td>\n</tr>\n<tr>\n  <td>Show Debug Text</td>\n  <td>在游戏画面左上角显示调试信息。</td>\n</tr>\n<tr>\n  <td>Show Camera Frustum</td>\n  <td>显示相机的视锥体，相比原来自带的边框，这个会裁切掉不在显示范围内的边线。</td>\n</tr>\n<tr>\n  <td>World Up Override</td>\n  <td>重载世界的向上方向（y轴），虚拟相机是通过这个来判断世界环境。</td>\n</tr>\n<tr>\n  <td>Default Blend</td>\n  <td>默认相机切换模式。</td>\n</tr>\n<tr>\n  <td>Custom Blends</td>\n  <td>自定义相机切换模式。</td>\n</tr>\n<tr>\n  <td>Camera Cut Event</td>\n  <td>相机立即切换时事件。</td>\n</tr>\n<tr>\n  <td>Camera Activated Event</td>\n  <td>相机混合（就是有切换变化，不是Cut时）切换时第一帧事件。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"virtual-camera\"><a class=\"markdownIt-Anchor\" href=\"#virtual-camera\">#</a> Virtual Camera</h3>\n<p>Cinemacine Virtual Camera 是 Cinemachine 最基本的相机，<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/oOMGlgOGXRpo.png\" alt=\"Cinemacine Virtual Camera\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Status</td>\n<td style=\"text-align:left\">状态，Live 为正在使用，Standby 为准备使用（没在用，但如果上一级停用了，可能会切换到当前虚拟相机），Disable 为不能用。按 Solo 按钮会让相机切换到这个虚拟相机（包括 Disable）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Game Window Guides</td>\n<td style=\"text-align:left\">是否在 game 窗口显示辅助</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Save During Play</td>\n<td style=\"text-align:left\">保存游戏中的改变</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">priority</td>\n<td style=\"text-align:left\">虚拟相机的优先级，如果同时有多个虚拟相机，使用优先级最高的。如果多个同等级的，应该是按 Hierarchy 顺序找到第一个虚拟相机。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Lens</td>\n<td style=\"text-align:left\">镜头常用配置。视角区域，最近最远裁切平面， 镜头旋转角度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Body</td>\n<td style=\"text-align:left\">相机本身。四种：Hard constraint，固定距离，相当于第一人称。 Orbital Transposer：轨迹转换器？似乎是模拟第三人称。 Tracked Dolly，轨道推拉，相机只能在轨道上移动（即使设置了 Follow 对象），需要轨道路径 CinemachinePath。 Transposer，普通的镜头转换。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Aim</td>\n<td style=\"text-align:left\">瞄准设置，有三种：Hard constraint，固定距离，没有任何平滑效果。Composer，有平滑效果的瞄准目标。Group Composer，同时瞄准多个目标。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Noise</td>\n<td style=\"text-align:left\">噪音，用于相机抖动，预设有多种效果，也可以自己建立新效果。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Extension</td>\n<td style=\"text-align:left\">扩展，可以添加诸如相机碰撞器，相机变焦器等</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"timeline\"><a class=\"markdownIt-Anchor\" href=\"#timeline\">#</a> TimeLine</h4>\n<p>在 TimeLine 中实现 2 个镜头间的切换非常容易。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/cfRA1u2z5SND.png\" alt=\"\"><br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/D0m6KY0DjAHH.gif\" alt=\"\"></p>\n<h3 id=\"freelook\"><a class=\"markdownIt-Anchor\" href=\"#freelook\">#</a> FreeLook</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/uFWo9v918gKw.png\" alt=\"FreeLook 相机视野\"><br>\n FreeLook 相机是一个自由相机，类似于第三人称游戏中的相机，可以使用鼠标控制相机的朝向多方向的观察角色；其相机视野像是一个圆柱体，如上图所示。（相机始终会在这个圆柱体的轨道上运动。）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/EMNEzmU0LM9r.gif\" alt=\"FreeLook\"><br>\n 大多数参数与 Virtual Camera 相似，值得注意的是：<br>\n<font color=\"red\">在 FreeLook 相机中需要绑定 顶部，中间，底部三个位置，这三个位置将决定相机的最大视野。</font></p>\n<h3 id=\"blendlist\"><a class=\"markdownIt-Anchor\" href=\"#blendlist\">#</a> BlendList</h3>\n<p>如名字一样他管理的是一个 camera 列表，并将列表内的 camera 做混合到达射线机之间更自然的切换效果。<br>\n<strong>我们可以控制摄像机切换的 缓动函数</strong>。<br>\n值得注意的是：当 BlendList 启用时，其下的摄像机会依次使用最后停留在最后一个摄像机里。</p>\n<h3 id=\"cinemachinestatedrivencamera\"><a class=\"markdownIt-Anchor\" href=\"#cinemachinestatedrivencamera\">#</a> CinemachineStateDrivenCamera</h3>\n<p>这是被动画状态所驱动的虚拟相机管理器，能够在觉得切换动画时，快速的切换该动画应该使用的相机。【注意设置层级和绑定动画控制器】<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/OnntsqFJoil7.png\" alt=\"CinemachineStateDrivenCamera\"></p>\n<h3 id=\"clearshoot\"><a class=\"markdownIt-Anchor\" href=\"#clearshoot\">#</a> ClearShoot</h3>\n<p>ClearShoot 也是一个管理器，负责管理一组 camera，他的效果是时刻选择最优的摄像机。在复杂的场景中，我们的角色可能被环境所遮挡，我们需要多个摄像机来处理这种情况。<br>\n如下图所示，我设置了 2 个摄像机，一个在顶部，一个在后方，在角色移动到墙壁后面时，后方的摄像机被遮挡，此时会自动启动顶部摄像机。在角色回到墙壁后面时，顶部摄像机被遮挡，只能切换到后面的摄像机。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/lDRTT3hjBhtH.gif\" alt=\"ClearShoot\"></p>\n<h3 id=\"targetgroup\"><a class=\"markdownIt-Anchor\" href=\"#targetgroup\">#</a> TargetGroup</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/ws4uSH9Nvs2O.png\" alt=\"TargetGroup\"><br>\n 目标组管理器，可以让位于目标组管理器中的目标 <code>尽可能</code> 的位于屏幕中。<br>\n在使用目标组管理器时，务必为摄像机设置目标组类型：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/rN7xlXVSamTd.png\" alt=\"\"></p>\n<h3 id=\"mixing\"><a class=\"markdownIt-Anchor\" href=\"#mixing\">#</a> Mixing</h3>\n<p>Mixing 摄像机混合管理器，可以将多个摄像机的信息进行混合按照权重，得到最终的显示画面。<br>\n（通过多相机的焦点处建立坐标系按权重分配偏移）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/mJ0BILNkgXu1.png\" alt=\"Mixing\"></p>\n<h3 id=\"活区和死区\"><a class=\"markdownIt-Anchor\" href=\"#活区和死区\">#</a> 活区和死区</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/L2dUgC4hSHQs.png\" alt=\"活区和死区\"></p>\n<ul>\n<li>A 区域为死区（Dead Zone），对象在死区内任意移动 <code>不会改变</code> 摄像机的位置。</li>\n<li>B 区域为活区（Soft Zone），对象在活区时会触发摄像机 <code>缓动</code> ，最终将对象固定在死区。</li>\n<li>C 区域为界外区，对象在界外区活动时，摄像机会 <code>立即</code> 改变位置时，使对象位于活区。</li>\n</ul>\n<h3>本文参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NTUyODg2L2FydGljbGUvZGV0YWlscy83OTM4ODUyNw==\">[1] Unity Cinemachine 插件学习笔记</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tpcml0b1YvYXJ0aWNsZS9kZXRhaWxzLzk2Nzc5NDk3\">[2] 个人笔记】Unity 插件 “Cinemachine”—— 实现尼尔机械纪元运镜设计</span></p>\n<h3 id=\"dolly轨道\"><a class=\"markdownIt-Anchor\" href=\"#dolly轨道\">#</a> Dolly 轨道</h3>\n<p>我们可以创建一个自定义的轨道，将摄像机限制在该轨道上。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/5JS6PFq2vAWt.png\" alt=\"\"><br>\n如图所示我创建了一个圆形轨道，摄像机只能在轨道上运动。</p>\n<h3 id=\"dolly-with-cart轨道\"><a class=\"markdownIt-Anchor\" href=\"#dolly-with-cart轨道\">#</a> Dolly with Cart 轨道</h3>\n<p>让物体沿着轨道运动<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/O7FvKn3fSIff.gif\" alt=\"Dolly with Cart轨道\">（这是一个很强大的功能，其实我们不止能用在摄像机上，可以用在任何游戏对象上，让这个对象，或 ui 只能沿着这个轨道运动，并实时设置要达到哪个点，简言之这是一个曲线编辑器。）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/iGxYjFgflcq3.png\" alt=\"\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>Cinemachine 是一款非常棒的智能摄像机插件，非常的方便易用。解决大部分的摄像机问题，甚至无需编写代码。当然我们也可以使用代码来控制摄像机，更灵活的处理摄像机与角色之间的关系。</p>\n",
            "tags": [
                "unity",
                "Cinemachine"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B/",
            "url": "https://www.fasty97.top/2020/04/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B/",
            "title": "深入理解协程",
            "date_published": "2020-04-12T02:43:20.000Z",
            "content_html": "<blockquote>\n<p>在很多编程语言中都支持协程，例如在我们之前提到的 lua 中，协程是一个虚拟的线程技术。</p>\n</blockquote>\n<h3 id=\"简述\"><a class=\"markdownIt-Anchor\" href=\"#简述\">#</a> 简述</h3>\n<p>想一想我们平时购买电脑提及的，cpu 是四核八线程，其实 cpu 原先只能处理处理一件事，也就是说 cpu 默认是一个核心对应一条线程的，但是如果我们需要同时处理多个任务，而我们并没有那么多的线程数量。<br>\n然后前人们就提出了虚拟线程的概念，将 cpu 的单个线程，虚拟出多条线程，也就有了我们四核八线程，八核十六线程等的概念；在应用程序这边也有了线程和进程的概念，在把进程再细分，虚拟化软件的线程就得到了协程的概念。</p>\n<blockquote>\n<p>至此你知道，协程就是对线程的再细分，是线程的再虚拟化即可。</p>\n</blockquote>\n<h3 id=\"unity的协程\"><a class=\"markdownIt-Anchor\" href=\"#unity的协程\">#</a> unity 的协程</h3>\n<p>虽然说协程的概念并不新颖，但在现在大趋势的互联网开发领域可能很少涉及到 <code>协程</code> 这个词汇。<br>\n协程就是协力去完成一件事，这很容易想到多线程的概念，例如我们进行一次网络请求我们需要等待 response 之后才能下一步操作，此时我们就会用到 <code>互斥锁</code> 、 <code>线程安全</code> 等概念。<br>\n在 unity 中或者说在游戏引擎中，由于受到游戏主循环线程的制约，所以不能确保多线程的安全性，此时在同一线程下继续使用协程来承担多线程的工作就显得尤为重要。<br>\n（unity 也退出了以性能优先的 ECS 模式，摒弃 Mono 框架，实现了可多线程协助开发的开发模式）<br>\n下面我们就主要以 unity 的协程详细介绍。</p>\n<h3 id=\"unity协程示例\"><a class=\"markdownIt-Anchor\" href=\"#unity协程示例\">#</a> unity 协程示例</h3>\n<p>看这个例子：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建协程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Cor1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2s到了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 启动协程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Cor1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这是一个简单示例，可以看到协程需要返回一个 <code>IEnumerator</code>  可迭代对象，这本来是 Csharp 中的迭代器模式的实现，在 unity 中 unity 以此为原型实现了协程。</p>\n<h3 id=\"协程的参数\"><a class=\"markdownIt-Anchor\" href=\"#协程的参数\">#</a> 协程的参数</h3>\n<p>在上面我们使用了  <code>new WaitForSeconds()</code> ，这表示等待指定的时间。【注意 WaitForSeconds 与 Time.Scale 相关】<br>\n在上面使用的 WaitForSeconds 之外还有许多的参数，这些参数要么需要花费时间，要么返回 bool，总之就是需要确定一个 moveNext。</p>\n<h3 id=\"协程的使用情况\"><a class=\"markdownIt-Anchor\" href=\"#协程的使用情况\">#</a> 协程的使用情况</h3>\n<ol>\n<li>用于不确定的时长情况（例如：网络请求，读写文件）</li>\n<li>用于延迟执行</li>\n<li>可当做简易计时器使用（例如：生产一批敌人）</li>\n</ol>\n<h3 id=\"协程的嵌套\"><a class=\"markdownIt-Anchor\" href=\"#协程的嵌套\">#</a> 协程的嵌套</h3>\n<p>协程支持嵌套，如下是一个利用协程实现的巡逻的简单实现。<br>\n<strong>注：在 unity 中，协程返回 0 或 null 表示等待下一帧。</strong></p>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200412/c1jAFxkeWJve.gif\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Coroutines</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 协程测试</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CoroutTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Transform<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> wayPoints<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isLoop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            isLoop <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">StartLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">StartLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> point <span class=\"token keyword\">in</span> wayPoints<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">MoveTarget</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>isLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">MoveTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token operator\">!=</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">MoveTowards</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"让协程动起来\"><a class=\"markdownIt-Anchor\" href=\"#让协程动起来\">#</a> 让协程动起来</h3>\n<ul>\n<li>\n<p>StartCoroutine(nameof(StartLoop));<br>\n 以字符串形式启动协程，能够在外部停止协程，无法传递参数。</p>\n</li>\n<li>\n<p>StartCoroutine(StartLoop);<br>\n 以迭代器形式启动协程，能够传递参数，无法在外部使用 stop 停止协程。</p>\n</li>\n</ul>\n<h3 id=\"让协程停下来\"><a class=\"markdownIt-Anchor\" href=\"#让协程停下来\">#</a> 让协程停下来</h3>\n<p>协程本质是一个迭代器，当 moveNext 为 false 时即认为协程中所有的项目都已经执行完毕。<br>\n在 unity 中有以下几种方式停止协程：</p>\n<ol>\n<li>StopCoroutine ()  注意此方式只能停止以字符串形式启动的协程 【在协程外部使用】</li>\n<li>yield break   跳出协程【在协程内部使用】</li>\n<li>通过逻辑来停止 【使其协程执行条件不满足】</li>\n<li>设置物体不激活 【再次激活协程也不会恢复】</li>\n<li>StopAllCoroutine () 终止所有协程</li>\n</ol>\n<p>如上面协程嵌套的例子中，如果我们想要协程停止：</p>\n<ol>\n<li>设置 isLoop=false；让其在执行一次后不满足条件自动停下</li>\n<li>在协程内部 break</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token operator\">==</span>wayPoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在协程外部 stop</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">StopCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>StartLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"协程的设计思想\"><a class=\"markdownIt-Anchor\" href=\"#协程的设计思想\">#</a> 协程的设计思想</h3>\n<h4 id=\"协程是否取代update\"><a class=\"markdownIt-Anchor\" href=\"#协程是否取代update\">#</a> 协程是否取代 update？</h4>\n<p>通过上面的例子，你大可发现，协程其实是对 update 的另一种实现，我们甚至可以只使用协程而不使用任何 update 和 fixedUpdate 完成程序的编写。<br>\n但我们如果这样做不是本末倒置了吗？协程是 unity 推出的延迟执行的一种范式，其还是基于 update 为原理的上层实现。</p>\n<h4 id=\"使用协程会大大提升程序效率吗\"><a class=\"markdownIt-Anchor\" href=\"#使用协程会大大提升程序效率吗\">#</a> 使用协程会大大提升程序效率吗？</h4>\n<p>不会，协程本质上还是在一条线程上，尽管可以多条协程并行，但这些协程始终还是运行在一条线程上，速度和效率并不会得到很大的提升。反而开辟多条线程并行，线程需要多多协程的状态保持监听，在协程大量结束时会触发大量 GC 回收，可能会降低程序的运行效率。</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>协程是运行在线程上的线程，其运作方式任然基于单线程，并不会因为使用协程提高程序的运行效率，但协程方便的书写方式，强大的功能能够提高我们作为开发者的开发效率。<br>\n从某种意义上来讲，协程更像是一个精美的语法糖</p>\n",
            "tags": [
                "协程",
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/07/%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E8%A7%92%E8%89%B2%E6%91%84%E5%83%8F%E6%9C%BA%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/",
            "url": "https://www.fasty97.top/2020/04/07/%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E8%A7%92%E8%89%B2%E6%91%84%E5%83%8F%E6%9C%BA%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/",
            "title": "第三人称角色摄像机案例分析",
            "date_published": "2020-04-07T14:17:28.000Z",
            "content_html": "<blockquote>\n<p>很多第三人称角色扮演游戏都有一个很棒的角色摄像机</p>\n</blockquote>\n<h3 id=\"预览\"><a class=\"markdownIt-Anchor\" href=\"#预览\">#</a> 预览</h3>\n<p>实现后的效果如下：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200407/DdMsrT65K52J.gif\" alt=\"自由摄像机\"><br>\n使用鼠标即可以移动摄像机，摄像机能智能的检测到碰撞体，并自动修正位置。</p>\n<h4 id=\"备注\"><a class=\"markdownIt-Anchor\" href=\"#备注\">#</a> 备注</h4>\n<p>Camera.fieldOfView 属性可以获取到摄像机的焦距，修改该值，可以实现拉进拉远效果。</p>\n<h3 id=\"核心参考\"><a class=\"markdownIt-Anchor\" href=\"#核心参考\">#</a> 核心参考</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mouseX <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mouse X\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mouseY <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mouse Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localRotation <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localRotation <span class=\"token operator\">*</span>Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>mouseY<span class=\"token punctuation\">,</span> mouseX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>以上代码是将鼠标移动和摄像机位置关联起来的关键代码，首先我们取得鼠标的 x 和 y 轴上的 axis 值，然后将摄像机的旋转量 *(-mouseY, mouseX, 0) 构成的四元数。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span>vector3<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>可以将一个 3 维向量转换为一个四元数。</p>\n<h3 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\">#</a> 完整代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">NaughtyAttributes</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">_Scripts</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 摄像机控制器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CameraController</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩家\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Transform</span> player<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"平滑速度\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> smooth <span class=\"token operator\">=</span> <span class=\"token number\">10f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"h轴偏转速度\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> hSpeed <span class=\"token operator\">=</span> <span class=\"token number\">6f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"v轴偏转速度\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> vSpeed <span class=\"token operator\">=</span> <span class=\"token number\">6f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"相机位置偏移\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"锚点位置偏移\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> pivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MinMaxSlider</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"偏转角范围\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector2</span> minMaxVAngle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> targetFov<span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// 目标 Fov</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> targetPivotOffset<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 目标锚点 offset</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> targetCamOffset<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 目标相机 offset</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Transform</span> cam<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Camera</span> myCamera<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> smoothPivotOffset<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 当前锚点插值</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> smoothCamOffset<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 当前相机位置插值</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> defaultFov<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 默认 fov</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> relCameraPosMag<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 射线检测长度</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> angleH<span class=\"token punctuation\">,</span> angleV<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            cam <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            myCamera <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Camera<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            defaultFov <span class=\"token operator\">=</span> myCamera<span class=\"token punctuation\">.</span>fieldOfView<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// 设置相机默认位置</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> Quaternion<span class=\"token punctuation\">.</span>identity <span class=\"token operator\">*</span> pivotOffset <span class=\"token operator\">+</span> Quaternion<span class=\"token punctuation\">.</span>identity <span class=\"token operator\">*</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            smoothPivotOffset <span class=\"token operator\">=</span> pivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            smoothCamOffset <span class=\"token operator\">=</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            angleH <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>eulerAngles<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\">// 射线检测</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            relCameraPosMag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> player<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>magnitude <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">// 重置属性</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            ResetTargetOffsets <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            ResetFov <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            angleH <span class=\"token operator\">+=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Mouse X\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> hSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            angleV <span class=\"token operator\">+=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Mouse Y\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> vSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token comment\">// 限制偏转</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            angleV <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>angleV<span class=\"token punctuation\">,</span> minMaxVAngle<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> minMaxVAngle<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> aimRotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>angleV<span class=\"token punctuation\">,</span> angleH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>angleV<span class=\"token punctuation\">,</span> angleH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token comment\">//y 旋转</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> camYRotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> angleH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">// 焦距</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            myCamera<span class=\"token punctuation\">.</span>fieldOfView <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>myCamera<span class=\"token punctuation\">.</span>fieldOfView<span class=\"token punctuation\">,</span> targetFov<span class=\"token punctuation\">,</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token comment\">// 射线检测动态修正位置</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> baseTempPosition <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> camYRotation <span class=\"token operator\">*</span> targetPivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> noCollisionOffset <span class=\"token operator\">=</span> targetCamOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> zOffset <span class=\"token operator\">=</span> targetCamOffset<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span> zOffset <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> zOffset<span class=\"token operator\">+=</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                noCollisionOffset<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> zOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">PosCheck</span><span class=\"token punctuation\">(</span>baseTempPosition<span class=\"token operator\">+</span>aimRotation<span class=\"token operator\">*</span>noCollisionOffset<span class=\"token punctuation\">,</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>zOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token comment\">// 碰撞修正相机位置</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            smoothPivotOffset <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>smoothPivotOffset<span class=\"token punctuation\">,</span> targetPivotOffset<span class=\"token punctuation\">,</span> smooth <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            smoothCamOffset <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>smoothCamOffset<span class=\"token punctuation\">,</span> noCollisionOffset<span class=\"token punctuation\">,</span> smooth <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> camYRotation <span class=\"token operator\">*</span> smoothPivotOffset <span class=\"token operator\">+</span> aimRotation <span class=\"token operator\">*</span> smoothCamOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token comment\">/// 重置 offset</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ResetTargetOffsets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            targetPivotOffset <span class=\"token operator\">=</span> pivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            targetCamOffset <span class=\"token operator\">=</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token comment\">/// 重置 FOV</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ResetFov</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            targetFov <span class=\"token operator\">=</span> defaultFov<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token comment\">/// 检查摄像机位置</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"checkPos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"offset\">&lt;/param></span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">PosCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> checkPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token comment\">// 获得碰撞器高度</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> playerH<span class=\"token operator\">=</span>player<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CapsuleCollider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.75f</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                <span class=\"token punctuation\">?</span> player<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CapsuleCollider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.75f</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                <span class=\"token punctuation\">:</span> player<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CharacterController<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">ViewPosCheck</span><span class=\"token punctuation\">(</span>checkPos<span class=\"token punctuation\">,</span> playerH<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ReverseViewPosCheck</span><span class=\"token punctuation\">(</span>checkPos<span class=\"token punctuation\">,</span>playerH<span class=\"token punctuation\">,</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token comment\">/// 碰撞检查</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"checkPos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"playerH\">&lt;/param></span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">ViewPosCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> checkPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> playerH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> target <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> playerH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Physics<span class=\"token punctuation\">.</span><span class=\"token function\">SphereCast</span><span class=\"token punctuation\">(</span>checkPos<span class=\"token punctuation\">,</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span>target<span class=\"token operator\">-</span>checkPos<span class=\"token punctuation\">,</span><span class=\"token keyword\">out</span>  <span class=\"token class-name\">RaycastHit</span> hit<span class=\"token punctuation\">,</span>relCameraPosMag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hit<span class=\"token punctuation\">.</span>transform<span class=\"token operator\">!=</span>player<span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span>hit<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Collider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isTrigger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token comment\">/// 反向碰撞检测</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"checkPos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"playerH\">&lt;/param></span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"maxDistance\">&lt;/param></span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">ReverseViewPosCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> checkPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> playerH<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maxDistance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token comment\">// Cast origin.</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> origin <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> playerH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Physics<span class=\"token punctuation\">.</span><span class=\"token function\">SphereCast</span><span class=\"token punctuation\">(</span>origin<span class=\"token punctuation\">,</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> checkPos <span class=\"token operator\">-</span> origin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> <span class=\"token class-name\">RaycastHit</span> hit<span class=\"token punctuation\">,</span> maxDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hit<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">!=</span> player <span class=\"token operator\">&amp;&amp;</span> hit<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">!=</span> transform <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>hit<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Collider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isTrigger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/25/unity%20ScriptableObject%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/03/25/unity%20ScriptableObject%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "unity ScriptableObject的使用",
            "date_published": "2020-03-25T06:41:22.000Z",
            "content_html": "<h3 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h3>\n<p>ScriptableObject 是 unity 提出的针对数据存储资源的解决方案，能够将数据配置项 <code>可视化</code> 的展示在 unityd 属性面板中，并且极易于 json 进行数据交互。<br>\n个人使用过后觉得，其操作方式和继承非常类似，感觉像是对继承进一步封装使其更符合 unity 开发需要，让数据实体化，具现化的展示，通过拖拽式即可像拆装零件一般自由组合数据。（总而言之是对继承和多态的封装）</p>\n<h3 id=\"使用场景\"><a class=\"markdownIt-Anchor\" href=\"#使用场景\">#</a> 使用场景</h3>\n<p>用于 ScriptableObject 是针对 unity 的，在 unity 使用时比传统的数据格式如 json，xml 更加方便快捷。而且在面对诸如策划，美工等不了解程序的人员来说，上手更加快捷。<br>\n实质上，ScriptableObject 主要还是对数据进行存储和处理，只要是使用数据的地方都可以使用 ScriptableObject 进行配置式管理，这样相比直接继承式的数据传递，耦合性更低。<br>\n更符合 <code>多组合少继承</code> 的设计理念。</p>\n<h3 id=\"基本使用\"><a class=\"markdownIt-Anchor\" href=\"#基本使用\">#</a> 基本使用</h3>\n<p>遵循步骤：</p>\n<ol>\n<li>创建资源脚本，继承自 <code>UnityEngine.ScriptableObject</code></li>\n<li>创建资源对象</li>\n<li>在其他脚本中以组件形式指定资源对象</li>\n</ol>\n<p>我们可以将一些诸如敌人的血量，攻击，防御等数值存储在 ScriptableObject 中。</p>\n<h4 id=\"创建资源脚本\"><a class=\"markdownIt-Anchor\" href=\"#创建资源脚本\">#</a> 创建资源脚本</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create ItemAssets\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemAssets</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> price<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"title:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">title</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">  price:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">price</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"指定资源使用\"><a class=\"markdownIt-Anchor\" href=\"#指定资源使用\">#</a> 指定资源使用</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ScriptableObject</span> itemAsset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>itemAsset<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>itemAsset<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"单例资源脚本\"><a class=\"markdownIt-Anchor\" href=\"#单例资源脚本\">#</a> 单例资源脚本</h3>\n<p>在平时我们一般使用 GameManager 实现单例模式并设置在切换场景时不销毁来达到全局数据的管理。<br>\n在 ScriptableObject 中，我们同样可以达到这个效果，由于 ScriptableObject 是一个资源可直接存储在磁盘，不需要设置不销毁也能存储全局数据，管理同步。</p>\n<h4 id=\"创建单例资源\"><a class=\"markdownIt-Anchor\" href=\"#创建单例资源\">#</a> 创建单例资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Assets</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create GameStateAssets\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameStateAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> level<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">GameStateAsset</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">GameStateAsset</span> Instance <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    _instance<span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameStateAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                   _instance<span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameStateAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                   _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>DontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"level:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">level</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">  score:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">score</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用单例资源\"><a class=\"markdownIt-Anchor\" href=\"#使用单例资源\">#</a> 使用单例资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>level <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"临时资源\"><a class=\"markdownIt-Anchor\" href=\"#临时资源\">#</a> 临时资源</h3>\n<p>有时我们需要动态的生成一些对象，这些对象的数据可能并不是静态的设置好的，并且只是临时的使用这些数据，我们可以直接创建临时的 ScriptableObject 来处理这种情况。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token operator\">=</span> ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ItemAssets<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>item<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">\"测试物品\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"插槽式资源\"><a class=\"markdownIt-Anchor\" href=\"#插槽式资源\">#</a> 插槽式资源</h3>\n<p>有时数据是需要被再加工的，加工的过程不应该影响到数据的使用，对于使用数据的一方，不必知晓数据的具体加工过程，这些过程就好像一个个插槽，就等待着期望的数据进入即可。<br>\n从这里我们也可以看出，在 ScriptableObject 中是可以包含 <code>方法</code> 的。</p>\n<h4 id=\"创建资源\"><a class=\"markdownIt-Anchor\" href=\"#创建资源\">#</a> 创建资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PowerUpAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create HealthUpAsset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HealthUpAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">PowerUpAsset</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Health<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currHealth <span class=\"token operator\">+=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用资源\"><a class=\"markdownIt-Anchor\" href=\"#使用资源\">#</a> 使用资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemHpUp</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HealthUpAsset</span> hpAsset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnTriggerEnter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collider</span> other<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span><span class=\"token function\">CompareTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Player\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            hpAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"与json交互\"><a class=\"markdownIt-Anchor\" href=\"#与json交互\">#</a> 与 Json 交互</h3>\n<p>ScriptableObject 和 json 有很高的亲和性（ScriptableObject 就是基于类的延伸）<br>\n在某些情况下，我们可能需要将 json 数据存入 ScriptableObject 或将 ScriptableObject 写入 json 来实现一些如游戏存档等的功能。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>Serialization</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Assets<span class=\"token punctuation\">.</span>TalkJson</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create GameFileAsset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameFileAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Serializable</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Archive</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DateTime <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Level <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">GameFileAsset</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">GameFileAsset</span> Instance</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token function\">InitializeFromDefault</span><span class=\"token punctuation\">(</span>UnityEditor<span class=\"token punctuation\">.</span>AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Test game file.asset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Archive<span class=\"token punctuation\">></span></span> archives<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Archive</span> currArchive<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeFromDefault</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameFileAsset</span> file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            _instance <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>HideAndDontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>       <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LoadFromJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>           _instance <span class=\"token operator\">=</span> ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>           JsonUtility<span class=\"token punctuation\">.</span><span class=\"token function\">FromJsonOverwrite</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>           _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>HideAndDontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>       <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SaveToJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>           Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Saving game file to &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>           System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">WriteAllText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> JsonUtility<span class=\"token punctuation\">.</span><span class=\"token function\">ToJson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"个人理解\"><a class=\"markdownIt-Anchor\" href=\"#个人理解\">#</a> 个人理解</h3>\n<p>ScriptableObject 其实就是对类的特殊处理，在 unity 中将这里的类脚本特异性的识别让其数据可视化，并在内部实现了实例化处理，让其可以直接在脚本中使用而无需实例化对象。</p>\n<p>[toc]</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/22/HDRP%E4%BD%93%E9%AA%8C2B%E5%B0%8F%E5%A7%90%E5%A7%90/",
            "url": "https://www.fasty97.top/2020/03/22/HDRP%E4%BD%93%E9%AA%8C2B%E5%B0%8F%E5%A7%90%E5%A7%90/",
            "title": "HDRP体验2B小姐姐",
            "date_published": "2020-03-22T06:59:19.000Z",
            "content_html": "<p>在上一个文章<a href=\"https://www.fasty97.top/lwrp%e4%b8%8bshadergraph%e7%9a%84%e4%bd%bf%e7%94%a8/\" title=\"LWRP\"> LWRP</a> 中我们介绍了 LWRP 的基本使用方法，并使用 ShaderGraph 写了两个小例子。<br>\n这次我们就来尝试一下 HDRP，效果上要比 LWRP 或者普通渲染管线好多少。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><video src=\"https://pic.fasty97.top/blog/blog-nierHDRP.mp4\" autoplay loop style=\"width:100%\"></video><br>\n可以看到在 HDRP 中的效果还是比较不错的，各种光影的质量都还不错。</p>\n<h3 id=\"hdrp-入门\"><a class=\"markdownIt-Anchor\" href=\"#hdrp-入门\">#</a> HDRP 入门</h3>\n<ol>\n<li>下载安装以下依赖:<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200322/kl15u7a5e2GF.png\" alt=\"\"></li>\n<li>创建 HDRP 资源并设置（这个和 LWRP 差不多）</li>\n<li>设置颜色空间为 <code>Linner</code>  (这个设置很重要)</li>\n<li>创建全局 Volm 管理环境</li>\n</ol>\n<p>以上就是主要的步骤，下面我详细说一下一些细节的地方。</p>\n<h3 id=\"如何使用天空盒\"><a class=\"markdownIt-Anchor\" href=\"#如何使用天空盒\">#</a> 如何使用天空盒</h3>\n<p>在 HDRP 中有多种天空类型： <code>颜色渐变天空</code> ， <code>纯色天空</code> ， <code>HDRI天空</code> ， <code>物理天空</code> 等。<br>\n大家可以看到我的天空是有一些云朵的一个天空盒，在 HDRP 中默认是纯色的黑天空，我们可以添加一个 Volume 对象或者在游戏物体上挂载一个 Volume 脚本来对默认设置进行重写。<br>\n如我这样我可视化环境组件，用于设置天空类型，这里我将其设置为 HDRI，再添加一个 HDRI Sky 组件用于详细设置，在 Hdri Sky 项目中设置导入的天空盒 cubemap。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200322/WnOvO7pHMlnr.png\" alt=\"\"><br>\n添加一个：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/i4UgANuYjKXk.png\" alt=\"\"><br>\n在设置中设置：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/5MV2zF3dOEoE.png\" alt=\"\"><br>\n此时就算是把天空盒光线环境搭好了，快放入模型试试吧。</p>\n<h3 id=\"金属感和平滑度\"><a class=\"markdownIt-Anchor\" href=\"#金属感和平滑度\">#</a> 金属感和平滑度</h3>\n<p>在这个模型中，2B 所持的剑是金属制品，但之前的之前的视频展示并没有去做这方面的处理。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/PjUJNsJzTJ6j.png\" alt=\"\"><br>\n这里我将金属度设置为 1，给一个很强的金属感，平滑度给个 0.6。（如我们现实世界一样，一般来说金属度高的东西，平滑度也会高一些，反射光线的能力强一些。）<br>\n设置金属和平滑度一部分可以补足金属器物的质感和光泽。<br>\n调整金属和平滑度后：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/wHbsjytdodBJ.png\" alt=\"\"><br>\n视频预览：<br>\n<video src=\"https://pic.fasty97.top/blog/nierHDRP2.mp4\" autoplay loop style=\"width:100%\"></video></p>\n<p>[toc]</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/21/LWRP%E4%B8%8BShaderGraph%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/03/21/LWRP%E4%B8%8BShaderGraph%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "LWRP下ShaderGraph的使用",
            "date_published": "2020-03-21T09:03:57.000Z",
            "content_html": "<p><strong>丢失了好多文章，故更新一波，开一个新坑 CG</strong></p>\n<blockquote>\n<p>不论是 LWRP 还是 ShaderGraph 都已经不是什么新技术了</p>\n</blockquote>\n<h3 id=\"cg杂谈\"><a class=\"markdownIt-Anchor\" href=\"#cg杂谈\">#</a> CG 杂谈</h3>\n<p>计算机图形学（ComputGraph）简称 <code>CG</code> ，是一门研究计算机图形图像处理的学科，将符号或电子信号可视化是一门比较晦涩难懂的东西，比如 <code>傅里叶变换</code> 用于研究声音和波的关系，让波得以表示。众所周知，建模时我们总是使用三角面来构成一个模型，以三角面的数量来衡量一个模型的精细程度。从三维物体坐标系到二维的屏幕坐标系，深度如何表示？遮挡关系如何计算？这就是 CG 所研究的东西，计算机图形学也被称为程序员的浪漫，这就是这个系列要说的东西。</p>\n<h3 id=\"lwrp\"><a class=\"markdownIt-Anchor\" href=\"#lwrp\">#</a> LWRP</h3>\n<p><code>LWRP</code>  (轻度渲染管线) 是 unity 推出的可自定义的渲染管线，其初衷是为了移动平台和轻度主机平台。在轻度渲染管线下，我们可以对渲染管线做更多的设置和处理，并且可以使用 shaderGraph 可视化的 shader 编辑器像连连看一样完成 shader 的编写。<br>\n通过 shader 我们可以实现许多视觉效果，如飘动的红旗，水面的倒影，卡通人物渲染等；有些可以使用模型来解决但使用 shader 不仅高效还能处理许多模型无法解决的东西。</p>\n<p><em>不知道你是否看过游戏的模型，或者说取解包过游戏，很多游戏，模型可能并没有游戏中那么<strong>漂亮</strong>！</em><br>\n但是通过 shader，光照，后处理等，玩家看到的就是非常赞的效果了！（就好像是美颜滤镜一样）</p>\n<h3 id=\"hdrp\"><a class=\"markdownIt-Anchor\" href=\"#hdrp\">#</a> HDRP</h3>\n<p><code>HDRP</code>  (高清渲染管线) 如名字所言，是专门在对画面质量要求较高的主机或 PC 端开发游戏所使用的。（但 unity 开发大型游戏真的够呛，目前在我看来 ue4 可能更适合）<br>\n使用 HDRP 我们可以更高程度的自定义我们的渲染系统，要知道在游戏引擎中，渲染占据了很大的一块。</p>\n<h3 id=\"shader的基础认知\"><a class=\"markdownIt-Anchor\" href=\"#shader的基础认知\">#</a> Shader 的基础认知？</h3>\n<p>关于 shader 的基础认知，我在之前曾写过一篇文章（虽然没写完），我会抽空把那篇文章写完的。<br>\n如果有兴趣不妨去看看：<a href=\"http://www.fasty97.top/unity%e5%9b%be%e5%bd%a2%e5%ad%a6-%e6%b8%b2%e6%9f%93%e6%b5%81%e7%a8%8b/\" title=\"[传送门]unity图形学 渲染流程\">[传送门] unity 图形学 渲染流程</a></p>\n<h3 id=\"lwrp下shadergraph的搭建\"><a class=\"markdownIt-Anchor\" href=\"#lwrp下shadergraph的搭建\">#</a> LWRP 下 Shadergraph 的搭建</h3>\n<p><code>Unity版本 2019.3.0f6</code> <br>\n 听了这么多，也许你还是比较懵吧，没事。让我们来揭开 shader 的神秘面纱吧</p>\n<ol>\n<li>\n<p>首先安装如下依赖包：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/IHRSz6lfegXD.png\" alt=\"\"><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/BLWb4IR9U5wt.png\" alt=\"\"></p>\n</li>\n<li>\n<p>创建渲染管线资源并设置：<br>\n值得一提的是，在 unity2019.3 中已经将 LWRP 更名为 UWRP 了，unity 想在之后让 LWRP 变成通用的渲染管线取代原先的 Stand 渲染管线；所以我们需要创建一个 UWRP 的资源。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/TR1o545kQ1Nz.png\" alt=\"\"></p>\n</li>\n<li>\n<p>使用 UWRP<br>\n 首先我们创建一个 Cube，一个材质，一个 PBRGraph（基于物理的 shader）。</p>\n</li>\n</ol>\n<h4 id=\"pbrgraph\"><a class=\"markdownIt-Anchor\" href=\"#pbrgraph\">#</a> PBRGraph?</h4>\n<p>这里补充一点小知识，所谓 PBR 就是基于物理的渲染，什么叫做基于物理的渲染呢？简单的说就是原先的模型在绘制贴图时，贴图师就会直接在贴图上绘制好高光，粗糙度，磨损等，这是基于经验的固定化的处理。而基于物理的渲染则是通过复杂的计算和光照模型的影响，动态的计算出模型的细节，让模型处于不同的环境中能够有不同的表现，是基于环境影响的。</p>\n<p>打开 PBRGraph：<br>\n创建如下结点并连接<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/KC6HrUGWV9pC.png\" alt=\"PBRGraph\"><br>\n 然后将 shader 指定到对应材质，将材质指定到我们的 Cube，尝试调整数值吧。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/PkIawTx0mOAc.gif\" alt=\"\"><br>\n到这里我们已经知道如何基本的使用 shaderGraph 了呢，但你可能会说，这不是自带 shader 就拥有的功能吗？</p>\n<h3 id=\"做一个边缘发光效果\"><a class=\"markdownIt-Anchor\" href=\"#做一个边缘发光效果\">#</a> 做一个边缘发光效果</h3>\n<p>下面我们使用菲涅尔效应做一个简单的边缘自发光，其 shadergraph 如图所示，通过菲涅尔结点指定一个发光颜色和强度来实现。（非常简单吧）<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/pmNHEXl7Y02o.png\" alt=\"\"><br>\n<strong>效果图：</strong><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/dQdztRRmd7pH.gif\" alt=\"边缘发光效果\"></p>\n<h3 id=\"做一个顶点动画\"><a class=\"markdownIt-Anchor\" href=\"#做一个顶点动画\">#</a> 做一个顶点动画</h3>\n<p>通过顶点偏移我们可以实现一个波浪或是，旗帜飘动的效果：<br>\n主要是使用顶点偏移通过 sin 正弦方式。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/oKWCf4A3lDxM.png\" alt=\"\"></p>\n<p>效果如图：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/5yqXJieqbu2x.gif\" alt=\"\"></p>\n",
            "tags": [
                "shaderGraph"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/10/Timeline%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/02/10/Timeline%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Timeline的基本使用",
            "date_published": "2020-02-10T05:53:35.000Z",
            "content_html": "<p>Unity 版本号：<font color=green>2019.3.0f6</font></p>\n<hr />\n<p>TimeLine 是 unity2017 推出的新功能，其采用时间线的形式组合场景资源， 可以用于编排游戏剧情，过场动画，斩杀镜头，人物特写等效果。</p>\n<h3>创建TimeLine</h3>\n<p>用于播放 TimeLine 的物体必须有这个组件：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/CUXzMDxo2tsx.png\" alt=\"组件\"></p>\n<table>\n<thead>\n<tr>\n  <th align=\"center\">参数名</th>\n  <th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td align=\"center\">Playable</td>\n  <td align=\"center\">Playable资源（TimeLine资源）</td>\n</tr>\n<tr>\n  <td align=\"center\">Update Method</td>\n  <td align=\"center\">更新模式</td>\n</tr>\n<tr>\n  <td align=\"center\">Play On Awake</td>\n  <td align=\"center\">是否启动时自动播放</td>\n</tr>\n<tr>\n  <td align=\"center\">Wrap Mode</td>\n  <td align=\"center\">结束模式，None播放完回到原先属性，Loop循环播放，Hood播放完维持改变</td>\n</tr>\n<tr>\n  <td align=\"center\">Initial Time</td>\n  <td align=\"center\">延迟时间</td>\n</tr>\n</tbody>\n</table>\n<h3>轨道面板</h3>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200210/0l1DQytDcsA2.png\" alt=\"轨道面板\"><br>\n点击左侧的＋，可以添加轨道，这是一个类似视频剪辑的界面，我们可以方便的对轨道进行移动和剪辑。</p>\n<h4>Activation</h4>\n<p>Activation 用于表示物体的激活状态：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/vIzC588mJlSO.gif\" alt=\"Activation\"></p>\n<h4>Animation</h4>\n<p>Animation 用于播放动画，既可以播放已有的动画，也可以自己录制帧动画来使用。<br>\n<strong>注意：使用此轨道的物体会被创建一个 Animator Controller，这个组件不能被删除。</strong><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/gizvroAPPTAo.gif\" alt=\"Animation\"></p>\n<h4>Audio</h4>\n<p>Audio 轨道用于播放音效，如果不指定 AudioSource 就无法细致调节效果。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/zEYKWKgDJrlk.png\" alt=\"Audio\"><br>\n 每个轨道在属性面板都有不同的属性，Audio 面板如下：<br>\n!{Audio 属性}(<span class=\"exturl\" data-url=\"aHR0cDovL3BpYy5mYXN0eTk3LnRvcC9ibG9nLzIwMjAwMjEwL0dvRURiN3FiZFNIUi5wbmc=\">http://pic.fasty97.top/blog/20200210/GoEDb7qbdSHR.png</span>)</p>\n<h4>Control</h4>\n<p>Control 轨道和 Activation 轨道有点相似，但不同的是 Control 轨道可以同时控制多个物体的激活状态。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/y5G5Rhig2kPn.png\" alt=\"Control\"></p>\n<h4>Signal-任意轨道</h4>\n<p>Signal 是非常重要的轨道，在使用 TimeLine 时，你可能会有这样的想法，能不能在时间线上，调用我们自定义的方法呢，在 2019 之前可以通过剪辑间接的完成事件的调用；但现在有了 Signal 轨道的加持，我们可以非常方便的在任意时刻调用方法了。<br>\n创建一个简单的测试脚本，并将脚本挂载在游戏物体上。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SignalTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Signal!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>右键单击任意轨道：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/SAiR90ho2iVi.gif\" alt=\"\"><br>\n此时在属性面板中，可以看到：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/rkIgMqVhBiI3.png\" alt=\"\"><br>\n为了监听这个事件，unity 提示我们缺少一个监听器，点击 Add 添加一个。<br>\n添加好监听器，我们需要创建一个监听实例，这个实例是可以复用的。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/fbn8zd2A3rD3.png\" alt=\"\"></p>\n<p>完成以上步骤我们发现原先有警告的小白标变成了<font color=red>白色</font>。这说明我们设置正确了，然后我们需要绑定事件给实例：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/YYCEgJkFVtkl.png\" alt=\"\"><br>\n尝试运行（播放游戏）一下发现在时间轴运行到小白标时会自动调用我们绑定的方法。</p>\n<h3>Signal-指定轨道</h3>\n<p>上面实现的 Signal 是针对于任意轨道来说的，如果我们需要很多的 Signal 处理起来可能会发生混乱，所以官方提供了专门的 Signal 轨道。<br>\n先给我们的物体添加：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/07nzVWaY41Yw.png\" alt=\"\"><br>\n在属性面板中我们可以对事件实例绑定多个方法，统一管理：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/IvGBUJotShrO.png\" alt=\"\"></p>\n<h3>小技巧</h3>\n<p>在轨道左侧可以点击三点，然后选择 Mute（静音）对指定轨道进行屏蔽。<br>\n在右侧轨道面板中，可以通过重叠区块实现 2 个区块之间的过渡效果。<br>\n可设置轨道的淡入淡出效果：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/TKt9DScaWgab.png\" alt=\"\"></p>\n<h3>驱动摄像机</h3>\n<p>做了一个超级丑的摄像机变换效果：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/UVEeBVXqcg7D.gif\" alt=\"\"></p>\n<h3>代码驱动TimeLine</h3>\n<p>有时候我们可能需要通过代码动态的启动 TimeLine，这也很容易实现：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Signal</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PlayableDirector</span> playDir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Fac</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fac..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            playDir<span class=\"token punctuation\">.</span><span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "unity"
            ]
        }
    ]
}