<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.fasty97.top</id>
    <title>指尖小屋 • Posts by &#34;优雅写代码&#34; category</title>
    <link href="https://www.fasty97.top" />
    <updated>2022-06-29T17:16:30.000Z</updated>
    <category term="生活" />
    <category term="年终总结" />
    <category term="总结" />
    <category term="目标" />
    <category term="Shder" />
    <category term="Graph" />
    <category term="unity插件" />
    <category term="协程" />
    <category term="Async" />
    <category term="新技术体验" />
    <category term="unity" />
    <category term="Cinemachine" />
    <category term="好物推荐" />
    <category term="热更新" />
    <category term="代码" />
    <category term="框架" />
    <category term="shaderGraph" />
    <category term="Lua" />
    <category term="MMD" />
    <category term="PMX" />
    <category term="模型" />
    <category term="VR/AR/MR" />
    <category term="XML" />
    <category term="unity Tool" />
    <category term="多人" />
    <category term="Unity Tool" />
    <category term="FSM" />
    <category term="状态机" />
    <category term="有限状态机" />
    <category term="行为树" />
    <category term="TimeLine" />
    <category term="剧情编排" />
    <category term="Shader" />
    <category term="读书笔记" />
    <category term="Spine" />
    <category term="2D" />
    <category term="渲染管线" />
    <category term="后处理" />
    <category term="可编程渲染管线（SRP）" />
    <category term="ui" />
    <category term="链式编程" />
    <category term="响应式编程" />
    <category term="观察者模式" />
    <category term="异步" />
    <category term="动画" />
    <category term="输入系统" />
    <category term="手柄" />
    <category term="Unity" />
    <category term="UI组件" />
    <category term="性能优化" />
    <category term="Ui" />
    <category term="小技巧" />
    <category term="坑" />
    <category term="HDRP" />
    <category term="编辑器扩展" />
    <category term="uitoolkit" />
    <category term="不规则检测" />
    <category term="设计模式" />
    <category term="存档系统" />
    <category term="截图" />
    <category term="DI" />
    <category term="IOC" />
    <category term="资源管理" />
    <category term="前端小技巧" />
    <category term="动漫" />
    <category term="vs" />
    <category term="书评" />
    <category term="python" />
    <category term="自我认知" />
    <category term="人生意义" />
    <category term="读游戏" />
    <category term="互动叙事" />
    <category term="像素画" />
    <category term="Aseprite" />
    <category term="git" />
    <category term="版本管理" />
    <category term="多人协作" />
    <category term="框架设计" />
    <category term="思维" />
    <category term="并发状态机" />
    <category term="分层状态机" />
    <category term="下推状态机" />
    <category term="AI" />
    <category term="游戏开发小工具" />
    <category term="自制工具" />
    <category term="SqlLite" />
    <category term="存储" />
    <category term="数据库" />
    <category term="实战项目" />
    <category term="解密探索" />
    <category term="开发总结" />
    <category term="数学" />
    <category term="Unity插件" />
    <category term="自制项目" />
    <category term="市场" />
    <category term="创业" />
    <category term="工作" />
    <category term="UE4" />
    <category term="switch" />
    <category term="回合制" />
    <entry>
        <id>https://www.fasty97.top/2022/06/30/Effective%20C#%20%E7%AC%94%E8%AE%B01/</id>
        <title>Effective C# 笔记1</title>
        <link rel="alternate" href="https://www.fasty97.top/2022/06/30/Effective%20C#%20%E7%AC%94%E8%AE%B01/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;今天我要再开一个新坑，学习一下《Effective C#》, 百闻不如一见，确实有必要好好梳理一下自己的代码方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第1条优先使用隐式类型的局部变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第1条优先使用隐式类型的局部变量&#34;&gt;#&lt;/a&gt; 第 1 条：优先使用隐式类型的局部变量&lt;/h2&gt;
&lt;p&gt;用 var 来声明变量而不指明其类型，可以令开发者把注意力更多地集中在名称上面，从而更好地了解其含义。&lt;/p&gt;
&lt;h2 id=&#34;第2条考虑用readonly代替const&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第2条考虑用readonly代替const&#34;&gt;#&lt;/a&gt; 第 2 条：考虑用 readonly 代替 const&lt;/h2&gt;
&lt;p&gt;C# 有两种常量，一种是编译期（compile-time）的常量，另一种是运行期（runtime）的常量，它们的行为大不相同。常量如果选得不合适，那么程序开发工作可能会受影响。编译期的常量虽然能令程序运行得稍快一点，但却远不如运行期的常量那样灵活。只有当程序性能极端重要且常量取值不会随版本而变化的情况下，才可以考虑选用这种常量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;运行期的常量用 &lt;code&gt;readonly&lt;/code&gt;  关键字来声明，编译期的常量用 &lt;code&gt;const&lt;/code&gt;  关键字来声明&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <updated>2022-06-29T17:16:30.000Z</updated>
    </entry>
</feed>
