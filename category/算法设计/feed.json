{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"算法设计\" category",
    "description": "实现你的游戏梦",
    "home_page_url": "http://www.fasty97.top",
    "items": [
        {
            "id": "http://www.fasty97.top/2020/05/10/A%E6%98%9F%E7%AE%97%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6%E5%92%8C%E5%BA%94%E7%94%A8/",
            "url": "http://www.fasty97.top/2020/05/10/A%E6%98%9F%E7%AE%97%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6%E5%92%8C%E5%BA%94%E7%94%A8/",
            "title": "A*算法的研究和应用",
            "date_published": "2020-05-10T13:40:45.000Z",
            "content_html": "<blockquote>\n<p>对 A * 算法早有耳闻，但一直未细致去分析过，最近重新看到这个概念，来尝试分析一波</p>\n</blockquote>\n<h3 id=\"算法定义\"><a class=\"markdownIt-Anchor\" href=\"#算法定义\">#</a> 算法定义</h3>\n<p>A* 算法常被表示为 f (n)=g (n)+h (n)</p>\n<p>**f (n)** 表示从状态 n 到达目标状态的花费的预测值<br>\n **g (n)** 表示从初始状态到达状态 n 的花费<br>\n **h (n)** 表示从状态 n 到达目标状态的花费预测值（最佳路径）</p>\n<p>拖了蛮久了，差点我都忘记了我还有个博客等着我每周一更呢。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/1Ark1TqLH5gG.gif\" alt=\"效果预览\"></p>\n<hr>\n<h3 id=\"a-格子数据\"><a class=\"markdownIt-Anchor\" href=\"#a-格子数据\">#</a> A* 格子数据</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Astar</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 格子类型</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">NodeType</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        Walk<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">/// 障碍物</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Obstacle</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// A * 格子</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AstarNode</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">NodeType</span> Type <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">/// 总花费</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> F <span class=\"token operator\">=></span> G <span class=\"token operator\">+</span> H<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">/// 从起点到当前格子的花费</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> G <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span>  <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// 从当前格子到终点的花费</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> H <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">/// 父节点</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">AstarNode</span> Father <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> X <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Y <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">AstarNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\">NodeType</span> type<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            X <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            Y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            Type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"a寻路\"><a class=\"markdownIt-Anchor\" href=\"#a寻路\">#</a> A * 寻路</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Singleton</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Astar</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Vec2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> X <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Y <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            X <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            Y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 运算符重载</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Vec2 <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec2</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Vec2 <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec2</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>X <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// A 星寻路管理器</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AstarManager</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>AstarManager<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">AstarNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> map<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span> openList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span> closeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">/// 初始化地图信息</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"w\">&lt;/param></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"h\">&lt;/param></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitMapInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> w<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            mapW <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            mapH <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AstarNode</span><span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> w<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token comment\">// 随机阻挡</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AstarNode</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> Random<span class=\"token punctuation\">.</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">?</span> NodeType<span class=\"token punctuation\">.</span>Obstacle <span class=\"token punctuation\">:</span> NodeType<span class=\"token punctuation\">.</span>Walk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">/// 寻路</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"start\">&lt;/param></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"end\">&lt;/param></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span> <span class=\"token function\">FindWay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> start<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec2</span> end<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">// Debug.Log ($\"开始点 (&#123;start.X&#125;,&#123;start.Y&#125;) 结束点（&#123;end.X&#125;,&#123;end.Y&#125;）\");</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token comment\">//1. 是否在地图范围内</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A* 寻路 起点或终点不在地图范围内\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token comment\">//2. 可达</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> s <span class=\"token operator\">=</span> map<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> e <span class=\"token operator\">=</span> map<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> NodeType<span class=\"token punctuation\">.</span>Obstacle <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> NodeType<span class=\"token punctuation\">.</span>Obstacle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A* 寻路起点或 终点不可达\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token comment\">// 清空关闭和开启列表</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            openList<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token comment\">//3. 计算</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            s<span class=\"token punctuation\">.</span>Father <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            s<span class=\"token punctuation\">.</span>G <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            s<span class=\"token punctuation\">.</span>H <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 开始点放入</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                <span class=\"token comment\">// 开始写入</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左上</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 上</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 右上</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 右</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左下</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 下</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                <span class=\"token comment\">// 不存在任何路径</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openList<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A* 死路\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cc <span class=\"token keyword\">in</span> closeList<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> cc<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                <span class=\"token comment\">// 选择消耗最小的点 (根据 F）</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                openList<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>F <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>F <span class=\"token operator\">==</span> b<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>                <span class=\"token comment\">// 放入关闭</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>openList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>                <span class=\"token comment\">// 设置新起点，继续下一次寻路</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                s <span class=\"token operator\">=</span> openList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>                start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>                openList<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>            <span class=\"token comment\">// 回溯路径</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            path<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Father <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                path<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Father<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token comment\">// 翻转 path</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            path<span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>            <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        <span class=\"token comment\">/// 是否在地图中</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>X <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> pos<span class=\"token punctuation\">.</span>X <span class=\"token operator\">>=</span> mapW <span class=\"token operator\">||</span> pos<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> pos<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">>=</span> mapH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token comment\">/// 取得 node</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">AstarNode</span> <span class=\"token function\">GetNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token comment\">/// 将周围点数据计算并写入 openList</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pos\"> 当前位置 & lt;/param></span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"father\"> 父对象 & lt;/param></span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"end\"> 终点 & lt;/param></span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"g\"> 离上一个点的距离（移动花费）&lt;/param></span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> pos<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AstarNode</span> father<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AstarNode</span> end<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> g <span class=\"token operator\">=</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> node <span class=\"token operator\">=</span> <span class=\"token function\">GetNode</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> NodeType<span class=\"token punctuation\">.</span>Obstacle <span class=\"token operator\">||</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>            node<span class=\"token punctuation\">.</span>Father <span class=\"token operator\">=</span> father<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>            node<span class=\"token punctuation\">.</span>H <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">.</span>X <span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>            node<span class=\"token punctuation\">.</span>G <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>G <span class=\"token operator\">+</span> g<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>            openList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"寻路测试\"><a class=\"markdownIt-Anchor\" href=\"#寻路测试\">#</a> 寻路测试</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Astar</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Test</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AStarTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> beginX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> beginY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2</span> offset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> prefab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span>GameObject<span class=\"token punctuation\">></span></span> dictionary<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> GameObject<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2</span> start <span class=\"token operator\">=</span> Vector2<span class=\"token punctuation\">.</span>right <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            start <span class=\"token operator\">=</span> Vector2<span class=\"token punctuation\">.</span>right <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">InitMapInfo</span><span class=\"token punctuation\">(</span>mapW<span class=\"token punctuation\">,</span>mapH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mapW<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> mapH<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go<span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>prefab<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>beginX <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>beginY<span class=\"token operator\">+</span>offset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    go<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">SetParent</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    go<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Type<span class=\"token operator\">==</span>NodeType<span class=\"token punctuation\">.</span>Obstacle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    dictionary<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">FindWay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                    <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token keyword\">in</span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>X<span class=\"token operator\">+</span><span class=\"token string\">\"  \"</span><span class=\"token operator\">+</span>c<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ray<span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenPointToRay</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span>mousePosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token class-name\">RaycastHit</span> hit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Physics<span class=\"token punctuation\">.</span><span class=\"token function\">Raycast</span><span class=\"token punctuation\">(</span>ray<span class=\"token punctuation\">,</span><span class=\"token keyword\">out</span> hit<span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span>collider<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> xy <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token string character\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token comment\">// 开始终点</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">==</span>Vector2<span class=\"token punctuation\">.</span>right<span class=\"token operator\">*</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                        c<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>yellow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                        start<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end<span class=\"token operator\">==</span>Vector2<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                        <span class=\"token comment\">// 终点</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                        c<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                            end<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始寻路\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                        <span class=\"token comment\">// 寻路</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">FindWay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                            <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cc <span class=\"token keyword\">in</span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">.</span>X<span class=\"token operator\">+</span><span class=\"token string\">\"  \"</span><span class=\"token operator\">+</span>cc<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                            dictionary<span class=\"token punctuation\">[</span>cc<span class=\"token punctuation\">.</span>X<span class=\"token operator\">+</span><span class=\"token string\">\"_\"</span><span class=\"token operator\">+</span>cc<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"相关阅读\"><a class=\"markdownIt-Anchor\" href=\"#相关阅读\">#</a> 相关阅读</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDUxMDQ0NA==\">路径规划之 A* 算法</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0twcm9ncmFtL2FydGljbGUvZGV0YWlscy84MTIyNTE3Ng==\">迪杰斯特拉算法</span><br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3FpYW8uZ2l0aHViLmlvL1BhdGhGaW5kaW5nLmpzL3Zpc3VhbC8=\"> A * 算法在线演示</span></p>\n",
            "tags": []
        }
    ]
}