{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"unity 新技术\" category",
    "description": "学习的过程大概就是学了忘,忘了学，抽空多停下来总结，不要冲的太前。",
    "home_page_url": "https://www.fasty97.top",
    "items": [
        {
            "id": "https://www.fasty97.top/2022/06/11/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFUIkit/",
            "url": "https://www.fasty97.top/2022/06/11/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFUIkit/",
            "title": "Unity 新技术UIkit",
            "date_published": "2022-06-11T06:14:27.000Z",
            "content_html": "<h1 id=\"简单介绍\"><a class=\"markdownIt-Anchor\" href=\"#简单介绍\">#</a> 简单介绍</h1>\n<h2 id=\"uibulider的使用\"><a class=\"markdownIt-Anchor\" href=\"#uibulider的使用\">#</a> UIBulider 的使用</h2>\n<blockquote>\n<p>UIElement 是一种类似于 Html 形式进行界面开发的方式，创建的 EditorWidow 包括以下 3 个文件。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220317003758.png\" alt=\"image-20220317003751243\"></p>\n<ul>\n<li>C#- 代码控制界面逻辑 类似于 js</li>\n<li>Uss - 样式控制器 类似于 Css</li>\n<li>Uxml - 基础骨架模板 类型 Html</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220317004247.png\" alt=\"image-20220317004247734\"></p>\n<center>UIBulider界面</center>\n<h2 id=\"双击asset打开编辑窗\"><a class=\"markdownIt-Anchor\" href=\"#双击asset打开编辑窗\">#</a> 双击 Asset 打开编辑窗</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DialogGraphEditWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">VisualElement</span> rootMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">OnOpenAsset</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">OpenAsset</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> line<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EditorUtility<span class=\"token punctuation\">.</span><span class=\"token function\">InstanceIDToObject</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">DialogTreeGraphAsset</span> graph<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> window <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>DialogGraphEditWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            window<span class=\"token punctuation\">.</span>titleContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"对话窗\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Editor/GraphWindow.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rootMain<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                rootMain <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            window<span class=\"token punctuation\">.</span>rootVisualElement<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rootMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            window<span class=\"token punctuation\">.</span>minSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uss-样式表\"><a class=\"markdownIt-Anchor\" href=\"#uss-样式表\">#</a> Uss 样式表</h2>\n<blockquote>\n<p>形如这样的称为样式表 uss，uss 决定了 ui 元素的显示效果。</p>\n</blockquote>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">Label</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">-unity-font-style</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>68<span class=\"token punctuation\">,</span> 138<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uxml-模板\"><a class=\"markdownIt-Anchor\" href=\"#uxml-模板\">#</a> Uxml 模板</h2>\n<blockquote>\n<p>uxml 模板类似于 html，其中包含了所有的静态元素内容。</p>\n<p>uxml 使用 uss 决定其中 ui 元素的具体显示效果。</p>\n</blockquote>\n<p>双击打开 uxml 时默认会自动打开可视化工具 ——UIBulider, 在 UiBulider 中进行可视化的数据操作。</p>\n<h2 id=\"ui-绑定\"><a class=\"markdownIt-Anchor\" href=\"#ui-绑定\">#</a> Ui 绑定</h2>\n<blockquote>\n<p>Ui 绑定文件类似于 JavaScript 代码</p>\n</blockquote>\n<p>我们可以在代码中使用相关的 Api 对 Ui 元素和样式表进行操作，如下所示：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>动态操作</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BagMgrWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Window/UI Toolkit/BagMgrWindow\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShowExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">BagMgrWindow</span> wnd <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>BagMgrWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            wnd<span class=\"token punctuation\">.</span>titleContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BagMgrWindow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// Each editor window contains a root VisualElement object</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> root <span class=\"token operator\">=</span> rootVisualElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// VisualElements objects can contain other VisualElement following a tree hierarchy.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> label <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! From C#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// Import UXML</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> visualTree <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/EditorWindows/BagMgrWindow.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> labelFromUXML <span class=\"token operator\">=</span> visualTree<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>labelFromUXML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// A stylesheet can be added to a VisualElement.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// The style will be applied to the VisualElement and all of its children.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> styleSheet <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>StyleSheet<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/EditorWindows/BagMgrWindow.uss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> labelWithStyle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! With Style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            labelWithStyle<span class=\"token punctuation\">.</span>styleSheets<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>styleSheet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>labelWithStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"debug-工具\"><a class=\"markdownIt-Anchor\" href=\"#debug-工具\">#</a> Debug 工具</h2>\n<blockquote>\n<p>提供有 Ui 检查工具，其中可以查看 Ui 元素的显示状态和包围盒结构，树形结构等，类似 html 的浏览器 F12.</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211211500451.png\" alt=\"image-20221121150027349\"></p>\n<h2 id=\"流程模板\"><a class=\"markdownIt-Anchor\" href=\"#流程模板\">#</a> 流程模板</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>UIElements</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IndexEditorWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">VisualElement</span> rootMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fasty/主界面\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Index.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        rootMain <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> window <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IndexEditorWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        window<span class=\"token punctuation\">.</span>rootVisualElement<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rootMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">CreateUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">InitEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        window<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/// 动态创建 Ui</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// 处理事件</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> btn <span class=\"token operator\">=</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showBtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        btn<span class=\"token punctuation\">.</span>clicked <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Label<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"查看被点击了\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        btn <span class=\"token operator\">=</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"descBtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        btn<span class=\"token punctuation\">.</span>clicked <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Label<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"说明被点击了\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"装备管理小案例\"><a class=\"markdownIt-Anchor\" href=\"#装备管理小案例\">#</a> 装备管理小案例</h1>\n<blockquote>\n<p><ins>2022 年 11 月 21 日 10:32:00 更新</ins></p>\n<p>此案例为 Uitoolkit 练习，使用 Unity2021.3.11f1c2</p>\n</blockquote>\n<h2 id=\"初步设计\"><a class=\"markdownIt-Anchor\" href=\"#初步设计\">#</a> 初步设计</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211211054281.png\" alt=\"image-20221121105406061\"></p>\n<center>简单装备管理设计</center>\n<p>其中涉及到 <code>ListView</code>  控件参考：[Unity - Manual: Create list and tree views (<span class=\"exturl\" data-url=\"aHR0cDovL3VuaXR5M2QuY29t\">unity3d.com</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnVuaXR5M2QuY29tLzIwMjIuMS9Eb2N1bWVudGF0aW9uL01hbnVhbC9VSUUtTGlzdFZpZXctVHJlZVZpZXcuaHRtbCM6fjp0ZXh0PUNyZWF0ZQ==\">https://docs.unity3d.com/2022.1/Documentation/Manual/UIE-ListView-TreeView.html#:~:text=Create</span> a list view 1 Right-click in the,the ListView control in the Hierarchy window. 更多项目)</p>\n<p>++ 🔖值得注意的是： 当因为修改脚本导致窗口无法打开时，可能是因为查找不到窗口的实例，在修正错误后，重启 Unity 编辑器才能正常打开窗体。++</p>\n<h2 id=\"listview的使用\"><a class=\"markdownIt-Anchor\" href=\"#listview的使用\">#</a> ListView 的使用</h2>\n<blockquote>\n<p>这里点击使用的是通用注册事件，同时也可以使用 ListView 的 OnValueChange 方法监听，在监听时获取不到 text 属性，可以在生成时将数据绑定到 <code>viewDataKey</code> 。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> list <span class=\"token operator\">=</span> _rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListView<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list<span class=\"token punctuation\">.</span>itemsSource <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list<span class=\"token punctuation\">.</span>makeItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list<span class=\"token punctuation\">.</span>bindItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">)</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    element<span class=\"token punctuation\">.</span>viewDataKey <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    element<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">RegisterCallback</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MouseDownEvent<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"点击了选项：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">element<span class=\"token punctuation\">.</span>viewDataKey</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> TrickleDown<span class=\"token punctuation\">.</span>TrickleDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "Ui",
                "编辑器扩展",
                "uitoolkit"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/16/Unity%20InputSystem%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2022/05/16/Unity%20InputSystem%E4%BD%BF%E7%94%A8/",
            "title": "Unity InputSystem使用",
            "date_published": "2022-05-16T07:08:41.000Z",
            "content_html": "<blockquote>\n<p>InputSystem 是 Unity 新推出的输入管理系统。</p>\n<p>相比传统的输入系统， <code>InputSystem </code> 支持对设备拔插状态监听和自定义按键映射。</p>\n</blockquote>\n<h1 id=\"以代码的方式运行\"><a class=\"markdownIt-Anchor\" href=\"#以代码的方式运行\">#</a> 以代码的方式运行</h1>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<p>以下为获取使用游戏手柄的方式。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取最后使用的游戏手柄</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> gamePad <span class=\"token operator\">=</span> Gamepad<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// print(gamePad.name);</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 持续判断按键按下</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamePad<span class=\"token punctuation\">.</span>dpad<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">.</span>isPressed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下 上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 按下一次执行一次</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamePad<span class=\"token punctuation\">.</span>dpad<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按 上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 获取左摇杆的值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>move <span class=\"token operator\">=</span> gamePad<span class=\"token punctuation\">.</span>leftStick<span class=\"token punctuation\">.</span><span class=\"token function\">ReadValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>同理可以获取键盘和鼠标的输入：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取当前的键盘</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> keyboard <span class=\"token operator\">=</span> Keyboard<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键盘：\"</span> <span class=\"token operator\">+</span> keyboard<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keyboard<span class=\"token punctuation\">.</span>kKey<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下K\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 获取当前的鼠标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mouse <span class=\"token operator\">=</span> Mouse<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>leftButton<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击鼠标左键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 兼容多个输入</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamepad<span class=\"token punctuation\">.</span>aButton<span class=\"token punctuation\">.</span>wasPressedThisFrame <span class=\"token operator\">||</span> keyboard<span class=\"token punctuation\">.</span>jKey<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"攻击\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"获取连接设备\"><a class=\"markdownIt-Anchor\" href=\"#获取连接设备\">#</a> 获取连接设备</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 所有连接的游戏手柄</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> all <span class=\"token operator\">=</span> Gamepad<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> allGamepad <span class=\"token operator\">=</span> InputSystem<span class=\"token punctuation\">.</span>devices<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x <span class=\"token keyword\">is</span> <span class=\"token class-name\">Gamepad</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"监听设备改变事件\"><a class=\"markdownIt-Anchor\" href=\"#监听设备改变事件\">#</a> 监听设备改变事件</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>InputSystem<span class=\"token punctuation\">.</span>onDeviceChange <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> change<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">case</span> InputDeviceChange<span class=\"token punctuation\">.</span>Added<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新设备加入\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">case</span> InputDeviceChange<span class=\"token punctuation\">.</span>Disconnected<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"设备断开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">case</span> InputDeviceChange<span class=\"token punctuation\">.</span>Reconnected<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重新连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"inputactionasset映射\"><a class=\"markdownIt-Anchor\" href=\"#inputactionasset映射\">#</a> InputActionAsset 映射</h1>\n<blockquote>\n<p>通过输入信号指定 -&gt; 输入行为</p>\n<p>可以通过不同的输入信号 比如鼠标左右键 键盘 WASD 键 而这些输入信号又可以来自于不同的输入设备 比如鼠标 键盘 通过 InputSystem 各种输入设备可以无缝切换。</p>\n<p>也就是说 <strong>输入设备绑定了各种输入信号 而输入信号触发了输入动作</strong></p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517014535.png\" alt=\"\"></p>\n<h2 id=\"actionmaps动作表\"><a class=\"markdownIt-Anchor\" href=\"#actionmaps动作表\">#</a> ActionMaps (动作表)</h2>\n<blockquote>\n<p>动作表表示一套输入动作，可以同时拥有多个动作表，并切换使用</p>\n</blockquote>\n<p>注：指定动作表的 <code>Scheme</code>  来指定该动作表可以使用的游戏控制器</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517021443.png\" alt=\"image-20220517021443591\"></p>\n<p>使用多个动作表可以分离输入和动作，即使在动作表中存在一致的输入也不会冲突。</p>\n<p>Ps：玩家控制时使用 PlayerController 动作表、控制 UI 时使用 UI 动作表</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517015115.png\" alt=\"image-20220517015113956\"></p>\n<h3 id=\"actiontype\"><a class=\"markdownIt-Anchor\" href=\"#actiontype\">#</a> ActionType</h3>\n<p>其中 Value 指代各种连续变化的输入，比如鼠标移动，摇杆偏移，手柄扳机等，但这个选项只会获取当前受控制的一个设备输入。</p>\n<p>Button 则表示按钮输入，无论是鼠标按钮或是手柄按钮，其输入结果为布尔型。</p>\n<p>PassThrough 和 Value 基本相同，但它可以获取所有可用输入设备的输入。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517015834.png\" alt=\"image-20220517015834087\"></p>\n<h3 id=\"controltype\"><a class=\"markdownIt-Anchor\" href=\"#controltype\">#</a> ControlType</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517020054.png\" alt=\"image-20220517020054781\"></p>\n<p>生成 C# 类：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517021932.png\" alt=\"image-20220517021932810\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>全代码控制</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameInput</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PlayerControls</span> playerControls<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Rigidbody</span> rigidbody<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        playerControls<span class=\"token punctuation\">?.</span><span class=\"token function\">Enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDisable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        playerControls<span class=\"token punctuation\">?.</span><span class=\"token function\">Disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        playerControls<span class=\"token punctuation\">?.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        playerControls <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlayerControls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        rigidbody <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Rigidbody<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector2</span> moveDir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Jump<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"跃动\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            rigidbody<span class=\"token punctuation\">.</span><span class=\"token function\">AddForce</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Attack1<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"攻击\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Dpd<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下上键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Start<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Select<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下Select\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>L<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下L\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>LShouder<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下左肩键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Spell<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连按触发\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Spell2<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触发组合键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        moveDir <span class=\"token operator\">=</span> playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Move<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">ReadValue</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>moveDir<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> moveDir<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/NotePad/20220517044539.png\" alt=\"image-20220517044539871\"></p>\n<h1 id=\"在移动设备中使用\"><a class=\"markdownIt-Anchor\" href=\"#在移动设备中使用\">#</a> 在移动设备中使用</h1>\n<blockquote>\n<p>在移动设备中，我们希望能处理操作轴和按钮两种输入事件。</p>\n<p>在 unity 官方 demo 中，提出了相关的解决方案。</p>\n</blockquote>\n<h1 id=\"在ui中使用\"><a class=\"markdownIt-Anchor\" href=\"#在ui中使用\">#</a> 在 UI 中使用</h1>\n<blockquote>\n<p>经过测试在 Ui 中和之前的使用没啥区别，唯一就是要把 EventSystem 的组件更改一下。</p>\n<p>同时之前的 Ipoint 系列接口也能够正常使用。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517052201.png\" alt=\"image-20220517052201158\"></p>\n",
            "tags": [
                "输入系统",
                "手柄"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/10/16/Async%E4%BB%A3%E6%9B%BF%E5%8D%8F%E7%A8%8B/",
            "url": "https://www.fasty97.top/2021/10/16/Async%E4%BB%A3%E6%9B%BF%E5%8D%8F%E7%A8%8B/",
            "title": "Async代替协程",
            "date_published": "2021-10-16T13:51:24.000Z",
            "content_html": "<blockquote>\n<p>在之前 Unity 想要实现延迟执行或者是等待，要么只能使用自己计数的方法，要么使用协程。</p>\n</blockquote>\n<h1 id=\"ep1-协程\"><a class=\"markdownIt-Anchor\" href=\"#ep1-协程\">#</a> Ep.1 协程</h1>\n<p>首先让我们来看一个协程示例：</p>\n<p>示例是循环 10 次，每次等待 0.2s。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>协程示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 启动协程</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"ep2-async-异步\"><a class=\"markdownIt-Anchor\" href=\"#ep2-async-异步\">#</a> Ep.2 Async 异步</h1>\n<blockquote>\n<p>Async 异步的概念是微软基于多线程提出的 Task 解决方案，相比传统多线程具有很多优势。</p>\n</blockquote>\n<ul>\n<li>❤️相比协程来说，异步的方式不需要搭建基础的协程框架（ <code>不需要新创建一个方法</code> ），可以直接在方法中使用关键字实现等待。</li>\n<li>不需要启动</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>Async示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AsyncFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"ep3-解决痛点\"><a class=\"markdownIt-Anchor\" href=\"#ep3-解决痛点\">#</a> Ep.3 解决痛点</h1>\n<blockquote>\n<p>其实 async 还有其他的优势，让我们来看看这些例子😺</p>\n</blockquote>\n<h2 id=\"协程队列\"><a class=\"markdownIt-Anchor\" href=\"#协程队列\">#</a> 协程队列</h2>\n<p>🌓 有时我们需要这样一种情况，需要在 A 执行结束后执行 B，B 执行结束后执行 C。</p>\n<h3 id=\"协程解决方案\"><a class=\"markdownIt-Anchor\" href=\"#协程解决方案\">#</a> 协程解决方案</h3>\n<p>可以看到，通用的解决方案需要创建多个协程方法，并创建一个总协程方法来为所有参与协程进行排序。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全部执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"异步解决方案\"><a class=\"markdownIt-Anchor\" href=\"#异步解决方案\">#</a> 异步解决方案</h3>\n<p>按照协程的思路我们可以这样来替换。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">Fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FunEnd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"特殊使用\"><a class=\"markdownIt-Anchor\" href=\"#特殊使用\">#</a> 特殊使用</h2>\n<h3 id=\"持续执行\"><a class=\"markdownIt-Anchor\" href=\"#持续执行\">#</a> 持续执行</h3>\n<p>可以使用如下的方式来持续执行一系列的动作！😏</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Rote</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> endTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector3</span> dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Time<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> endTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> dir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 线程让步，让线程池重新排</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"多任务并行\"><a class=\"markdownIt-Anchor\" href=\"#多任务并行\">#</a> 多任务并行</h3>\n<p>可以为 Start 方式设定异步 Async</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tasks<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Task<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 异步启动多个 Task 任务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        tasks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">WhenAll</span><span class=\"token punctuation\">(</span>tasks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全部执行完\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"ep4-总结\"><a class=\"markdownIt-Anchor\" href=\"#ep4-总结\">#</a> Ep.4 总结</h1>\n<blockquote>\n<p>使用这样 Async 方式，大大简化了协程的使用复杂度，简化了代码数量，重要的是可以将一些 Task 的特性使用出来。</p>\n<p>✔️同时，Unity 再也不是虚假的多线程了！</p>\n</blockquote>\n",
            "tags": [
                "协程",
                "Async"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/06/08/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFHDRP/",
            "url": "https://www.fasty97.top/2021/06/08/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFHDRP/",
            "title": "Unity 新技术HDRP",
            "date_published": "2021-06-08T03:42:01.000Z",
            "content_html": "<blockquote>\n<p>本系列基于 Unity2021.1.5f1c1</p>\n</blockquote>\n<h2 id=\"安装hdrp\"><a class=\"markdownIt-Anchor\" href=\"#安装hdrp\">#</a> 安装 HDRP</h2>\n<p>在管理器安装 hdrp 后会自动弹出此初始化对话框。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210608121937.png\" alt=\"image-20210608121930293\"></p>\n<p>根据对话框检测的步骤，将需要修正的地方进行修正。</p>\n<blockquote>\n<p>修正后全部呈现绿√。</p>\n</blockquote>\n<p>修正完成，系统自动添加了如下包。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210608122232.png\" alt=\"image-20210608122232513\"></p>\n<h3 id=\"添加天空盒子\"><a class=\"markdownIt-Anchor\" href=\"#添加天空盒子\">#</a> 添加天空盒子</h3>\n<p>在 Volume 组件中添加如下组件，可以设置天空盒。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210730125729.png\" alt=\"image-20210730125722895\"></p>\n<h3 id=\"调节光线亮度\"><a class=\"markdownIt-Anchor\" href=\"#调节光线亮度\">#</a> 调节光线亮度</h3>\n<p>在 Volume 组件中添加如下组件，可以设置调节光线。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210730125833.png\" alt=\"image-20210730125833770\"></p>\n",
            "tags": [
                "unity",
                "HDRP"
            ]
        }
    ]
}