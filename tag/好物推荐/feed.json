{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"好物推荐\" tag",
    "description": "实现你的游戏梦",
    "home_page_url": "http://www.fasty97.top",
    "items": [
        {
            "id": "http://www.fasty97.top/2020/04/28/Ink%E5%89%A7%E6%83%85%E7%BC%96%E6%8E%92/",
            "url": "http://www.fasty97.top/2020/04/28/Ink%E5%89%A7%E6%83%85%E7%BC%96%E6%8E%92/",
            "title": "Ink剧情编排",
            "date_published": "2020-04-28T13:54:55.000Z",
            "content_html": "<h3 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h3>\n<ol>\n<li>下载 inky 编辑器</li>\n<li>编写 ink 文件</li>\n<li>下载安装 unity 支持</li>\n<li>找到 ink 示例，将对应的 ink 生成的 json 导入运行游戏即可。</li>\n</ol>\n<h3 id=\"unity使用流程\"><a class=\"markdownIt-Anchor\" href=\"#unity使用流程\">#</a> unity 使用流程</h3>\n<p>在 unity 中，我们需要通过代码来驱动我们的剧情的进行。</p>\n<ol>\n<li>\n<p>首先我们需要 <code>创建至少2种Prefab</code> ，一种表示文字，一种表示按钮。</p>\n</li>\n<li>\n<p>然后我们需要创建一个 story 对象，载入对应的 json 文件<br>\n <code>story = new Story (inkJSONAsset.text);</code></p>\n</li>\n<li>\n<p>判断 story 能否继续，若能继续使用代码创建对应的游戏对象</p>\n</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>canContinue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Continue gets the next line of the story</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text <span class=\"token operator\">=</span> story<span class=\"token punctuation\">.</span>Continue <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// This removes any white space from the text.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">Trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Display the text on screen!</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">CreateContentView</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// Display all the choices, if there are any!</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>currentChoices<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> story<span class=\"token punctuation\">.</span>currentChoices<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">Choice</span> choice <span class=\"token operator\">=</span> story<span class=\"token punctuation\">.</span>currentChoices <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token class-name\">Button</span> button <span class=\"token operator\">=</span> CreateChoiceView <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>Trim <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token comment\">// Tell the button what to do when we press it</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tbutton<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span>AddListener <span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tOnClickChoiceButton <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// If we've read all the content and there's no choices, the story is finished!</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token class-name\">Button</span> choice <span class=\"token operator\">=</span> <span class=\"token function\">CreateChoiceView</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End of story.\\nRestart?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tchoice<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">StartStory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> CreateContentView <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">Text</span> storyText <span class=\"token operator\">=</span> Instantiate <span class=\"token punctuation\">(</span>textPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tstoryText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tstoryText<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>SetParent <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Creates a button showing the choice text</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token return-type class-name\">Button</span> CreateChoiceView <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// Creates the button from a prefab</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token class-name\">Button</span> choice <span class=\"token operator\">=</span> Instantiate <span class=\"token punctuation\">(</span>buttonPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Button</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tchoice<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>SetParent <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// Gets the text from the button prefab</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token class-name\">Text</span> choiceText <span class=\"token operator\">=</span> choice<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Text<span class=\"token punctuation\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tchoiceText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// Make the button expand to fit the text</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token class-name\">HorizontalLayoutGroup</span> layoutGroup <span class=\"token operator\">=</span> choice<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span> <span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>HorizontalLayoutGroup<span class=\"token punctuation\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tlayoutGroup<span class=\"token punctuation\">.</span>childForceExpandHeight <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> choice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>要记得每次显示时清除上一次的显示结果</li>\n</ol>\n<h3 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5rbGVzdHVkaW9zLmNvbS9pbmsv\">inkle 官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lua2xlL2lua3kvcmVsZWFzZXMvdGFnLzAuMTEuMA==\">inky 编辑器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbmRpZW5vdmEuY29tL3UvYmxpbmR2b2xmL2Jsb2dyZWFkLzIzMjQ5\">相关教程参考 - 基础</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbmRpZW5vdmEuY29tL3UvYmxpbmR2b2xmL2Jsb2dyZWFkLzIzMjU3\">相关教程参考 - 高级</span></li>\n</ul>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/04/27/YarnSpinner%E5%89%A7%E6%83%85%E7%BC%96%E8%BE%91/",
            "url": "http://www.fasty97.top/2020/04/27/YarnSpinner%E5%89%A7%E6%83%85%E7%BC%96%E8%BE%91/",
            "title": "YarnSpinner剧情编辑",
            "date_published": "2020-04-27T14:49:45.000Z",
            "content_html": "<p>本来说好的每周一更又鸽了…<br>\n 今天来水一期，介绍一款很棒的剧情编排应用  <code>YarnSpinner</code> 。</p>\n<h3 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<p><code>YarnSpinner</code>  是一款开源免费的剧情编排应用（或者说是一种用于剧情编排的标记语言）。<br>\n试想我们在开发游戏时，剧情有分支选择，有各种条件检查，如果我们全在代码中去判断和检查不仅繁杂而且非常麻烦，策划学习成本高，耦合性过强。你可能自己想出一套标记语言来表述剧情流程，但自己的力量毕竟是有限的，难免出现一些 bug 和坑。此时，不妨试试这款免费开源，多人共同维护的应用吧。</p>\n<h3 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h3>\n<h4 id=\"代码式编辑\"><a class=\"markdownIt-Anchor\" href=\"#代码式编辑\">#</a> 代码式编辑</h4>\n<p>这里我使用 vscode 作为编辑器，下载一下插件：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200427/a07bJtR8tRDh.png\" alt=\"扩展\"></p>\n<p>我们先创建一个 <code>.yarn</code>  格式的文件，并写入以下内容：</p>\n<pre><code>title: cc\ntags:\ncolorID: 0\nposition: 1,-22\n---\nFasty97: Hi\nPC: 你好？！\nFasty97: 我又回来了！\nPC: 是忘了什么东西吗？\n===\n\n</code></pre>\n<p>这是一段剧本最基本的格式（一个 yarn 文件至少包含一段剧本）：</p>\n<pre><code>title: cc\ntags:\ncolorID: 0\nposition: 1,-22\n</code></pre>\n<p>以上被称为一个剧本头，表示一段剧本，这些是一些剧本段的基本信息，其中<font color=\"red\">title 必填，position 必填</font>.position 为剧本段的标识符类似于 ID 一样的东西，不要重复。</p>\n<h4 id=\"在unity中使用\"><a class=\"markdownIt-Anchor\" href=\"#在unity中使用\">#</a> 在 unity 中使用</h4>\n<ol>\n<li>下载相关的 unity 支持包（官网有）</li>\n<li>在场景中放入一个 Dialogue 预制体，预制体包含一个默认的设置示例。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200427/AgJFSizXO2LE.png\" alt=\"\"></li>\n<li>创建一个脚本</li>\n<li>设定好相关的资源和引用</li>\n<li>运行游戏尝试按下空格键吧</li>\n</ol>\n<h4 id=\"脚本设定\"><a class=\"markdownIt-Anchor\" href=\"#脚本设定\">#</a> 脚本设定</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditorInternal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Yarn<span class=\"token punctuation\">.</span>Unity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Yarn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">YarnTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DialogueRunner</span> dr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">YarnProgram</span> scriptToLoad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 注入对话资源</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        dr<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>scriptToLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始对话\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 开始一个对话</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            dr<span class=\"token punctuation\">.</span><span class=\"token function\">StartDialogue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/blog/20200427/XkItpdgndrM8.gif\" alt=\"默认\"></p>\n<h3 id=\"使用自定义方法\"><a class=\"markdownIt-Anchor\" href=\"#使用自定义方法\">#</a> 使用自定义方法</h3>\n<p>我现在希望我第一次与角色交流时输出前 2 句，之后每次与角色交流只输出最后 2 句，这是一个游戏中常用的机制。但现在我们的对话只是按照流程依次执行，我们希望这个流程应该是能够动态控制的。<br>\n我们修改上面的 yarn 为：</p>\n<pre><code>title: cc\ntags: \ncolorID: 0\nposition: 1,-22\n---\n&lt;&lt;if visited(&quot;cc&quot;) is false&gt;&gt;\n    Fasty97: Hi\n    PC: 你好？！\n&lt;&lt;else&gt;&gt;\n    Fasty97: 我又回来了！\n    PC: 是忘了什么东西吗？\n&lt;&lt;endif&gt;&gt;\n===\n</code></pre>\n<p>可以看到这次我们使用 类似 if 语句的东西？ 这是 yarn 中提供的一种语法模式，在这里我们会执行一个自定义的方法 visted 并将 &quot;cc&quot; 传入方法中，如果返回的结果是 false 就执行下面的语句块。</p>\n<h4 id=\"处理自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#处理自定义事件\">#</a> 处理自定义事件</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> visitedNodes<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 已使用节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 注入对话资源</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dr<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>scriptToLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 注入处理方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    dr<span class=\"token punctuation\">.</span><span class=\"token function\">AddFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"visited\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Value<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> parameters<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> nodeName <span class=\"token operator\">=</span> parameters<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> visitedNodes<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>nodeName<span class=\"token punctuation\">.</span>AsString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 绑定事件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dr<span class=\"token punctuation\">.</span>onNodeComplete<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> visitedNodes<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建一个 HashSet 集合用于存放所有已经被使用过的 node，绑定一个 onNodeComplete 事件，这个事件有系统自动调用，在实现中为集合加入元素。<br>\n然后注入一个方法，第一个参数指定方法名（在 yarn 文件下的名称），第二个参数指定参数个数，第三个参数就是写入一个方法了，在方法中我们检查集合是否已经包含该值返回结果，一个自定义不可重复方法就处理好了。</p>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200427/zqkvGNEMJPMw.gif\" alt=\"visited效果\"></p>\n<p>使用相同的方法你还可以创建各种各样的方法在 yarn 中使用。<br>\n值得注意的是：<br>\n通过源代码我们可以知道，yarn 只支持以下几种数据类型。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Number<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>NumberValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>StringValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Bool<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>BoolValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Null<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJuc3Bpbm5lci5kZXYv\">YarnSpinner 官网</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJuc3Bpbm5lcnRvb2wuZ2l0aHViLmlvL1lhcm5FZGl0b3Iv\"> YarnSpinner 在线编辑器</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lhcm5TcGlubmVyVG9vbC9ZYXJuU3Bpbm5lcg==\"> YarnSpinner github</span></p>\n",
            "tags": [
                "好物推荐"
            ]
        }
    ]
}