{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"框架设计\" tag",
    "description": "学习的过程大概就是学了忘,忘了学，抽空多停下来总结，不要冲的太前。",
    "home_page_url": "https://www.fasty97.top",
    "items": [
        {
            "id": "https://www.fasty97.top/2022/12/26/%E5%85%B3%E4%BA%8ESanerFrame%E7%9A%84%E8%AE%B0%E5%BD%95/",
            "url": "https://www.fasty97.top/2022/12/26/%E5%85%B3%E4%BA%8ESanerFrame%E7%9A%84%E8%AE%B0%E5%BD%95/",
            "title": "关于SanerFrame的记录",
            "date_published": "2022-12-26T03:07:43.000Z",
            "content_html": "<h1 id=\"关于sanerframe的记录\"><a class=\"markdownIt-Anchor\" href=\"#关于sanerframe的记录\">#</a> 关于 SanerFrame 的记录</h1>\n<blockquote>\n<p>此文用于记录关于 <code>SanerFreame</code>  的一些思考。</p>\n</blockquote>\n<h2 id=\"关于ioc容器\"><a class=\"markdownIt-Anchor\" href=\"#关于ioc容器\">#</a> 关于 IOC 容器</h2>\n<blockquote>\n<p>使用 <code>this.GetModel</code>  来获取模型。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span>Type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> Instances <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span>Type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> InstanceByNames <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">/// 注册实例</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"instance\"> 要注册的实例 & lt;/param></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token generic-method\"><span class=\"token function\">Register</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Instances<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                Instances<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                Instances<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">/// 获取实例</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">T</span> <span class=\"token generic-method\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token keyword\">class</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Instances<span class=\"token punctuation\">.</span><span class=\"token function\">TryGetValue</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> retObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> retObj <span class=\"token keyword\">as</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"关于数据请求的使用\"><a class=\"markdownIt-Anchor\" href=\"#关于数据请求的使用\">#</a> 关于数据请求的使用</h2>\n<h3 id=\"模型\"><a class=\"markdownIt-Anchor\" href=\"#模型\">#</a> 模型</h3>\n<blockquote>\n<p>数据使用的模型需要继承自 <code>AbstractModel</code> , 使用 <code>this.GetModel&lt;T&gt;()</code>  取得。</p>\n</blockquote>\n<h3 id=\"命令\"><a class=\"markdownIt-Anchor\" href=\"#命令\">#</a> 命令</h3>\n<blockquote>\n<p>命令是一次请求。继承 <code>RequestCommand</code> , 重写本地和网络的方法 使用 <code>this.SendComman(RequestCommand cmmand)</code>  来执行。</p>\n</blockquote>\n",
            "tags": [
                "框架设计"
            ]
        }
    ]
}