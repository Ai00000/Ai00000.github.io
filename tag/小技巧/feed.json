{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"小技巧\" tag",
    "description": "学习的过程大概就是学了忘,忘了学，抽空多停下来总结，不要冲的太前。",
    "home_page_url": "https://www.fasty97.top",
    "items": [
        {
            "id": "https://www.fasty97.top/2022/06/18/Unity%20Ui%E4%BA%8B%E4%BB%B6%E6%8E%A5%E5%8F%A3/",
            "url": "https://www.fasty97.top/2022/06/18/Unity%20Ui%E4%BA%8B%E4%BB%B6%E6%8E%A5%E5%8F%A3/",
            "title": "Unity Ui事件接口",
            "date_published": "2022-06-18T08:05:03.000Z",
            "content_html": "<p>在 Unity 中 UI 事件有两种方式，一种使用数据接口的方式，另一种使用监听组件的方式。</p>\n<h2 id=\"使用数据接口\"><a class=\"markdownIt-Anchor\" href=\"#使用数据接口\">#</a> 使用数据接口</h2>\n<p>通过继承数据额接口实现接口方法我们可以对 Ui 事件进行处理。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">APanel</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IPointerClickHandler</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPointerClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PointerEventData</span> eventData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ui被点击了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Unity 提供了各种各样的数据接口给我们使用，这里不在一一赘述。</p>\n<p class=\"blue\">需要注意的一点是，使用 Drag 类的接口时，我们必须使用 Drag 接口，其他的 BeginDrag、EndDrag 等接口才会响应。</p>\n<h2 id=\"使用监听组件\"><a class=\"markdownIt-Anchor\" href=\"#使用监听组件\">#</a> 使用监听组件</h2>\n<p>我们最常用的监听组件是 <code>Button组件</code> ，我们可以给任意一个 Ui 添加一个 Button 组件来让 Ui 具有 Button 的效果。</p>\n<p>在处理复杂的监听事件时，我们可以使用 <code>Event trigger</code>  组件。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622225810.png\" alt=\"\"></p>\n<p><code>Event trigger</code>  监听绑定和 Button 基本一致，我们可以在面板上通过拖拽来设定我们的响应事件和要触发的行为。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622225909.png\" alt=\"\"></p>\n<h3 id=\"使用代码绑定\"><a class=\"markdownIt-Anchor\" href=\"#使用代码绑定\">#</a> 使用代码绑定</h3>\n<p>使用那来绑定 Event Trigger 的方式和 Button 略有不同。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">EventTrigger</span> _eventTrigger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _eventTrigger <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>EventTrigger<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span>  entry<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EventTrigger<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>eventID <span class=\"token operator\">=</span> EventTriggerType<span class=\"token punctuation\">.</span>PointerClick<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    entry<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"被点击了@！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _eventTrigger<span class=\"token punctuation\">.</span>triggers<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们需要使用 Entry () 的一个类似工厂方法的方式来创建一个回调实体，并指定事件类型。</p>\n",
            "tags": [
                "Ui",
                "小技巧"
            ]
        }
    ]
}