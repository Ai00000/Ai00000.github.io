{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋 • All posts by \"unity\" tag",
    "description": "实现你的游戏梦",
    "home_page_url": "http://www.fasty97.top",
    "items": [
        {
            "id": "http://www.fasty97.top/2020/05/23/%E8%88%92%E6%9C%8D%E7%9A%842D%E7%9B%B8%E6%9C%BA-Cinemachine/",
            "url": "http://www.fasty97.top/2020/05/23/%E8%88%92%E6%9C%8D%E7%9A%842D%E7%9B%B8%E6%9C%BA-Cinemachine/",
            "title": "舒服的2D相机-Cinemachine",
            "date_published": "2020-05-23T03:13:14.000Z",
            "content_html": "<blockquote>\n<p>上周我利用一周的时间完成了一个解密竞速小游戏，这也是没空更新的一个原因吧</p>\n</blockquote>\n<p>因为时间比较短，就选择了 2D 项目来练练手，在人物角色控制写完了之后，就想着写个摄像机来控制视野，索性就想到了 <code>Cinemachine</code> ，记得之前好像看到 Cinemachine 有一套比较好用的摄像机系统，就拿来试试了。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/qb1Kss4Mw96k.gif\" alt=\"效果预览\"></p>\n<p>可以看到其效果包含以下几个方面</p>\n<ul>\n<li>跟随玩家角色的移动</li>\n<li>在小范围内移动不会触发摄像机位置的改变</li>\n<li>摄像机缓动</li>\n<li>摄像机视野不会超出地图范围</li>\n</ul>\n<p>这几个效果自己手写还是挺麻烦，让我们来看看 <code>Cinemachine</code>  怎么做。</p>\n<h3 id=\"如何使用\"><a class=\"markdownIt-Anchor\" href=\"#如何使用\">#</a> 如何使用</h3>\n<ol>\n<li>创建一个 2D 虚拟相机：</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/AVXP8rVMR5N9.png\" alt=\"\"><br>\n2. 为虚拟相机指定 Flow<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/KJPSbevHst01.png\" alt=\"\"><br>\n3. 设置活死区和插值<br>\n <code>此时已经可以实现摄像机跟随了，但是此时摄像机可能会照到非地图区域</code> <br>\n 4. 设定地图碰撞区域<br>\n创建一个空物体并挂载多边形碰撞器（目前只支持这种类型的碰撞器） <code>记得设置为触发器</code> <br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/mjeXKALIvuha.png\" alt=\"\"><br>\n为虚拟相机添加如下组件，将碰撞设置进去<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/E1mVRf835ude.png\" alt=\"\"><br>\n此时你可以实现上述的所有功能了。</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/04/15/Cinemachine%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "http://www.fasty97.top/2020/04/15/Cinemachine%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Cinemachine的基本使用",
            "date_published": "2020-04-15T10:02:16.000Z",
            "content_html": "<p>Unity 版本：<font color=green>2019.3.6f1</font></p>\n<p><font color=red>长文警告！！！</font></p>\n<blockquote>\n  是否为摄像机脚本困扰？是否为镜头动画烦恼？ Cinemachine 超强插件解决你的问题！\n</blockquote>\n<h3>安装Cinemachine</h3>\n<p>现在 Cinemachine 作者已经投靠 unity 官方了，所以 Cinemachine 也成为了 Unity 的官方插件，我们可以直接在 PackageManager 中下载：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/DBHDdslXchVa.png\" alt=\"\"></p>\n<h3>各类相机简述</h3>\n<p>安装之后我们可以在顶部菜单栏，看到如下的选项：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/gd1H7MDqJgJs.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n  <th>选项</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Virtual Camera</td>\n  <td>虚拟摄像机</td>\n</tr>\n<tr>\n  <td>FreeLook Camera</td>\n  <td>自由相机，可以保证镜头内出现头和身体，及相机的活动范围在目标周围圆柱（曲面的）表面，一般用于第三人称控制器</td>\n</tr>\n<tr>\n  <td>State-driven Camera</td>\n  <td>状态驱动相机。添加虚拟相机列表，可以在不同的相机直接直接实现平滑切换，同时其子相机列表如果没有设置LookAt对象等，会直接使用这个父相机的对象。</td>\n</tr>\n<tr>\n  <td>ClearShot Camera</td>\n  <td>干净镜头相机。类似上一个相机，区别在于这个相机可以通过判断子相机的CinemachineCollider（如果有），看是否相机被场景物体阻碍，切换相机。具体可看其源码注释。</td>\n</tr>\n<tr>\n  <td>Dolly Camera with Track</td>\n  <td>可推拉的轨道相机。通过结合轨道路径，就可以模拟像拍电影般镜头轨道移动。</td>\n</tr>\n<tr>\n  <td>Group Target Camera</td>\n  <td>多目标相机。可以同时设置多个目标。</td>\n</tr>\n</tbody>\n</table>\n<h4>Cinemachine Brain</h4>\n<p>在我们创建任意虚拟相机后，插件会为我们的摄像机添加此组件，此组件是我们虚拟相机的大脑，控制着真实相机的行为。（不可或缺）<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/4LQud3dfJPHP.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n  <th>变量名</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Live Camera</td>\n  <td>当前选择的虚拟相机。</td>\n</tr>\n<tr>\n  <td>Live Blend</td>\n  <td>当前的镜头转换名称。</td>\n</tr>\n<tr>\n  <td>Show Debug Text</td>\n  <td>在游戏画面左上角显示调试信息。</td>\n</tr>\n<tr>\n  <td>Show Camera Frustum</td>\n  <td>显示相机的视锥体，相比原来自带的边框，这个会裁切掉不在显示范围内的边线。</td>\n</tr>\n<tr>\n  <td>World Up Override</td>\n  <td>重载世界的向上方向（y轴），虚拟相机是通过这个来判断世界环境。</td>\n</tr>\n<tr>\n  <td>Default Blend</td>\n  <td>默认相机切换模式。</td>\n</tr>\n<tr>\n  <td>Custom Blends</td>\n  <td>自定义相机切换模式。</td>\n</tr>\n<tr>\n  <td>Camera Cut Event</td>\n  <td>相机立即切换时事件。</td>\n</tr>\n<tr>\n  <td>Camera Activated Event</td>\n  <td>相机混合（就是有切换变化，不是Cut时）切换时第一帧事件。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"virtual-camera\"><a class=\"markdownIt-Anchor\" href=\"#virtual-camera\">#</a> Virtual Camera</h3>\n<p>Cinemacine Virtual Camera 是 Cinemachine 最基本的相机，<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/oOMGlgOGXRpo.png\" alt=\"Cinemacine Virtual Camera\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Status</td>\n<td style=\"text-align:left\">状态，Live 为正在使用，Standby 为准备使用（没在用，但如果上一级停用了，可能会切换到当前虚拟相机），Disable 为不能用。按 Solo 按钮会让相机切换到这个虚拟相机（包括 Disable）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Game Window Guides</td>\n<td style=\"text-align:left\">是否在 game 窗口显示辅助</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Save During Play</td>\n<td style=\"text-align:left\">保存游戏中的改变</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">priority</td>\n<td style=\"text-align:left\">虚拟相机的优先级，如果同时有多个虚拟相机，使用优先级最高的。如果多个同等级的，应该是按 Hierarchy 顺序找到第一个虚拟相机。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Lens</td>\n<td style=\"text-align:left\">镜头常用配置。视角区域，最近最远裁切平面， 镜头旋转角度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Body</td>\n<td style=\"text-align:left\">相机本身。四种：Hard constraint，固定距离，相当于第一人称。 Orbital Transposer：轨迹转换器？似乎是模拟第三人称。 Tracked Dolly，轨道推拉，相机只能在轨道上移动（即使设置了 Follow 对象），需要轨道路径 CinemachinePath。 Transposer，普通的镜头转换。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Aim</td>\n<td style=\"text-align:left\">瞄准设置，有三种：Hard constraint，固定距离，没有任何平滑效果。Composer，有平滑效果的瞄准目标。Group Composer，同时瞄准多个目标。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Noise</td>\n<td style=\"text-align:left\">噪音，用于相机抖动，预设有多种效果，也可以自己建立新效果。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Extension</td>\n<td style=\"text-align:left\">扩展，可以添加诸如相机碰撞器，相机变焦器等</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"timeline\"><a class=\"markdownIt-Anchor\" href=\"#timeline\">#</a> TimeLine</h4>\n<p>在 TimeLine 中实现 2 个镜头间的切换非常容易。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/cfRA1u2z5SND.png\" alt=\"\"><br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/D0m6KY0DjAHH.gif\" alt=\"\"></p>\n<h3 id=\"freelook\"><a class=\"markdownIt-Anchor\" href=\"#freelook\">#</a> FreeLook</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/uFWo9v918gKw.png\" alt=\"FreeLook 相机视野\"><br>\n FreeLook 相机是一个自由相机，类似于第三人称游戏中的相机，可以使用鼠标控制相机的朝向多方向的观察角色；其相机视野像是一个圆柱体，如上图所示。（相机始终会在这个圆柱体的轨道上运动。）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/EMNEzmU0LM9r.gif\" alt=\"FreeLook\"><br>\n 大多数参数与 Virtual Camera 相似，值得注意的是：<br>\n<font color=\"red\">在 FreeLook 相机中需要绑定 顶部，中间，底部三个位置，这三个位置将决定相机的最大视野。</font></p>\n<h3 id=\"blendlist\"><a class=\"markdownIt-Anchor\" href=\"#blendlist\">#</a> BlendList</h3>\n<p>如名字一样他管理的是一个 camera 列表，并将列表内的 camera 做混合到达射线机之间更自然的切换效果。<br>\n<strong>我们可以控制摄像机切换的 缓动函数</strong>。<br>\n值得注意的是：当 BlendList 启用时，其下的摄像机会依次使用最后停留在最后一个摄像机里。</p>\n<h3 id=\"cinemachinestatedrivencamera\"><a class=\"markdownIt-Anchor\" href=\"#cinemachinestatedrivencamera\">#</a> CinemachineStateDrivenCamera</h3>\n<p>这是被动画状态所驱动的虚拟相机管理器，能够在觉得切换动画时，快速的切换该动画应该使用的相机。【注意设置层级和绑定动画控制器】<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/OnntsqFJoil7.png\" alt=\"CinemachineStateDrivenCamera\"></p>\n<h3 id=\"clearshoot\"><a class=\"markdownIt-Anchor\" href=\"#clearshoot\">#</a> ClearShoot</h3>\n<p>ClearShoot 也是一个管理器，负责管理一组 camera，他的效果是时刻选择最优的摄像机。在复杂的场景中，我们的角色可能被环境所遮挡，我们需要多个摄像机来处理这种情况。<br>\n如下图所示，我设置了 2 个摄像机，一个在顶部，一个在后方，在角色移动到墙壁后面时，后方的摄像机被遮挡，此时会自动启动顶部摄像机。在角色回到墙壁后面时，顶部摄像机被遮挡，只能切换到后面的摄像机。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/lDRTT3hjBhtH.gif\" alt=\"ClearShoot\"></p>\n<h3 id=\"targetgroup\"><a class=\"markdownIt-Anchor\" href=\"#targetgroup\">#</a> TargetGroup</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/ws4uSH9Nvs2O.png\" alt=\"TargetGroup\"><br>\n 目标组管理器，可以让位于目标组管理器中的目标 <code>尽可能</code> 的位于屏幕中。<br>\n在使用目标组管理器时，务必为摄像机设置目标组类型：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/rN7xlXVSamTd.png\" alt=\"\"></p>\n<h3 id=\"mixing\"><a class=\"markdownIt-Anchor\" href=\"#mixing\">#</a> Mixing</h3>\n<p>Mixing 摄像机混合管理器，可以将多个摄像机的信息进行混合按照权重，得到最终的显示画面。<br>\n（通过多相机的焦点处建立坐标系按权重分配偏移）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/mJ0BILNkgXu1.png\" alt=\"Mixing\"></p>\n<h3 id=\"活区和死区\"><a class=\"markdownIt-Anchor\" href=\"#活区和死区\">#</a> 活区和死区</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/L2dUgC4hSHQs.png\" alt=\"活区和死区\"></p>\n<ul>\n<li>A 区域为死区（Dead Zone），对象在死区内任意移动 <code>不会改变</code> 摄像机的位置。</li>\n<li>B 区域为活区（Soft Zone），对象在活区时会触发摄像机 <code>缓动</code> ，最终将对象固定在死区。</li>\n<li>C 区域为界外区，对象在界外区活动时，摄像机会 <code>立即</code> 改变位置时，使对象位于活区。</li>\n</ul>\n<h3>本文参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NTUyODg2L2FydGljbGUvZGV0YWlscy83OTM4ODUyNw==\">[1] Unity Cinemachine 插件学习笔记</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tpcml0b1YvYXJ0aWNsZS9kZXRhaWxzLzk2Nzc5NDk3\">[2] 个人笔记】Unity 插件 “Cinemachine”—— 实现尼尔机械纪元运镜设计</span></p>\n<h3 id=\"dolly轨道\"><a class=\"markdownIt-Anchor\" href=\"#dolly轨道\">#</a> Dolly 轨道</h3>\n<p>我们可以创建一个自定义的轨道，将摄像机限制在该轨道上。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/5JS6PFq2vAWt.png\" alt=\"\"><br>\n如图所示我创建了一个圆形轨道，摄像机只能在轨道上运动。</p>\n<h3 id=\"dolly-with-cart轨道\"><a class=\"markdownIt-Anchor\" href=\"#dolly-with-cart轨道\">#</a> Dolly with Cart 轨道</h3>\n<p>让物体沿着轨道运动<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/O7FvKn3fSIff.gif\" alt=\"Dolly with Cart轨道\">（这是一个很强大的功能，其实我们不止能用在摄像机上，可以用在任何游戏对象上，让这个对象，或 ui 只能沿着这个轨道运动，并实时设置要达到哪个点，简言之这是一个曲线编辑器。）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/iGxYjFgflcq3.png\" alt=\"\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>Cinemachine 是一款非常棒的智能摄像机插件，非常的方便易用。解决大部分的摄像机问题，甚至无需编写代码。当然我们也可以使用代码来控制摄像机，更灵活的处理摄像机与角色之间的关系。</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/04/13/unity%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%B1%A0/",
            "url": "http://www.fasty97.top/2020/04/13/unity%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%B1%A0/",
            "title": "unity的对象池",
            "date_published": "2020-04-13T05:23:55.000Z",
            "content_html": "<blockquote>\n<p>对象池：在对象销毁时将对象放入池中，在使用对象时从池中取出对象，避免对象初始化和销毁时的昂贵代价。</p>\n</blockquote>\n<p>在游戏中我们需要很多的对象，这些对象可能是动态变化的，例如射击游戏中的子弹，是不断计数的，游戏中的特效也是随着游戏不断增加的。如果我们每次在使用时创建在消失时销毁，务必会造成很大的开销，使用对象池的概念我们可以初始化一定数量的对象在使用对象时使用池中的对象，在消失时把对象归还给对象池，实现对象的复用。</p>\n<h3 id=\"单例模板\"><a class=\"markdownIt-Anchor\" href=\"#单例模板\">#</a> 单例模板</h3>\n<p>一般来说，对于全局的对象池我们需要一个全局的对象池管理器单例来管理所有的对象池。<br>\n在 unity 中我们会用到 2 种单例，一种是非 mono 单例，一种是 mono 单例。</p>\n<h4 id=\"非mono单例\"><a class=\"markdownIt-Anchor\" href=\"#非mono单例\">#</a> 非 mono 单例</h4>\n<p>纯粹的单例模式，添加了线程锁。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonManager<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    Monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Enter</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">finally</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    Monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"mono单例\"><a class=\"markdownIt-Anchor\" href=\"#mono单例\">#</a> mono 单例</h4>\n<p>mono 单例用于挂载在游戏对象上。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 通用单例模式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Instance<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                Instance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"对象池单例\"><a class=\"markdownIt-Anchor\" href=\"#对象池单例\">#</a> 对象池单例</h3>\n<p>这里我以 mono 单例为例，其实现代码如下：<br>\n关键在于对象池的容量自动扩充，继承单例模板即可。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// 对象池</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectPool</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>ObjectPool<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span> freeObjects<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自由对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span> useObjects<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 正在被使用的对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> objectPrefab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> maxCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> addCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token function\">InitPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// 获得对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">GameObject</span> <span class=\"token function\">GetItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>freeObjects<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token operator\">=</span> freeObjects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                useObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                item<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// 扩充容量</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            maxCount <span class=\"token operator\">+=</span> addCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> addCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">InitObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item2 <span class=\"token operator\">=</span> freeObjects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>item2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            useObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>item2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">return</span> item2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\">/// 释放对象</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"t\">&lt;/param></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">FreeItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            useObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            t<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maxCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">InitObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">GameObject</span> <span class=\"token function\">InitObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>objectPrefab<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            go<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">return</span> go<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"对象池的使用\"><a class=\"markdownIt-Anchor\" href=\"#对象池的使用\">#</a> 对象池的使用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectPoolTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                go<span class=\"token operator\">=</span> ObjectPool<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">GetItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                ObjectPool<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">FreeItem</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/blog/20200413/OKbR5Jr1cYUP.gif\" alt=\"\"></p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/04/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B/",
            "url": "http://www.fasty97.top/2020/04/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B/",
            "title": "深入理解协程",
            "date_published": "2020-04-12T02:43:20.000Z",
            "content_html": "<blockquote>\n<p>在很多编程语言中都支持协程，例如在我们之前提到的 lua 中，协程是一个虚拟的线程技术。</p>\n</blockquote>\n<h3 id=\"简述\"><a class=\"markdownIt-Anchor\" href=\"#简述\">#</a> 简述</h3>\n<p>想一想我们平时购买电脑提及的，cpu 是四核八线程，其实 cpu 原先只能处理处理一件事，也就是说 cpu 默认是一个核心对应一条线程的，但是如果我们需要同时处理多个任务，而我们并没有那么多的线程数量。<br>\n然后前人们就提出了虚拟线程的概念，将 cpu 的单个线程，虚拟出多条线程，也就有了我们四核八线程，八核十六线程等的概念；在应用程序这边也有了线程和进程的概念，在把进程再细分，虚拟化软件的线程就得到了协程的概念。</p>\n<blockquote>\n<p>至此你知道，协程就是对线程的再细分，是线程的再虚拟化即可。</p>\n</blockquote>\n<h3 id=\"unity的协程\"><a class=\"markdownIt-Anchor\" href=\"#unity的协程\">#</a> unity 的协程</h3>\n<p>虽然说协程的概念并不新颖，但在现在大趋势的互联网开发领域可能很少涉及到 <code>协程</code> 这个词汇。<br>\n协程就是协力去完成一件事，这很容易想到多线程的概念，例如我们进行一次网络请求我们需要等待 response 之后才能下一步操作，此时我们就会用到 <code>互斥锁</code> 、 <code>线程安全</code> 等概念。<br>\n在 unity 中或者说在游戏引擎中，由于受到游戏主循环线程的制约，所以不能确保多线程的安全性，此时在同一线程下继续使用协程来承担多线程的工作就显得尤为重要。<br>\n（unity 也退出了以性能优先的 ECS 模式，摒弃 Mono 框架，实现了可多线程协助开发的开发模式）<br>\n下面我们就主要以 unity 的协程详细介绍。</p>\n<h3 id=\"unity协程示例\"><a class=\"markdownIt-Anchor\" href=\"#unity协程示例\">#</a> unity 协程示例</h3>\n<p>看这个例子：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建协程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Cor1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2s到了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 启动协程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Cor1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这是一个简单示例，可以看到协程需要返回一个 <code>IEnumerator</code>  可迭代对象，这本来是 Csharp 中的迭代器模式的实现，在 unity 中 unity 以此为原型实现了协程。</p>\n<h3 id=\"协程的参数\"><a class=\"markdownIt-Anchor\" href=\"#协程的参数\">#</a> 协程的参数</h3>\n<p>在上面我们使用了  <code>new WaitForSeconds()</code> ，这表示等待指定的时间。【注意 WaitForSeconds 与 Time.Scale 相关】<br>\n在上面使用的 WaitForSeconds 之外还有许多的参数，这些参数要么需要花费时间，要么返回 bool，总之就是需要确定一个 moveNext。</p>\n<h3 id=\"协程的使用情况\"><a class=\"markdownIt-Anchor\" href=\"#协程的使用情况\">#</a> 协程的使用情况</h3>\n<ol>\n<li>用于不确定的时长情况（例如：网络请求，读写文件）</li>\n<li>用于延迟执行</li>\n<li>可当做简易计时器使用（例如：生产一批敌人）</li>\n</ol>\n<h3 id=\"协程的嵌套\"><a class=\"markdownIt-Anchor\" href=\"#协程的嵌套\">#</a> 协程的嵌套</h3>\n<p>协程支持嵌套，如下是一个利用协程实现的巡逻的简单实现。<br>\n<strong>注：在 unity 中，协程返回 0 或 null 表示等待下一帧。</strong></p>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200412/c1jAFxkeWJve.gif\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Coroutines</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 协程测试</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CoroutTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Transform<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> wayPoints<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isLoop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            isLoop <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">StartLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">StartLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> point <span class=\"token keyword\">in</span> wayPoints<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">MoveTarget</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>isLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">MoveTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token operator\">!=</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">MoveTowards</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"让协程动起来\"><a class=\"markdownIt-Anchor\" href=\"#让协程动起来\">#</a> 让协程动起来</h3>\n<ul>\n<li>\n<p>StartCoroutine(nameof(StartLoop));<br>\n 以字符串形式启动协程，能够在外部停止协程，无法传递参数。</p>\n</li>\n<li>\n<p>StartCoroutine(StartLoop);<br>\n 以迭代器形式启动协程，能够传递参数，无法在外部使用 stop 停止协程。</p>\n</li>\n</ul>\n<h3 id=\"让协程停下来\"><a class=\"markdownIt-Anchor\" href=\"#让协程停下来\">#</a> 让协程停下来</h3>\n<p>协程本质是一个迭代器，当 moveNext 为 false 时即认为协程中所有的项目都已经执行完毕。<br>\n在 unity 中有以下几种方式停止协程：</p>\n<ol>\n<li>StopCoroutine ()  注意此方式只能停止以字符串形式启动的协程 【在协程外部使用】</li>\n<li>yield break   跳出协程【在协程内部使用】</li>\n<li>通过逻辑来停止 【使其协程执行条件不满足】</li>\n<li>设置物体不激活 【再次激活协程也不会恢复】</li>\n<li>StopAllCoroutine () 终止所有协程</li>\n</ol>\n<p>如上面协程嵌套的例子中，如果我们想要协程停止：</p>\n<ol>\n<li>设置 isLoop=false；让其在执行一次后不满足条件自动停下</li>\n<li>在协程内部 break</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token operator\">==</span>wayPoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在协程外部 stop</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">StopCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>StartLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"协程的设计思想\"><a class=\"markdownIt-Anchor\" href=\"#协程的设计思想\">#</a> 协程的设计思想</h3>\n<h4 id=\"协程是否取代update\"><a class=\"markdownIt-Anchor\" href=\"#协程是否取代update\">#</a> 协程是否取代 update？</h4>\n<p>通过上面的例子，你大可发现，协程其实是对 update 的另一种实现，我们甚至可以只使用协程而不使用任何 update 和 fixedUpdate 完成程序的编写。<br>\n但我们如果这样做不是本末倒置了吗？协程是 unity 推出的延迟执行的一种范式，其还是基于 update 为原理的上层实现。</p>\n<h4 id=\"使用协程会大大提升程序效率吗\"><a class=\"markdownIt-Anchor\" href=\"#使用协程会大大提升程序效率吗\">#</a> 使用协程会大大提升程序效率吗？</h4>\n<p>不会，协程本质上还是在一条线程上，尽管可以多条协程并行，但这些协程始终还是运行在一条线程上，速度和效率并不会得到很大的提升。反而开辟多条线程并行，线程需要多多协程的状态保持监听，在协程大量结束时会触发大量 GC 回收，可能会降低程序的运行效率。</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>协程是运行在线程上的线程，其运作方式任然基于单线程，并不会因为使用协程提高程序的运行效率，但协程方便的书写方式，强大的功能能够提高我们作为开发者的开发效率。<br>\n从某种意义上来讲，协程更像是一个精美的语法糖</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/03/27/%E5%8A%A8%E7%94%BB%E8%A1%A5%E9%97%B4DOTween/",
            "url": "http://www.fasty97.top/2020/03/27/%E5%8A%A8%E7%94%BB%E8%A1%A5%E9%97%B4DOTween/",
            "title": "动画补间DOTween",
            "date_published": "2020-03-27T07:52:35.000Z",
            "content_html": "<blockquote>\n<p>在游戏中，我们可能需要这样的效果，将一个物体放大 2 倍，在 2s 之内完成；或者在点击 UI 时将 UI 逐渐消失。这样需要多作用效果进行逐步展示的效果被称之为补间。</p>\n</blockquote>\n<p>为了引出我们今天的主角 <code>DOTween</code> , 我们先来看看用 unity 的 animation 系统制作一个帧动画序列。</p>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/QQOrLw0fzaM2.gif\" alt=\"示例效果\"></p>\n<h3 id=\"普通的动画\"><a class=\"markdownIt-Anchor\" href=\"#普通的动画\">#</a> 普通的动画</h3>\n<p>我们需要以下几个步骤：</p>\n<ol>\n<li>创建并录制动画</li>\n<li>在 Animator 中设置</li>\n<li>绑定按钮事件</li>\n</ol>\n<p>代码部分：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Play <span class=\"token operator\">=</span> Animator<span class=\"token punctuation\">.</span><span class=\"token function\">StringToHash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartAni</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ui<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Animator<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTrigger</span><span class=\"token punctuation\">(</span>Play<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"播放动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们需要既需要创建资源，有需要绑定设置，操作过程略微麻烦。</p>\n<h3 id=\"dotween动画\"><a class=\"markdownIt-Anchor\" href=\"#dotween动画\">#</a> DoTween 动画</h3>\n<p>在 DoTween 中我们仅仅需要绑定好按钮事件即可，不要创建动画资源，设置动画播发器等麻烦事。<br>\n这在轻度使用补间动画里是非常不错的。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartAni</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> rec <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>RectTransform<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>RectTransform 组件，这是 ui 所特有的描述 transform 的组件，第二行代码我们使用扩展方法<br>\n让我们来分析一下这 2 行代码，第一行 我们找到 UI 的 RectTransform 组件，这是 ui 所特有的描述 transform 的组件，第二行代码我们使用扩展方法 DOLocalMoveX 对组件位置进行补间，目的地位置为 0（此时也就是锚点的位置，我这里以中心作为锚点），第二个参数是完成动画的时间我选择 2。也就是说在 2s 内让这个 UI 从飞到他 x 轴的锚点位置。</p>\n<h4 id=\"通用方法\"><a class=\"markdownIt-Anchor\" href=\"#通用方法\">#</a> 通用方法</h4>\n<p>上面的扩展方法我们也可以使用如下的通用方法来替代。</p>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/pQepanWBOJ70.png\" alt=\"通用方法\"></p>\n<h4 id=\"from动画\"><a class=\"markdownIt-Anchor\" href=\"#from动画\">#</a> From 动画</h4>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/DlX2YONOLHtW.gif\" alt=\"From动画\"></p>\n<p>不论是我们使用扩展方法创建的动画还是通用方法创建的动画，我们都可以添加 <code>.Form()</code>  来设定为逆动画。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> rec <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>RectTransform<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">From</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"知识速记扩展方法\"><a class=\"markdownIt-Anchor\" href=\"#知识速记扩展方法\">#</a> 知识速记（扩展方法）</h3>\n<blockquote>\n<p>扩展方法使您能够向现有类型 “添加” 方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型</p>\n</blockquote>\n<p>如果之前的代码较多，在考虑重构时，扩展方法可比接口好用哦。</p>\n<h3 id=\"小案例-打字机效果\"><a class=\"markdownIt-Anchor\" href=\"#小案例-打字机效果\">#</a> 小案例 - 打字机效果</h3>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/JSYE1SHQEGNg.gif\" alt=\"打字机效果\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Text</span> info<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ResizableTextArea</span></span><span class=\"token punctuation\">]</span><span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> infoData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span>infoData<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"dotween的约定\"><a class=\"markdownIt-Anchor\" href=\"#dotween的约定\">#</a> DoTween 的约定</h3>\n<p>在详细讲解 DoTween 之前，我们先来了解一下 dotween 的设计原理和约定。<br>\n0. dotween 使用 tween（补间）来描述一段动画或缓动：<br>\n <code>rec.DOLocalMoveX(0, 2).From()</code>  就是一个 tween。<br>\n使用 Sequence（序列）来表述一组 tween，在下面介绍 Sequence。</p>\n<ol>\n<li>和我们平时使用 unity 一样，动态变化的部分防止在 update 或 fiexedUpdate 中，dotween 也是这样的，在游戏启动时他会将所有的 tween 的放置在一个容器中（使用了 <code>对象池</code> ）。</li>\n<li>不论是 tween 或者是 Sequence 默认都将在执行完成后自动杀死。</li>\n<li>tween 默认使用 timescale（也就是说我们常用的 timescale=0 暂停游戏也将暂停 tween）</li>\n</ol>\n<h3 id=\"on事件监听\"><a class=\"markdownIt-Anchor\" href=\"#on事件监听\">#</a> On 事件监听</h3>\n<p>我们可以对一个序列或者一个补间注册事件监听状态。<br>\n以下是一些事件：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onComplete</td>\n<td>注册完成委托</td>\n</tr>\n<tr>\n<td>onKill</td>\n<td>注册杀死委托</td>\n</tr>\n<tr>\n<td>onPlaye</td>\n<td>注册开始委托</td>\n</tr>\n<tr>\n<td>onPause</td>\n<td>注册暂停委托</td>\n</tr>\n<tr>\n<td>onUpdate</td>\n<td>注册更新委托</td>\n</tr>\n<tr>\n<td>onRewind</td>\n<td>注册倒带委托</td>\n</tr>\n<tr>\n<td>OnStepComplete</td>\n<td>每次循环完成时</td>\n</tr>\n</tbody>\n</table>\n<p><strong>每个委托都有对应的方法类型可使用。</strong></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onKill <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"set设定\"><a class=\"markdownIt-Anchor\" href=\"#set设定\">#</a> Set 设定</h3>\n<p>我们可以对一个序列或者一个补间设定细节。</p>\n<h4 id=\"setloop设定循环\"><a class=\"markdownIt-Anchor\" href=\"#setloop设定循环\">#</a> setLoop 设定循环</h4>\n<ul>\n<li>参数一： 循环次数（设定为 - 1 为无限循环）</li>\n<li>参数二： 循环类型</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetLoops</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> LoopType<span class=\"token punctuation\">.</span>Incremental<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>循环类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Incremental</td>\n<td>递增，每次播放结束 star 和 end 都会加入到差异值中</td>\n</tr>\n<tr>\n<td>Restart</td>\n<td>重来，播放结束时从起点重新播放</td>\n</tr>\n<tr>\n<td>Yoyo</td>\n<td>摇摆播放</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"setease设定曲线\"><a class=\"markdownIt-Anchor\" href=\"#setease设定曲线\">#</a> SetEase 设定曲线</h4>\n<p><img data-src=\"https://img-blog.csdn.net/20151022164141659\" alt=\"\"></p>\n<h4 id=\"其他常用方法\"><a class=\"markdownIt-Anchor\" href=\"#其他常用方法\">#</a> 其他常用方法</h4>\n<ol>\n<li>setLink(Gameobject) :<br>\n 将 tween 链接到游戏物体，在物体被销毁时自动销毁对象（在序列中无效）</li>\n<li>setId(object):<br>\n 设定 tween 的 id，用于找到 tween，使用数字时效率最高，字符串次之</li>\n<li>SetAutoKill（bool）：<br>\n设定 tween 执行完是否自动杀死，复用 twenn 设为 false</li>\n<li>SetDelay（float）:<br>\n 设定开始播放前的延迟</li>\n<li>SetUpdate(UpdateType):<br>\n 设定更新模式</li>\n<li>SetAs(tween)：<br>\n使用其他 tween 的设定模板</li>\n</ol>\n<h3 id=\"sequence序列\"><a class=\"markdownIt-Anchor\" href=\"#sequence序列\">#</a> Sequence 序列</h3>\n<p>将很多 tween 放在一起称为一个序列 Sequence。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mySeq <span class=\"token operator\">=</span> DOTween<span class=\"token punctuation\">.</span><span class=\"token function\">Sequence</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span>infoData<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">// 在所有补间执行完时回调</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">AppendCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画播放完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">// 插入</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">/* 在给定的时间位置插入给定的补间，从而使您可以重叠补间，而不仅仅是将它们一个接一个地放置。*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOScaleX</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 给定时间插入回调</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">InsertCallback</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动动画结束了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 在序列开头插入补间</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Prepend</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在开头插入的补间。。。\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">PrependCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开头插入开始/动画开始播放\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 序列开始延迟</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">PrependInterval</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 暂停序列</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// mySeq.Pause();</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 可以写在一起</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>             mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                 <span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span>infoData<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                 <span class=\"token punctuation\">.</span><span class=\"token function\">AppendCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画播放完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"dotween和协程\"><a class=\"markdownIt-Anchor\" href=\"#dotween和协程\">#</a> DoTween 和协程</h3>\n<p>看个例子：协程在完成动画之后执行</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tt <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> tt<span class=\"token punctuation\">.</span><span class=\"token function\">WaitForCompletion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WaitForElapsedLoops（int）</td>\n<td>在循环指定次数或 tween 被杀死后</td>\n</tr>\n<tr>\n<td>WaitForKill</td>\n<td>在 tween 被杀死后</td>\n</tr>\n<tr>\n<td>WaitForPosition</td>\n<td>到达给定位置或被杀死</td>\n</tr>\n<tr>\n<td>WaitForRewind</td>\n<td>被杀死或重新播放</td>\n</tr>\n<tr>\n<td>WaitForStart</td>\n<td>开始播放</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"全局设定\"><a class=\"markdownIt-Anchor\" href=\"#全局设定\">#</a> 全局设定</h3>\n<p>我们可以使用 <code>DoTween</code>  类的静态字段来设置对应的默认行为。<br>\n如设定是否自动播放，是否自动销毁，对象池大小，默认曲线方式，所有的 tween 和 Sequence 序列在没有设定参数时默认取全局设定的值。<br>\n在 Pro 版本我们也可以在可视化面板中设置这些参数。</p>\n<p>在运行游戏后我们可以发现场景中多了一个 twenn 的对象，上面可以在游戏中实时查看 tween 的信息。</p>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200328/3TwHh67DgDOd.png\" alt=\"\"></p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/03/25/unity%20ScriptableObject%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://www.fasty97.top/2020/03/25/unity%20ScriptableObject%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "unity ScriptableObject的使用",
            "date_published": "2020-03-25T06:41:22.000Z",
            "content_html": "<h3 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h3>\n<p>ScriptableObject 是 unity 提出的针对数据存储资源的解决方案，能够将数据配置项 <code>可视化</code> 的展示在 unityd 属性面板中，并且极易于 json 进行数据交互。<br>\n个人使用过后觉得，其操作方式和继承非常类似，感觉像是对继承进一步封装使其更符合 unity 开发需要，让数据实体化，具现化的展示，通过拖拽式即可像拆装零件一般自由组合数据。（总而言之是对继承和多态的封装）</p>\n<h3 id=\"使用场景\"><a class=\"markdownIt-Anchor\" href=\"#使用场景\">#</a> 使用场景</h3>\n<p>用于 ScriptableObject 是针对 unity 的，在 unity 使用时比传统的数据格式如 json，xml 更加方便快捷。而且在面对诸如策划，美工等不了解程序的人员来说，上手更加快捷。<br>\n实质上，ScriptableObject 主要还是对数据进行存储和处理，只要是使用数据的地方都可以使用 ScriptableObject 进行配置式管理，这样相比直接继承式的数据传递，耦合性更低。<br>\n更符合 <code>多组合少继承</code> 的设计理念。</p>\n<h3 id=\"基本使用\"><a class=\"markdownIt-Anchor\" href=\"#基本使用\">#</a> 基本使用</h3>\n<p>遵循步骤：</p>\n<ol>\n<li>创建资源脚本，继承自 <code>UnityEngine.ScriptableObject</code></li>\n<li>创建资源对象</li>\n<li>在其他脚本中以组件形式指定资源对象</li>\n</ol>\n<p>我们可以将一些诸如敌人的血量，攻击，防御等数值存储在 ScriptableObject 中。</p>\n<h4 id=\"创建资源脚本\"><a class=\"markdownIt-Anchor\" href=\"#创建资源脚本\">#</a> 创建资源脚本</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create ItemAssets\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemAssets</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> price<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"title:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">title</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">  price:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">price</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"指定资源使用\"><a class=\"markdownIt-Anchor\" href=\"#指定资源使用\">#</a> 指定资源使用</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ScriptableObject</span> itemAsset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>itemAsset<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>itemAsset<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"单例资源脚本\"><a class=\"markdownIt-Anchor\" href=\"#单例资源脚本\">#</a> 单例资源脚本</h3>\n<p>在平时我们一般使用 GameManager 实现单例模式并设置在切换场景时不销毁来达到全局数据的管理。<br>\n在 ScriptableObject 中，我们同样可以达到这个效果，由于 ScriptableObject 是一个资源可直接存储在磁盘，不需要设置不销毁也能存储全局数据，管理同步。</p>\n<h4 id=\"创建单例资源\"><a class=\"markdownIt-Anchor\" href=\"#创建单例资源\">#</a> 创建单例资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Assets</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create GameStateAssets\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameStateAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> level<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">GameStateAsset</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">GameStateAsset</span> Instance <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    _instance<span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameStateAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                   _instance<span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameStateAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                   _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>DontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"level:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">level</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">  score:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">score</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用单例资源\"><a class=\"markdownIt-Anchor\" href=\"#使用单例资源\">#</a> 使用单例资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>level <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"临时资源\"><a class=\"markdownIt-Anchor\" href=\"#临时资源\">#</a> 临时资源</h3>\n<p>有时我们需要动态的生成一些对象，这些对象的数据可能并不是静态的设置好的，并且只是临时的使用这些数据，我们可以直接创建临时的 ScriptableObject 来处理这种情况。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token operator\">=</span> ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ItemAssets<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>item<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">\"测试物品\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"插槽式资源\"><a class=\"markdownIt-Anchor\" href=\"#插槽式资源\">#</a> 插槽式资源</h3>\n<p>有时数据是需要被再加工的，加工的过程不应该影响到数据的使用，对于使用数据的一方，不必知晓数据的具体加工过程，这些过程就好像一个个插槽，就等待着期望的数据进入即可。<br>\n从这里我们也可以看出，在 ScriptableObject 中是可以包含 <code>方法</code> 的。</p>\n<h4 id=\"创建资源\"><a class=\"markdownIt-Anchor\" href=\"#创建资源\">#</a> 创建资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PowerUpAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create HealthUpAsset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HealthUpAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">PowerUpAsset</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Health<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currHealth <span class=\"token operator\">+=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用资源\"><a class=\"markdownIt-Anchor\" href=\"#使用资源\">#</a> 使用资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemHpUp</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HealthUpAsset</span> hpAsset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnTriggerEnter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collider</span> other<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span><span class=\"token function\">CompareTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Player\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            hpAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"与json交互\"><a class=\"markdownIt-Anchor\" href=\"#与json交互\">#</a> 与 Json 交互</h3>\n<p>ScriptableObject 和 json 有很高的亲和性（ScriptableObject 就是基于类的延伸）<br>\n在某些情况下，我们可能需要将 json 数据存入 ScriptableObject 或将 ScriptableObject 写入 json 来实现一些如游戏存档等的功能。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>Serialization</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Assets<span class=\"token punctuation\">.</span>TalkJson</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create GameFileAsset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameFileAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Serializable</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Archive</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DateTime <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Level <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">GameFileAsset</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">GameFileAsset</span> Instance</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token function\">InitializeFromDefault</span><span class=\"token punctuation\">(</span>UnityEditor<span class=\"token punctuation\">.</span>AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Test game file.asset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Archive<span class=\"token punctuation\">></span></span> archives<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Archive</span> currArchive<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeFromDefault</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameFileAsset</span> file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            _instance <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>HideAndDontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>       <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LoadFromJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>           _instance <span class=\"token operator\">=</span> ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>           JsonUtility<span class=\"token punctuation\">.</span><span class=\"token function\">FromJsonOverwrite</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>           _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>HideAndDontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>       <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SaveToJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>           Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Saving game file to &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>           System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">WriteAllText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> JsonUtility<span class=\"token punctuation\">.</span><span class=\"token function\">ToJson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"个人理解\"><a class=\"markdownIt-Anchor\" href=\"#个人理解\">#</a> 个人理解</h3>\n<p>ScriptableObject 其实就是对类的特殊处理，在 unity 中将这里的类脚本特异性的识别让其数据可视化，并在内部实现了实例化处理，让其可以直接在脚本中使用而无需实例化对象。</p>\n<p>[toc]</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "http://www.fasty97.top/2020/02/10/Timeline%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "http://www.fasty97.top/2020/02/10/Timeline%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Timeline的基本使用",
            "date_published": "2020-02-10T05:53:35.000Z",
            "content_html": "<p>Unity 版本号：<font color=green>2019.3.0f6</font></p>\n<hr />\n<p>TimeLine 是 unity2017 推出的新功能，其采用时间线的形式组合场景资源， 可以用于编排游戏剧情，过场动画，斩杀镜头，人物特写等效果。</p>\n<h3>创建TimeLine</h3>\n<p>用于播放 TimeLine 的物体必须有这个组件：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/CUXzMDxo2tsx.png\" alt=\"组件\"></p>\n<table>\n<thead>\n<tr>\n  <th align=\"center\">参数名</th>\n  <th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td align=\"center\">Playable</td>\n  <td align=\"center\">Playable资源（TimeLine资源）</td>\n</tr>\n<tr>\n  <td align=\"center\">Update Method</td>\n  <td align=\"center\">更新模式</td>\n</tr>\n<tr>\n  <td align=\"center\">Play On Awake</td>\n  <td align=\"center\">是否启动时自动播放</td>\n</tr>\n<tr>\n  <td align=\"center\">Wrap Mode</td>\n  <td align=\"center\">结束模式，None播放完回到原先属性，Loop循环播放，Hood播放完维持改变</td>\n</tr>\n<tr>\n  <td align=\"center\">Initial Time</td>\n  <td align=\"center\">延迟时间</td>\n</tr>\n</tbody>\n</table>\n<h3>轨道面板</h3>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200210/0l1DQytDcsA2.png\" alt=\"轨道面板\"><br>\n点击左侧的＋，可以添加轨道，这是一个类似视频剪辑的界面，我们可以方便的对轨道进行移动和剪辑。</p>\n<h4>Activation</h4>\n<p>Activation 用于表示物体的激活状态：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/vIzC588mJlSO.gif\" alt=\"Activation\"></p>\n<h4>Animation</h4>\n<p>Animation 用于播放动画，既可以播放已有的动画，也可以自己录制帧动画来使用。<br>\n<strong>注意：使用此轨道的物体会被创建一个 Animator Controller，这个组件不能被删除。</strong><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/gizvroAPPTAo.gif\" alt=\"Animation\"></p>\n<h4>Audio</h4>\n<p>Audio 轨道用于播放音效，如果不指定 AudioSource 就无法细致调节效果。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/zEYKWKgDJrlk.png\" alt=\"Audio\"><br>\n 每个轨道在属性面板都有不同的属性，Audio 面板如下：<br>\n!{Audio 属性}(<span class=\"exturl\" data-url=\"aHR0cDovL3BpYy5mYXN0eTk3LnRvcC9ibG9nLzIwMjAwMjEwL0dvRURiN3FiZFNIUi5wbmc=\">http://pic.fasty97.top/blog/20200210/GoEDb7qbdSHR.png</span>)</p>\n<h4>Control</h4>\n<p>Control 轨道和 Activation 轨道有点相似，但不同的是 Control 轨道可以同时控制多个物体的激活状态。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/y5G5Rhig2kPn.png\" alt=\"Control\"></p>\n<h4>Signal-任意轨道</h4>\n<p>Signal 是非常重要的轨道，在使用 TimeLine 时，你可能会有这样的想法，能不能在时间线上，调用我们自定义的方法呢，在 2019 之前可以通过剪辑间接的完成事件的调用；但现在有了 Signal 轨道的加持，我们可以非常方便的在任意时刻调用方法了。<br>\n创建一个简单的测试脚本，并将脚本挂载在游戏物体上。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SignalTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Signal!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>右键单击任意轨道：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/SAiR90ho2iVi.gif\" alt=\"\"><br>\n此时在属性面板中，可以看到：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/rkIgMqVhBiI3.png\" alt=\"\"><br>\n为了监听这个事件，unity 提示我们缺少一个监听器，点击 Add 添加一个。<br>\n添加好监听器，我们需要创建一个监听实例，这个实例是可以复用的。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/fbn8zd2A3rD3.png\" alt=\"\"></p>\n<p>完成以上步骤我们发现原先有警告的小白标变成了<font color=red>白色</font>。这说明我们设置正确了，然后我们需要绑定事件给实例：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/YYCEgJkFVtkl.png\" alt=\"\"><br>\n尝试运行（播放游戏）一下发现在时间轴运行到小白标时会自动调用我们绑定的方法。</p>\n<h3>Signal-指定轨道</h3>\n<p>上面实现的 Signal 是针对于任意轨道来说的，如果我们需要很多的 Signal 处理起来可能会发生混乱，所以官方提供了专门的 Signal 轨道。<br>\n先给我们的物体添加：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/07nzVWaY41Yw.png\" alt=\"\"><br>\n在属性面板中我们可以对事件实例绑定多个方法，统一管理：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/IvGBUJotShrO.png\" alt=\"\"></p>\n<h3>小技巧</h3>\n<p>在轨道左侧可以点击三点，然后选择 Mute（静音）对指定轨道进行屏蔽。<br>\n在右侧轨道面板中，可以通过重叠区块实现 2 个区块之间的过渡效果。<br>\n可设置轨道的淡入淡出效果：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/TKt9DScaWgab.png\" alt=\"\"></p>\n<h3>驱动摄像机</h3>\n<p>做了一个超级丑的摄像机变换效果：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/UVEeBVXqcg7D.gif\" alt=\"\"></p>\n<h3>代码驱动TimeLine</h3>\n<p>有时候我们可能需要通过代码动态的启动 TimeLine，这也很容易实现：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Signal</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PlayableDirector</span> playDir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Fac</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fac..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            playDir<span class=\"token punctuation\">.</span><span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "unity"
            ]
        }
    ]
}