{
    "version": "https://jsonfeed.org/version/1",
    "title": "指尖小屋",
    "description": "学习的过程大概就是学了忘,忘了学，抽空多停下来总结，不要冲的太前。",
    "home_page_url": "https://www.fasty97.top",
    "items": [
        {
            "id": "https://www.fasty97.top/2024/07/16/%E5%AF%B9%E8%B1%A1%E6%8B%B7%E8%B4%9D/",
            "url": "https://www.fasty97.top/2024/07/16/%E5%AF%B9%E8%B1%A1%E6%8B%B7%E8%B4%9D/",
            "title": "",
            "date_published": "2024-07-16T11:20:21.302Z",
            "content_html": "<p>我们可以创建一个参数化的类构造函数以在 C# 中实现相同的目标。我们可以将先前的类对象传递给新类对象的构造函数，并从中复制所有值。以下代码示例向我们展示了如何使用 C# 中的参数化构造函数方法创建类对象的单独副本。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>using System<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>using System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>using System<span class=\"token punctuation\">.</span>Linq<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>using System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>using System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>namespace copy_an_object</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    class MyClass</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        public String test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        public <span class=\"token function\">MyClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        public <span class=\"token function\">MyClass</span><span class=\"token punctuation\">(</span>MyClass other<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            test <span class=\"token operator\">=</span> other<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    class Program</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            MyClass a <span class=\"token operator\">=</span> new <span class=\"token function\">myClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            a<span class=\"token punctuation\">.</span>test <span class=\"token operator\">=</span> <span class=\"token string\">\"This is a test\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            MyClass b <span class=\"token operator\">=</span> new <span class=\"token function\">MyClass</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            b<span class=\"token punctuation\">.</span>test <span class=\"token operator\">=</span> <span class=\"token string\">\"This is not a test\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>输出：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>This is a test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>This is not a test</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2024/04/03/NodeCanvas%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%91/",
            "url": "https://www.fasty97.top/2024/04/03/NodeCanvas%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%91/",
            "title": "NodeCanvas自定义图树",
            "date_published": "2024-04-03T01:21:52.000Z",
            "content_html": "<blockquote>\n<p><code>NodeCanvas</code>  是一款很棒的插件，包含了行为树、对话树、状态机等数据结构，提供可视化的图形服务，依此我们可以扩展一种 <code>FlowTree</code>  的流式图。</p>\n</blockquote>\n<h2 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h2>\n<h3 id=\"flowtree\"><a class=\"markdownIt-Anchor\" href=\"#flowtree\">#</a> FlowTree</h3>\n<p>FlowTree 是我想要实现的一种数据结构，即流程树结构；在流程树中的所有节点会根据检查条件选择适合的分支依次执行。这其实和官方提供的 <code>DialogTree</code>  对话树的逻辑是差不多的；但是在对话树基本节点是对话节点。</p>\n<p>为了能够执行一些列操作，而这一些操作可能包含对话也可能只是纯粹的 Action，故而需要一种新的流程树形式。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202404031031392.png\" alt=\"image-20240403103133264\"></p>\n<p class=\"yellow\">从上图中可以看出，我们可以不再依赖于对话节点，我们可以 行为、条件、子图作为起始，也可以根据这些元素作为结尾任意的连接数据。</p>\n<h2 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\">#</a> 实现</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202404030935948.png\" alt=\"目录结构\"></p>\n<p>以上是一个基本树的目录组成结构，分别包括：</p>\n<ul>\n<li><ins>FlowTreeOwner</ins> 树持有者，继承自 <code>MonoBehaviour</code></li>\n<li><ins>FlowTree</ins> 树数据，继承自 <code>Graph</code></li>\n<li><ins>FTNode</ins> 基础节点数据，继承自 <code>Node</code></li>\n<li><ins>FTConnection</ins> 基础连接数据，继承自 <code>Connection</code></li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FlowTreeOwner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FlowTreeOwner</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GraphOwner<span class=\"token punctuation\">&lt;</span>FlowTree<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FlowTree</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"ParadoxNotion/NodeCanvas/Flow Tree Asset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FlowTree</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Graph</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Type</span> baseNodeType <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">FTNode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> requiresAgent <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> requiresPrimeNode <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> isTree <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">PlanarDirection</span> flowDirection <span class=\"token operator\">=></span> PlanarDirection<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> allowBlackboardOverrides <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> canAcceptVariableDrops <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _intTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _updateTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Status</span> _rootStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">FTNode</span> _currentNode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGraphStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"FlowTree </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 启动\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        _currentNode <span class=\"token operator\">=</span> primeNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span>_currentNode <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">?</span> _currentNode <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>FTNode<span class=\"token punctuation\">)</span>primeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGraphUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> _currentNode <span class=\"token keyword\">is</span> <span class=\"token class-name\">IUpdatable</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">(</span> _currentNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">IUpdatable</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">?.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGraphStoped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        _currentNode <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> index <span class=\"token operator\">></span> _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Success<span class=\"token punctuation\">;</span> <span class=\"token comment\">//editor vis</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>targetNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FTNode</span> node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        _currentNode <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        _currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">,</span> blackboard<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FTNode</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FTNode</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Node</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> maxInConnections <span class=\"token operator\">=></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> maxOutConnections <span class=\"token operator\">=></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Type</span> outConnectionType <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">FTConnection</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> allowAsPrime <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> canSelfConnect <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Alignment2x2</span> commentsAlignment <span class=\"token operator\">=></span> Alignment2x2<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Alignment2x2</span> iconAlignment <span class=\"token operator\">=></span> Alignment2x2<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/// 流程树</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">FlowTree</span> FlowTree <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>FlowTree<span class=\"token punctuation\">)</span>graph<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNodeInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnNodeInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">UnityEditor<span class=\"token punctuation\">.</span>GenericMenu</span> <span class=\"token function\">OnContextMenu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>GenericMenu</span> menu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            menu<span class=\"token punctuation\">.</span><span class=\"token function\">AddItem</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Breakpoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> isBreakpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> isBreakpoint <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>isBreakpoint<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> menu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FTConnection</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FTConnection</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">Connection</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"树步进和条件\"><a class=\"markdownIt-Anchor\" href=\"#树步进和条件\">#</a> 树步进和条件</h3>\n<p>有了数据结构还不行，我们还需要让数据按我们期望的方式流转起来，其实也就是我们需要告诉我们的树何时应该执行下一步。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>树步进</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> index <span class=\"token operator\">></span> _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Success<span class=\"token punctuation\">;</span> <span class=\"token comment\">//editor vis</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span>outConnections<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>targetNode <span class=\"token keyword\">as</span> <span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnterNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FTNode</span> node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _currentNode <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    _currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_currentNode<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">,</span> blackboard<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 FlowTree 中有这样一个方法用于控制树步进，传入一个 index 代表选择的链接分支索引，用于进入下一个节点，如果节点返回失败则停止图，如果成功则进入下一个。</p>\n<blockquote>\n<p>我们需要在所有需要进入下一个节点的地方调用 <code>GoNext</code></p>\n</blockquote>\n<p>例如当 Action 节点执行完时:</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnActionEnd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> success <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Success<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例如当条件节点执行完时：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Status</span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Component</span> agent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IBlackboard</span> bb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There are no connections on the Dialogue Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Condition <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There is no Conidition on the Dialoge Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> isSuccess <span class=\"token operator\">=</span> Condition<span class=\"token punctuation\">.</span><span class=\"token function\">CheckOnce</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> graphBlackboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    status <span class=\"token operator\">=</span> isSuccess <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span>status<span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例如当子图执行完成时：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDLGFinished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        status <span class=\"token operator\">=</span> success <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 让流程树继续</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>对于条件节点的处理，我们只需要提供一个 <code>ConditionTask</code>  用于处理即可：</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>ConditionNode</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">global</span><span class=\"token punctuation\">::</span>ParadoxNotion<span class=\"token punctuation\">.</span>Design<span class=\"token punctuation\">.</span><span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Condition\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Color</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"b3ff7f\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConditionNode</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ITaskAssignable<span class=\"token punctuation\">&lt;</span>ConditionTask<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">ConditionTask</span> _condition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ConditionTask</span> Condition</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> _condition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> _condition <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task</span> task</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> Condition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> Condition <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ConditionTask<span class=\"token punctuation\">)</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> maxOutConnections <span class=\"token operator\">=></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Status</span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Component</span> agent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IBlackboard</span> bb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outConnections<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There are no connections on the Dialogue Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Condition <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There is no Conidition on the Dialoge Condition Node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> isSuccess <span class=\"token operator\">=</span> Condition<span class=\"token punctuation\">.</span><span class=\"token function\">CheckOnce</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> graphBlackboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            status <span class=\"token operator\">=</span> isSuccess <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span>status<span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetConnectionInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">return</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">?</span> <span class=\"token string\">\"Then\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"Else\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"子图外接图\"><a class=\"markdownIt-Anchor\" href=\"#子图外接图\">#</a> 子图 / 外接图</h3>\n<blockquote>\n<p>对于子图来说，其实也是属于一个节点，所以本质是继承自 <code>FTNode</code> 。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>FTNodeNested</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Category</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"SubGraphs\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Color</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"ffe4e1\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FTNodeNested<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FTNode</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IGraphAssignable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Graph</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>BBMappingParameter<span class=\"token punctuation\">></span></span> _variablesMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\">BBParameter</span> subGraphParameter <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">T</span> currentInstance <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\">T</span> subGraph <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token return-type class-name\">Graph</span> IGraphAssignable<span class=\"token punctuation\">.</span>currentInstance <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> currentInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> currentInstance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token return-type class-name\">Graph</span> IGraphAssignable<span class=\"token punctuation\">.</span>subGraph <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> subGraph<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> subGraph <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Dictionary<span class=\"token punctuation\">&lt;</span>Graph<span class=\"token punctuation\">,</span> Graph<span class=\"token punctuation\">></span></span> instances <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>BBMappingParameter<span class=\"token punctuation\">></span></span> variablesMap <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> _variablesMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> _variablesMap <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里我们考虑使 FlowTree 中可以接入子图 <code>DialogTree</code> :</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>NestedDT</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Name</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sub Dialogue\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Description</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Executes a sub Dialogue Tree. Returns Running while the sub Dialogue Tree is active. You can Finish the Dialogue Tree with the 'Finish' node and return Success or Failure.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">global</span><span class=\"token punctuation\">::</span>ParadoxNotion<span class=\"token punctuation\">.</span>Design<span class=\"token punctuation\">.</span><span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dialogue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropReferenceType</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">DialogueTree</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NestedDT</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FTNodeNested<span class=\"token punctuation\">&lt;</span>DialogueTree<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExposeField</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Name</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sub Tree\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">BBParameter<span class=\"token punctuation\">&lt;</span>DialogueTree<span class=\"token punctuation\">></span></span> _nestedDialogueTree <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">DialogueTree</span> subGraph</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">get</span> <span class=\"token operator\">=></span> _nestedDialogueTree<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">set</span> <span class=\"token operator\">=></span> _nestedDialogueTree<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">BBParameter</span> subGraphParameter <span class=\"token operator\">=></span> _nestedDialogueTree<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Status</span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Component</span> agent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IBlackboard</span> blackboard<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>subGraph <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> subGraph<span class=\"token punctuation\">.</span>primeNode <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">return</span> Status<span class=\"token punctuation\">.</span>Optional<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Resting<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">TryStartSubGraph</span><span class=\"token punctuation\">(</span>agent<span class=\"token punctuation\">,</span> OnDLGFinished<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            currentInstance<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateGraph</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>graph<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDLGFinished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> success<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Running<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            status <span class=\"token operator\">=</span> success <span class=\"token punctuation\">?</span> Status<span class=\"token punctuation\">.</span>Success <span class=\"token punctuation\">:</span> Status<span class=\"token punctuation\">.</span>Failure<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            FlowTree<span class=\"token punctuation\">.</span><span class=\"token function\">GoNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 让流程树继续</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnReset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentInstance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            currentInstance<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "行为树"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/07/14/HyBridCLR/",
            "url": "https://www.fasty97.top/2023/07/14/HyBridCLR/",
            "title": "HyBridCLR 初体验",
            "date_published": "2023-07-14T02:36:30.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th>版本号</th>\n<th>创建 / 更新时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>V1.0</td>\n<td>2023-07-14 10:36:30</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307141042564.png\" alt=\"image-20230714104235475\"></p>\n",
            "tags": [
                "热更新",
                "代码",
                "框架"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/07/13/YooAssets%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2023/07/13/YooAssets%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "YooAssets初体验",
            "date_published": "2023-07-13T01:10:43.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th>版本号</th>\n<th>创建 / 更新时间</th>\n<th>操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>V1.0</td>\n<td>2023-07-13 09:10:43</td>\n<td>创建</td>\n</tr>\n<tr>\n<td>V1.1</td>\n<td>2023-07-19 09:33:17</td>\n<td>添加着色器变体说明</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><code>YooAssets</code>  是一个资源管理工具，基于 ab 包实现。</p>\n<p>通过 <code>YooAssets</code>  可以方便的对资源进行管理、分析、更新。</p>\n</blockquote>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<p>打开管理界面 <strong>Edit/Project Settings/Package Manager</strong></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 输入以下内容（中国版）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">package<span class=\"token punctuation\">.</span>openupm<span class=\"token punctuation\">.</span>cn</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>URL<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token return-type class-name\">package<span class=\"token punctuation\">.</span>openupm<span class=\"token punctuation\">.</span>cn</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> com<span class=\"token punctuation\">.</span>tuyoogame<span class=\"token punctuation\">.</span>yooasset</pre></td></tr></table></figure><p>在包管理器中安装 YooAssets</p>\n<h3 id=\"划分组别\"><a class=\"markdownIt-Anchor\" href=\"#划分组别\">#</a> 划分组别</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140936034.png\" alt=\"image-20230714093639774\"></p>\n<h3 id=\"构建工具\"><a class=\"markdownIt-Anchor\" href=\"#构建工具\">#</a> 构建工具</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140940872.png\" alt=\"image-20230714093947222\"></p>\n<h3 id=\"报告工具\"><a class=\"markdownIt-Anchor\" href=\"#报告工具\">#</a> 报告工具</h3>\n<p>在打包后可以使用报告工具查看相关数据：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140941088.png\" alt=\"image-20230714094110038\"></p>\n<h2 id=\"调试工具\"><a class=\"markdownIt-Anchor\" href=\"#调试工具\">#</a> 调试工具</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140943294.png\" alt=\"image-20230714094332240\"></p>\n<h2 id=\"模式\"><a class=\"markdownIt-Anchor\" href=\"#模式\">#</a> 模式</h2>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>编辑器模式 EditorSimulateMode</td>\n<td>无需构建，直接使用</td>\n</tr>\n<tr>\n<td>离线模式 OfflinePlayMode</td>\n<td>单机游戏使用</td>\n</tr>\n<tr>\n<td>在线模式 HostPlayMode</td>\n<td>在线游戏热更新</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"代码范例\"><a class=\"markdownIt-Anchor\" href=\"#代码范例\">#</a> 代码范例</h2>\n<h3 id=\"封装资源加载\"><a class=\"markdownIt-Anchor\" href=\"#封装资源加载\">#</a> 封装资源加载</h3>\n<blockquote>\n<p>我们可以对通用资源加载进行封装，使用 1 行代码实现资源加载。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>封装资源加载</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token generic-method\"><span class=\"token function\">LoadAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token keyword\">class</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_package<span class=\"token punctuation\">.</span><span class=\"token function\">CheckLocationValid</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> handle <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">LoadAssetAsync</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">await</span> handle<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> handle<span class=\"token punctuation\">.</span>AssetObject <span class=\"token keyword\">as</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">key</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 資源尋址地址錯誤！\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"通用示例\"><a class=\"markdownIt-Anchor\" href=\"#通用示例\">#</a> 通用示例</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Scenes<span class=\"token punctuation\">.</span>YooTest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Sirenix<span class=\"token punctuation\">.</span>OdinInspector</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>SceneManagement</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">YooAsset</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">YooAssetTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ResourcePackage</span> _package<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> PackName <span class=\"token operator\">=</span> <span class=\"token string\">\"DefaultPackage\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">EPlayMode</span> playMode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        YooAssets<span class=\"token punctuation\">.</span><span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        _package <span class=\"token operator\">=</span> YooAssets<span class=\"token punctuation\">.</span><span class=\"token function\">CreatePackage</span><span class=\"token punctuation\">(</span>PackName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        YooAssets<span class=\"token punctuation\">.</span><span class=\"token function\">SetDefaultPackage</span><span class=\"token punctuation\">(</span>_package<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">InitializationOperation</span> hand<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>playMode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">case</span> EPlayMode<span class=\"token punctuation\">.</span>EditorSimulateMode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token comment\">// 編輯器模式</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EditorSimulateModeParameters</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    SimulateManifestFilePath <span class=\"token operator\">=</span> EditorSimulateModeHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SimulateBuild</span><span class=\"token punctuation\">(</span>PackName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                hand <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeAsync</span><span class=\"token punctuation\">(</span>sm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">await</span> hand<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">case</span> EPlayMode<span class=\"token punctuation\">.</span>OfflinePlayMode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 離線模式</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                hand <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OfflinePlayModeParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">await</span> hand<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">case</span> EPlayMode<span class=\"token punctuation\">.</span>HostPlayMode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token comment\">// 在線模式</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> hs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HostPlayModeParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span> QueryServices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">YooHostQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> RemoteServices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">YooRemote</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                hand <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">InitializeAsync</span><span class=\"token punctuation\">(</span>hs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">await</span> hand<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hand<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"资源包初始化成功！当前资源版本:\"</span><span class=\"token operator\">+</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">GetPackageVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源包初始化失败：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">hand<span class=\"token punctuation\">.</span>Error</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">HostLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">HostLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">// 檢查版本</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> upHandle <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">UpdatePackageVersionAsync</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 關閉時間戳</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> upHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>upHandle<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token comment\">// 更新成功</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> packageVersion <span class=\"token operator\">=</span> upHandle<span class=\"token punctuation\">.</span>PackageVersion<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"已获取到最新版本号 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">packageVersion</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            HotConfig<span class=\"token punctuation\">.</span>NewVision <span class=\"token operator\">=</span> packageVersion<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token comment\">// 更新失败</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span>upHandle<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\">// 更新資源</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> upAssetHandle <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">UpdatePackageManifestAsync</span><span class=\"token punctuation\">(</span>upHandle<span class=\"token punctuation\">.</span>PackageVersion<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> upAssetHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>upAssetHandle<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新失敗：\"</span> <span class=\"token operator\">+</span> upAssetHandle<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> downloadingMaxNum <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> failedTryAgain <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> package <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> downloader <span class=\"token operator\">=</span> package<span class=\"token punctuation\">.</span><span class=\"token function\">CreateResourceDownloader</span><span class=\"token punctuation\">(</span>downloadingMaxNum<span class=\"token punctuation\">,</span> failedTryAgain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"需要下载的资源数量：\"</span><span class=\"token operator\">+</span>downloader<span class=\"token punctuation\">.</span>TotalDownloadCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token comment\">// 没有需要下载的资源</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>downloader<span class=\"token punctuation\">.</span>TotalDownloadCount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token comment\">// 需要下载的文件总数和总大小</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> totalDownloadCount <span class=\"token operator\">=</span> downloader<span class=\"token punctuation\">.</span>TotalDownloadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">long</span></span> totalDownloadBytes <span class=\"token operator\">=</span> downloader<span class=\"token punctuation\">.</span>TotalDownloadBytes<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token comment\">// 注册回调方法</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnDownloadErrorCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载资源出错！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnDownloadProgressCallback <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前下载进度：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnDownloadOverCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span>OnStartDownloadFileCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始下载\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token comment\">// 开启下载</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        downloader<span class=\"token punctuation\">.</span><span class=\"token function\">BeginDownload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> downloader<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token comment\">// 检测下载结果</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>downloader<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">==</span> EOperationStatus<span class=\"token punctuation\">.</span>Succeed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            <span class=\"token comment\">// 下载成功</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            <span class=\"token comment\">// 下载失败</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载失败：\"</span><span class=\"token operator\">+</span>downloader<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token generic-method\"><span class=\"token function\">LoadAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UI/Image\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateCube</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> g<span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token generic-method\"><span class=\"token function\">LoadAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UI/Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LoadScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sc <span class=\"token operator\">=</span> _package<span class=\"token punctuation\">.</span><span class=\"token function\">LoadSceneAsync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scene_1\"</span><span class=\"token punctuation\">,</span> LoadSceneMode<span class=\"token punctuation\">.</span>Additive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token keyword\">await</span> sc<span class=\"token punctuation\">.</span>Task<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"着色器变体收集\"><a class=\"markdownIt-Anchor\" href=\"#着色器变体收集\">#</a> 着色器变体收集</h2>\n<h3 id=\"什么是着色器变体\"><a class=\"markdownIt-Anchor\" href=\"#什么是着色器变体\">#</a> 什么是着色器变体</h3>\n<blockquote>\n<p>当我们写完一个 shader 以后，unity 需要加载和编译，这个过程由着色器的构建管线来完成，它的输入是着色器，而它的输出就是今天的主角 — 着色器变体；每一个着色器进入构建管线后会被解析，然后提取着色器片段（顶点着色器和片元着色器等），收集预处理指令，然后每一个着色器变体会有一个参数表；<br>\n————————————————<br>\n 版权声明：本文为 CSDN 博主「莫之」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>\n原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MzgzNjIzL2FydGljbGUvZGV0YWlscy8xMDMzMjczODk=\">https://blog.csdn.net/qq_36383623/article/details/103327389</span></p>\n</blockquote>\n<h3 id=\"yooasset-收集着色器变体\"><a class=\"markdownIt-Anchor\" href=\"#yooasset-收集着色器变体\">#</a> YooAsset 收集着色器变体</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307190950490.png\" alt=\"image-20230719095020282\"></p>\n<blockquote>\n<p>收集的着色器变体文件需要打包进 AB 中，在 AB 中加载。</p>\n</blockquote>\n<h2 id=\"配合unitycdn使用\"><a class=\"markdownIt-Anchor\" href=\"#配合unitycdn使用\">#</a> 配合 UnityCDN 使用</h2>\n<blockquote>\n<p>PS：YooAsset 通过获取版本号，再更新对应版本资源。</p>\n<p>故可以将获取补丁文件的路径设置为动态的，通过获取到的版本号来获取对应资源，有利于资源在 CDN 的存储结构。</p>\n</blockquote>\n<ol>\n<li>创建一个 Bucket 存储池：</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140956218.png\" alt=\"image-20230714095638150\"></p>\n<ol start=\"2\">\n<li>下载相关 Unity 插件</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140958953.png\" alt=\"image-20230714095811900\"></p>\n<ol start=\"3\">\n<li>填写好相关 key</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307140959349.png\" alt=\"\"></p>\n<ol start=\"4\">\n<li>上传相关文件</li>\n</ol>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307141001266.png\" alt=\"image-20230714100120217\"></p>\n<h2 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW9vYXNzZXQuY29tLw==\">Hello from YooAsset | YooAsset</span></li>\n<li>+<span class=\"exturl\" data-url=\"aHR0cHM6Ly91b3MudW5pdHkuY24vYXBwcw==\">UOS Developer Portal (unity.cn)</span></li>\n</ul>\n",
            "tags": [
                "热更新",
                "资源管理"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/07/07/EnhancedScroller%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2023/07/07/EnhancedScroller%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "EnhancedScroller的使用",
            "date_published": "2023-07-07T02:58:46.000Z",
            "content_html": "<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071101983.png\" alt=\"image-20230707110146287\"></p>\n<p><code>EnhancedScroller</code>  是一个加强版本的滚动区域组件，可以改善滚动条的性能并实现例如无限滚动的效果。</p>\n<h2 id=\"简单示例\"><a class=\"markdownIt-Anchor\" href=\"#简单示例\">#</a> 简单示例</h2>\n<p>创建一个滑动区域：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071349322.png\" alt=\"image-20230707134942227\"></p>\n<blockquote>\n<ul>\n<li>滑动区域需要 3 个部分：滑动区域、滚动条、Mask</li>\n</ul>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071354735.png\" alt=\"image-20230707135435704\"></p>\n<Center>可以使用Rect Mask 2D 替代Mask获得更好效果</Center>\n<p>列表内容都需要继承 <code>EnhancedScrollerCellView</code></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>PersonItem</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonItem</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EnhancedScrollerCellView</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TextMeshProUGUI</span> _text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PersonModel</span> _model<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Button</span> _button<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        _text <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponentInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TextMeshProUGUI<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        _button <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonModel</span> model<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        _model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        _text<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> _model<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>列表需要实现 <code>IEnhancedScrollerDelegate</code>  接口</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>PersonList</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonList</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">IEnhancedScrollerDelegate</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">EnhancedScroller</span> _enhancedScroller<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>PersonModel<span class=\"token punctuation\">></span></span> _list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>PersonModel<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">EnhancedScrollerCellView</span> cellViewPrefab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      _enhancedScroller <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>EnhancedScroller<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token comment\">// 需要在 Start 方法中，设定委托对象为当前</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      _enhancedScroller<span class=\"token punctuation\">.</span>Delegate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         _list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PersonModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"AAA\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       <span class=\"token comment\">// 装载初始化对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      _enhancedScroller<span class=\"token punctuation\">.</span><span class=\"token function\">ReloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token comment\">// 数据个数</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">GetNumberOfCells</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnhancedScroller</span> scroller<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">return</span> _list<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token comment\">// 每个子项目的大小</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> <span class=\"token function\">GetCellViewSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnhancedScroller</span> scroller<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> dataIndex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// 创建初始化一个子项目</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">EnhancedScrollerCellView</span> <span class=\"token function\">GetCellView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnhancedScroller</span> scroller<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> dataIndex<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> cellIndex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token comment\">// 创建一个子项</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cellView <span class=\"token operator\">=</span> scroller<span class=\"token punctuation\">.</span><span class=\"token function\">GetCellView</span><span class=\"token punctuation\">(</span>cellViewPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">PersonItem</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      cellView<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"cell \"</span> <span class=\"token operator\">+</span> dataIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      cellView<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span>_list<span class=\"token punctuation\">[</span>dataIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token keyword\">return</span> cellView<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"效果展示\"><a class=\"markdownIt-Anchor\" href=\"#效果展示\">#</a> 效果展示</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071404120.gif\" alt=\"动画\"></p>\n<p>如上所示：当我滚动列表时，左侧列表也会随之变化，重复使用对象。</p>\n<h3 id=\"无限循环列表\"><a class=\"markdownIt-Anchor\" href=\"#无限循环列表\">#</a> 无限循环列表</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071411713.png\" alt=\"image-20230707141151672\"></p>\n<p>勾选此选项可以开启无限循环模式，在这个模式下，可以无限滑列表。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071411315.gif\" alt=\"动画\"></p>\n<Center>无限循环列表效果</Center>\n<h3 id=\"跳转位置\"><a class=\"markdownIt-Anchor\" href=\"#跳转位置\">#</a> 跳转位置</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202307071438598.gif\" alt=\"动画\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">TryParse</span><span class=\"token punctuation\">(</span>keyTex<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                data <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _list<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                _enhancedScroller<span class=\"token punctuation\">.</span><span class=\"token function\">JumpToDataIndex</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">tweenTime</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">tweenType</span><span class=\"token punctuation\">:</span> EnhancedScroller<span class=\"token punctuation\">.</span>TweenType<span class=\"token punctuation\">.</span>easeInSine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<p>除此之外，插件还支持例如：下拉加载、多种类子项、Gird 布局等。。。</p>\n<p>在使用几百个下拉项时，Unity 自带的滚轮区域会卡顿，特别是在初始化时会造成峰值，使用此插件可以避免这种情况😄.</p>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/06/29/Address%E5%BF%AB%E9%80%9F%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/",
            "url": "https://www.fasty97.top/2023/06/29/Address%E5%BF%AB%E9%80%9F%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/",
            "title": "Address快速食用指南",
            "date_published": "2023-06-29T03:33:19.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 📑写在前面</h2>\n<p>Address 是 Unity 推出的 Ab 包的新封装，可以更方便的实现 Ab 包的资源加载，为做区分这里将 Address 打出的包称之为 aa 包。</p>\n<h2 id=\"需求环境\"><a class=\"markdownIt-Anchor\" href=\"#需求环境\">#</a> 需求环境</h2>\n<blockquote>\n<p>在什么情况下我们需要使用 Address 呢？</p>\n</blockquote>\n<ol>\n<li>当我们需要使用 Ab 包时，可以使用 Address 替代传统 Ab 包。</li>\n<li>当我们需要将资源进行分组时，例如美术场景和程序分离。</li>\n<li>当我们需要进行热更新时。</li>\n<li>当我们希望在外部更新程序或资源时。</li>\n<li>…</li>\n</ol>\n<h2 id=\"1构建本地静态包\"><a class=\"markdownIt-Anchor\" href=\"#1构建本地静态包\">#</a> 1. 构建本地静态包</h2>\n<p>先来</p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2023/05/10/%E5%9C%A8Unity%E4%BD%BF%E7%94%A8SqlLite/",
            "url": "https://www.fasty97.top/2023/05/10/%E5%9C%A8Unity%E4%BD%BF%E7%94%A8SqlLite/",
            "title": "在Unity使用SqlLite",
            "date_published": "2023-05-10T01:36:00.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<p>在游戏存储中我们可以使用多种方法，json、二进制、xml、csv、excel、或者是文本、自定义格式等等。使用这些的时候我们基本都需要将文件整个读入内存中，那有没有一种办法可以不用将所有数据载入内存呢？</p>\n<p>答案就是 ———— 使用<ins>数据库</ins>。</p>\n<p>数据库的种类很多，大都都服务于网络服务，在单机游戏中使用数据库的话，可以选择 sqllite。</p>\n<h2 id=\"sqllite\"><a class=\"markdownIt-Anchor\" href=\"#sqllite\">#</a> SqlLite</h2>\n<p>sqllite 是一种轻量的文件型数据库，整个数据库只有一个 <code>.db文件</code> 而且其使用范围非常广，支持的平台多，是我们在使用 Unity 开发单机游戏时的好选择。</p>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<p>要使用 SqlLite，我们至少需要导入:</p>\n<ul>\n<li>sqllte3.dll</li>\n<li>Mono.Data.Sqllite.dll</li>\n</ul>\n<p>在这里我们额外导入 Dapper 作为 Orm 方便我们对数据进行 curd：</p>\n<ul>\n<li>Dapper.dll</li>\n<li>Dapper.Contrib.dll</li>\n<li>Mono.Data.Sqlite.dll</li>\n</ul>\n<h3 id=\"创建数据表\"><a class=\"markdownIt-Anchor\" href=\"#创建数据表\">#</a> 创建数据表</h3>\n<p>首先我们创建一个数据表的模型类 User 如下：</p>\n<p>在类名上标注表的名称，<ins>这个名称需要和 db 文件中的数据表名称对应</ins>。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Dapper<span class=\"token punctuation\">.</span>Contrib<span class=\"token punctuation\">.</span>Extensions</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Scenes<span class=\"token punctuation\">.</span>SqlLiteDB<span class=\"token punctuation\">.</span>Tables</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Table</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"User\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Serializable</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Key</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> pass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"id:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">id</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> name:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> pass:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">pass</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> age:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">age</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "SqlLite",
                "存储",
                "数据库"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/03/09/%E9%80%9A%E7%9F%A5%E7%B3%BB%E7%BB%9F/",
            "url": "https://www.fasty97.top/2023/03/09/%E9%80%9A%E7%9F%A5%E7%B3%BB%E7%BB%9F/",
            "title": "通知系统",
            "date_published": "2023-03-09T08:26:33.000Z",
            "content_html": "<blockquote>\n<p><code>通知系统</code> 在各种各样的游戏、应用中都有。</p>\n</blockquote>\n<p>相信大家都看过 win10 的通知消息，在游戏中，我们获得 xx 道具、达成 xx 成就、或是做了 xx 事情需要通知给玩家，这些都可以看作是通知。</p>\n<h2 id=\"通知系统的特点\"><a class=\"markdownIt-Anchor\" href=\"#通知系统的特点\">#</a> 通知系统的特点</h2>\n<p>通知系统具备以下特点：</p>\n<ol>\n<li>时效性：每一个通知就像一条讯息，存在 <code>存活时间</code> ，死亡后就应该从屏幕空间消失。</li>\n<li>排列性：按照先来先服务原则，很有可能上一条讯息还处于存活时间，就来了很多条新讯息，此时新讯息不应该抢占当前讯息的存活时间，而是在等待讯息死亡后再按照排列进行数据显示。</li>\n<li>置顶性：通知系统应该具备较高的 <code>显示优先级</code> ，即不该被基础元素遮挡。</li>\n<li>显示层：以上几点均为逻辑设计，一般来说，通知系统显示新消息时会将旧消息 <code>顶</code> 上去。</li>\n</ol>\n<p>依据以上特点我们可以这样考虑：</p>\n<h3 id=\"时效性\"><a class=\"markdownIt-Anchor\" href=\"#时效性\">#</a> 时效性</h3>\n<p>自消息显示时开始记录时效，在指定时间后  <code>杀死消息</code> 。</p>\n<h3 id=\"排列性\"><a class=\"markdownIt-Anchor\" href=\"#排列性\">#</a> 排列性</h3>\n<p>遵循先来先服务的原则，我们可以使用一个队列结构对等待消息进行缓存。在显示消息时将消息从队列中移除。</p>\n<h3 id=\"置顶性\"><a class=\"markdownIt-Anchor\" href=\"#置顶性\">#</a> 置顶性</h3>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2023/02/07/MarkLight%E4%BB%A5Xml%E7%BC%96%E5%86%99UI/",
            "url": "https://www.fasty97.top/2023/02/07/MarkLight%E4%BB%A5Xml%E7%BC%96%E5%86%99UI/",
            "title": "MarkLight以XML编写UI",
            "date_published": "2023-02-07T01:51:40.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<blockquote>\n<p>接触过 web 前端的人，应该都知道网页 以 <code>Html+Css+Js</code>  的形式构成，这种高度灵活的方式一直延续至今。当然后续推出了如 <code>Vue</code> 、 <code>Rective</code>  等前端框架和 <code>Thymeleaf</code> 、 <code>Asp</code>  等模板引擎。。。扯远了…</p>\n<p>总之，我们可以借鉴 Web 的做法，使用类似的结构去编写 Unity Ui，如 Unity 的新 UI 系统  <code>UIElement（UiToolkit</code> ）也是这么做的。此文并不想介绍 UIElement，因为通过作者实际使用体验来说，UIElement 还有很多路要走，可能在制作编辑器领域可以打破原先 Gui 的桎梏，然而在运行时下的 UI，MarkLight 则舒服许多。</p>\n</blockquote>\n<h2 id=\"关于marklight\"><a class=\"markdownIt-Anchor\" href=\"#关于marklight\">#</a> 关于 MarkLight</h2>\n<p>在 Ui 框架的领域中一直流行 MVVM 的设计，M 模型 V 视图 VM 视图模型 通过三者的配合，可以将表现层与逻辑层相分离，有利于解除耦合。MarkLight 同样是使用了这一套设计方案，通过 Xml 文件编写 View, 配合 ViewModel 的 C# 文件进行控制。同时吸纳了 Html 的优点，使用类 Css 的 Xml 文件可以对控件进行统一的样式配置，这让换肤和界面规范统一变得十分容易。</p>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<p>首先我们可以通过包管理器或者其他方式，将 MarkLight 导入项目中。</p>\n<p>此时我们创建如下文件夹：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202302071005066.png\" alt=\"image-20230207100516762\"></p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>存放所有的图片、音效等资源</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ViewModels</td>\n<td>存放所有的 View 对应的 ViewModel</td>\n</tr>\n<tr>\n<td>View</td>\n<td>存放所有的 UI 元素</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"创建一个视图view\"><a class=\"markdownIt-Anchor\" href=\"#创建一个视图view\">#</a> 创建一个视图 View</h3>\n<blockquote>\n<p>右键 -&gt;Create-&gt;View 创建一个名为 MainMenu 的 xml</p>\n</blockquote>\n<p>给新创建的 Xml，写入如下内容：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MainMenu</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Region</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>25%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Alignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Left<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#353535<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Group</span> <span class=\"token attr-name\">Spacing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Play<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Play<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Options<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Options<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Quit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Quit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>测试<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Group</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Region</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Region</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>75%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Alignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#949494<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Region</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MainMenu</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>右键 -&gt;Create-&gt;View 创建一个名为 MainMenuScene 的 xml 作为根 Ui</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MainMenuScene</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UserInterface</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1024<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>768<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MainMenu</span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UserInterface</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>EventSystem</span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MainMenuScene</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>创建一个空物体改名 <code>UIRoot</code>  并为其添加如下脚本，设置 MainView 为 MainMenuScene，Default Theme 为 Flat。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202302071026717.png\" alt=\"image-20230207102610139\"></p>\n<p>此时你将会看到场景中多了 UI，并且在 UIRoot 下生成了许多子物体。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202302071029753.png\" alt=\"image-20230207102854443\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202302071030826.png\" alt=\"\"></p>\n<h3 id=\"绑定viewmodel\"><a class=\"markdownIt-Anchor\" href=\"#绑定viewmodel\">#</a> 绑定 ViewModel</h3>\n<blockquote>\n<p>在 ViewModels 文件夹下创建一个 MainMenu.cs 文件</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainMenu</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UIView</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Options\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Quit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在其中添加方法可以绑定到 Button 的 Click 事件。</p>\n<p>++ PS：在 MarkLight 中使用名称强相关进行绑定，所以所有的文件名、方法名都需要一致。 ++</p>\n",
            "tags": [
                "XML"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/01/29/%E5%85%B3%E4%BA%8E%E6%A0%91%E7%9A%84%E6%93%8D%E4%BD%9C/",
            "url": "https://www.fasty97.top/2023/01/29/%E5%85%B3%E4%BA%8E%E6%A0%91%E7%9A%84%E6%93%8D%E4%BD%9C/",
            "title": "关于树的操作",
            "date_published": "2023-01-29T01:40:05.000Z",
            "content_html": "<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>一个简单树</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>Item<span class=\"token punctuation\">></span></span> Items <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Item<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>基础数据</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> aa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Item<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"B\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"D\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"E\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"a1\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"a2\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"e1\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>e<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"e2\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>简单遍历</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Loop2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Item<span class=\"token punctuation\">></span></span> aa<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 根</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token keyword\">in</span> aa<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>Name<span class=\"token operator\">==</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">//Dosomething</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">Loop2</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>以上的内容都很简单，现在我们来思考一下，假如我们需要返回一个值？ 例如是否存在指定 Name 节点的布尔值。</p>\n</blockquote>\n<p>暂时只想到这样的办法，肯定有更好的方案。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> res <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">LoopAct</span><span class=\"token punctuation\">(</span>aa<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">==</span> <span class=\"token string\">\"e1\"</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "思维"
            ]
        },
        {
            "id": "https://www.fasty97.top/2023/01/06/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/",
            "url": "https://www.fasty97.top/2023/01/06/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/",
            "title": "坐标系变换",
            "date_published": "2023-01-06T01:23:59.000Z",
            "content_html": "<h2 id=\"坐标转换\"><a class=\"markdownIt-Anchor\" href=\"#坐标转换\">#</a> 坐标转换</h2>\n<p>已知云端坐标点 A（10,10），需要转换到本地坐标轴下的位置 B？</p>\n<h3 id=\"可能的问题\"><a class=\"markdownIt-Anchor\" href=\"#可能的问题\">#</a> 可能的问题</h3>\n<ul>\n<li>坐标平移</li>\n<li>坐标旋转</li>\n</ul>\n<h3 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\">#</a> 参考</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpbnpoaWxpbmdlci9hcnRpY2xlL2RldGFpbHMvMTIyMjA5Nzg3\">Unity 不同空间坐标转换中的矩阵应用_心之凌儿的博客 - CSDN 博客_unity 空间变换</span></li>\n</ul>\n<h2 id=\"unity中内置转换\"><a class=\"markdownIt-Anchor\" href=\"#unity中内置转换\">#</a> Unity 中内置转换</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// 坐标转换工具类</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CTUtils</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// 世界坐标转屏幕坐标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">World2Screen</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> wp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            camera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> camera<span class=\"token punctuation\">.</span><span class=\"token function\">WorldToScreenPoint</span><span class=\"token punctuation\">(</span>wp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">/// 屏幕坐标转世界坐标</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector3</span> <span class=\"token function\">Screen2World</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> sp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            camera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> camera<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenToWorldPoint</span><span class=\"token punctuation\">(</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// 世界坐标转视口坐标</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">World2Viewport</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> wp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            camera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> camera<span class=\"token punctuation\">.</span><span class=\"token function\">WorldToViewportPoint</span><span class=\"token punctuation\">(</span>wp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">/// 视口坐标转世界坐标</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector3</span> <span class=\"token function\">Viewport2World</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> vp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            camera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">return</span> camera<span class=\"token punctuation\">.</span><span class=\"token function\">ViewportToWorldPoint</span><span class=\"token punctuation\">(</span>vp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre> </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">/// 屏幕坐标转视口坐标</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">Screen2Viewport</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector2</span> sp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            camera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">return</span> camera<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenToViewportPoint</span><span class=\"token punctuation\">(</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre> </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">/// 视口坐标转屏幕坐标</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">Viewport2Screen</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector2</span> vp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            camera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">return</span> camera<span class=\"token punctuation\">.</span><span class=\"token function\">ViewportToScreenPoint</span><span class=\"token punctuation\">(</span>vp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre> </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\">/// 屏幕坐标转 UI 坐标</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">Screen2UI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector2</span> sp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RectTransform</span> rect<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token class-name\">Vector2</span> uiLocalPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        RectTransformUtility<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenPointToLocalPointInRectangle</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">,</span> sp<span class=\"token punctuation\">,</span> camera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> uiLocalPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">return</span> uiLocalPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre> </pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token comment\">/// 世界坐标转 UI 坐标</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"isUIObj\"> 是否为 ui 物体 & lt;/param></span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">World2UI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isUIObj<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector3</span> wp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RectTransform</span> rect<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> uiCamera<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> worldCamera <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>worldCamera <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            worldCamera <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token class-name\">Vector2</span> screenPos <span class=\"token operator\">=</span> <span class=\"token function\">World2Screen</span><span class=\"token punctuation\">(</span>wp<span class=\"token punctuation\">,</span> <span class=\"token class-name\">isUIObj <span class=\"token punctuation\">?</span></span> uiCamera <span class=\"token punctuation\">:</span> worldCamera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">Screen2UI</span><span class=\"token punctuation\">(</span>screenPos<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">,</span> uiCamera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "数学"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/27/2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "url": "https://www.fasty97.top/2022/12/27/2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "title": "2022年终总结",
            "date_published": "2022-12-27T01:25:12.000Z",
            "content_html": "<blockquote>\n<p>不知不觉，一年的时间就这么过去了😢. 回顾这一年的种种，大致可以将其划分为上半年和下半年两大部分。</p>\n</blockquote>\n<h2 id=\"上半年\"><a class=\"markdownIt-Anchor\" href=\"#上半年\">#</a> 上半年</h2>\n<blockquote>\n<p>上半年 大概都是找工作的事情</p>\n</blockquote>\n<p>上半年的时候，基本还在考编制。印象最深的莫过于获得了烟草公司的笔试机会，在对计算机专业知识一通复习后，我自我感觉良好，没想到行测考的太差与面试失之交臂。自这一场考试深深的提醒了我对于行测等知识的学习能力很差，要想通过行测申论来考取一个工作机会是困难的。而我能为之依靠的除了自身的专业知识之外也没有什么其他的东西了，看着越来越卷的编制大环境，我放弃了省考的机会开始找工作之旅。</p>\n<h3 id=\"论失业1年如何重获工作\"><a class=\"markdownIt-Anchor\" href=\"#论失业1年如何重获工作\">#</a> 论失业 1 年如何重获工作</h3>\n<p>自之前从朋友介绍的工作离职，我已经很久（将近一年）没工作了，对于这次找工作可谓是恐惧与期待并存 —— 害怕开始却也期待新的变革。静下心来，好好整理了一份工作简历，把学生时代的一些荣誉填上去、再加上一些自我认知的东西。我觉得，学生时代打下的基础多少能有一些用。整理好了简历，我开始在网络上投递简历，心想着现在就去做游戏吧。我把城市选在了成都，成都离云南不太远，不知道是不是在云南待的有些久了，竟然有些缺乏了走出去的勇气。在成都投递了几天简历，也主动联系了几家公司，都要求要有项目上线经验。其中倒是也有无需上线经验的，但是是做 Cos cos，想都没想我就拒绝了。</p>\n<p>随后，以试试看的心态，在云南看看，发现云南的游戏工作室非常少，可以说是屈指可数，而且大都非常差劲。直到我发现了 <code>螺舟</code> ，对，就是那个太吾绘卷的游戏工作室。我直接投递了简历，然而并没有什么回声，直接石沉大海了。（想必是看不上一个没有游戏上线经验的小白吧。）本来想着上门亲自自荐，后来冷静下来想想也就算了。</p>\n<p>那如果不能做游戏我能做什么呢？我不禁自己问自己。回去写 Web？或者转写 Java？不，我想至少有机会从事 Unity 相关的工作会比较好一些。直接搜索 Unity 下，我发现云南有一些数字孪生、数字工厂的岗位需求，大多数是 Unity 也有需要 UE 的（没想到在这种信息化发展很差的地方，也还是有 Unity 出场的地方而且需求量比游戏要多一些。）随即，我将自己的简历挂了上去。</p>\n<p>其实当时在想，如果云南没有合适的岗位、成都又需求上线经验，要不就直接去上海、杭州、深圳找个正经游戏公司待。大概是命运使然吧，在挂上简历的第二天我就收到了 x 公司 Hr 的私信，让我过去面试。</p>\n<h3 id=\"x公司面试\"><a class=\"markdownIt-Anchor\" href=\"#x公司面试\">#</a> x 公司面试</h3>\n<p>越好时间之后，一大早我就做地铁 30 多公里来到了公司楼下，找了一个复印店，打印了一份简历，同时特意购买了了一个文件夹把简历包装好，我相信面试的态度和用心也决定了面试成败和薪资。带着简历，我找到了公司，公司的地理位置十分偏僻。不远处便可以看到大山。旁边是一个小村落，公路上的车辆很少，只有过路的货车和在园区这边上班的人。</p>\n<p>走进去，Hr 只会我在进门一侧的小桌子坐下，随即扔给我一份测试题。我也曾想过可能会有测试题，并不感到有什么意外，大致翻看了一下，都是一些基础性知识，在最后有二道简单算法题目。” 什么 Unity 生命周期 “，” 什么 Linq“，“什么对象池”，“一个排序和一个二叉树”。看着那份测试题，我脑海里猜想着我需要从事的工作内容。然后便是一名三十来岁的男子，走过来招呼我去面试，这次则是到了楼上，“我们公司分为 2 层” 他解释道。</p>\n<p>开场先来一个标准性的自我介绍，随后就是一些工作经验问答，最后聊了一下设计模式，我自我感觉我聊的应该不错，测试完成的也很棒，在薪资环节，我大胆的高要了一步，在走的时候，我问 “什么时候能知道结果？”，他说 “像你这样的应该很快”。</p>\n<p>不久我就收到了电话，要和我谈谈薪资，我就重复说要面试时开出的薪资，对方软磨硬泡，最终公司决定先给我发 offer，给我一周的时间考虑。</p>\n<h3 id=\"y公司面试\"><a class=\"markdownIt-Anchor\" href=\"#y公司面试\">#</a> y 公司面试</h3>\n<p>在这一周的时间里，我也想看看别的机会，果然在第三天，我收到了 y 公司的面试邀请。y 公司是一家以做工程项目起家的公司，现在数字孪生、数字城市是公司的创新项目。与 x 公司不同，有公司在市区，就是位置有点偏僻，周围都是建筑公司和建筑工地。来到一间会议室，安排我坐下，随即就扔给我一份面试题。Hr 介绍说：“面试分为 HR 面试和技术面试两个环节。”</p>\n<p>面试题并非 x 公司的专业性知识，而是一则冗长的个人情况调查，掺杂着一些心理测试。看到卷面，我就感到有些不适：</p>\n<ul>\n<li>各种家庭关系、父母工作、</li>\n<li>以前的工作经历和薪资、</li>\n<li>如果有机会让你做其他岗位你最想做什么？</li>\n<li>你想成为孙悟空还是沙和尚？</li>\n<li>…</li>\n</ul>\n<p>要填的公司有多又长，满满两大页纸。</p>\n<p>然后便是 HR 和我聊对公司的认识，聊信念。</p>\n<p>最后的最后，我一个技术人员终于迎来了技术面试，来的是一男一女，都挺年轻的。看了我的简历，看了很久。然后介绍了一下主要的工作内容，要到实地去驻场开发。等了好久，面试官也没有问我技术问题，我果断直接开问。“你们不问我技术问题吗？” 面试官笑笑 “看你的简历就知道了，不用问”。随后便是期望薪资，我说了和 x 公司一样的。最后 hr 问我，“对这次面试还满意不？”，我说除了开头那些测试太多、而且有些侵犯个人隐私之外都挺好的，她说让我打个分，我说 “80” 分吧。 其实这不是给这次面试打分，而是给整个公司打分，得益于公司是在市区，而且提供一顿早饭的缘故，我还是和 hr 强调我也已经拿到一份 offer，有结果还请尽快联系我。</p>\n<h3 id=\"碎碎念\"><a class=\"markdownIt-Anchor\" href=\"#碎碎念\">#</a> 碎碎念</h3>\n<p>如果以分值 100 作为评定，我觉得双方都是 80 分，x 公司很期望我入职，尽管觉得我要价太高，还是给我发了一份他能给的薪资 offer、而且有很好的上司，纯互联网公司，但地理位置偏远。y 公司，在市区地理位置较好，提供早饭，本质是工程类公司的技术部门，但感觉录取一个技术人员，全看人事 Hr，技术员在里面话语权很低。</p>\n<hr>\n<p>最终，在 x 公司的最后一天，我也没接到 y 公司的通知，又暂时没有更好的机会，我便来到了 x 公司。在入职 x 公司一周后，我才接到了 y 公司面试失败的消息。（其实我觉得这么久，也多半是凉了。）</p>\n<h2 id=\"下半年\"><a class=\"markdownIt-Anchor\" href=\"#下半年\">#</a> 下半年</h2>\n<blockquote>\n<p>下半年基本都是 工作后的事情</p>\n</blockquote>\n<p>7 月底，我入职了。</p>\n<p>入职的第一项工作是实现一个基于 A 星寻路的算法.</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301131025414.gif\" alt=\"动画\"></p>\n<p>然后便是一个处理一个环穿车，大概长这样：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301170922143.png\" alt=\"image-20230117092249989\"></p>\n<p>一辆小车在一个环形轨道上运动，根据远端的传感器数据来确定小车的移动速度和停留位置。单纯从单机的角度上考虑，这项工作很容易，然而在结合生成环境下就出现很多问题。</p>\n<ol>\n<li>测量数据是又误差的</li>\n<li>远端数据存在丢包现象，且不可校正 —— 接受的数据时间间隔不统一</li>\n<li>小车存在加减速过程</li>\n</ol>\n<p>之前都是使用自己的服务，分包、粘包，丢包也会重发。对于这种问题并没有什么经验，还好最终是解决了。</p>\n<p><ins>其余的有空再单独抽一篇来写吧</ins></p>\n<h2 id=\"公司年会\"><a class=\"markdownIt-Anchor\" href=\"#公司年会\">#</a> 公司年会</h2>\n<p>“恭喜 xx 获得一台冰箱”，那好像喊的是我的名字。我有些不知所措，又有些惊喜，我抬头看看电子荧幕上我的名字，再看了一眼周围的同事。嗯，没错，确实是我抽中了。和我一同抽中的还有坐我旁边的一位同事，另一位则是个女生。合影留念后，我回到饭桌，大家都露出恭喜之色。</p>\n<p>虽是好事但是也多了忧虑 “我现在并用不到那么大的冰箱，租房处也容纳不了，况且我已经有一台小冰箱了，已经足够了。”，该怎么出手成了一个问题，和 PS5 这样的游戏机不同，冰箱这种体积庞大，运费昂贵的居家物件并不是好出手的类型。不过我运气还算不错，有位同事想要，我也就降了几百块出给他了。</p>\n<p>虽然我抽中了奖品，但是我还是想要吐槽一下，年会的饭菜着实是有些拉了，特别是我们那一桌都是男的，上一碟菜就吃完，坐等下一碟，上菜断断续续的菜上齐，我们桌上已经多了不少空盘子，哈哈哈。😄</p>\n<h2 id=\"自我认知\"><a class=\"markdownIt-Anchor\" href=\"#自我认知\">#</a> 🤹‍♂自我认知</h2>\n<blockquote>\n<p>回顾这一年，算是重要变迁的一年，也是真正走向社会的一年。</p>\n</blockquote>\n<p>随着年纪的增长，对未来的忧虑更重了。得想办法赚更多的钱，不论是工作上、副业还是其他什么的，总之，感觉得想点办法去做。</p>\n<p>同学朋友们，有考入编制的、有进入银行的、有当老师的，似乎毕业这一年多时间里大家都找到了自己为之奋斗一生的赛道，我想自己应该也要有所成就了。未来半年里，也就是 <code>2023年7月时</code> 希望自己可以有大的提升和改变。</p>\n<h2 id=\"新年祈愿\"><a class=\"markdownIt-Anchor\" href=\"#新年祈愿\">#</a> 🚄新年祈愿</h2>\n<p>新的一年里，希望自己可以发挥自己所有的潜力，看看自己能走多远；也希望自己，新的一年平安喜乐。</p>\n<ol>\n<li>上架一个游戏（Steam 平台）</li>\n<li>完善 <code>FanlFrameWork</code>  的开发</li>\n<li>读几本书</li>\n<li>年收入提升</li>\n</ol>\n",
            "tags": [
                "生活",
                "年终总结"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/27/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "url": "https://www.fasty97.top/2022/12/27/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "title": "2023年终总结",
            "date_published": "2022-12-27T01:25:12.000Z",
            "content_html": "<p>一句话即可概括：</p>\n<blockquote>\n<p>我在人间凑数的日子 —— 2023</p>\n</blockquote>\n<hr>\n<h3 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h3>\n<p>更多的生活属于平静（摆烂），我只记得公司年会上 老板说着什么经济形式不好，竞争对手死了一半，合作伙伴也死了不少；说罢便提到今年 年终奖缓发的消息。</p>\n<p>2023 了，又过去了一年，每每这种时候看看自己的 qq 资料卡看到自己年龄又增长一岁，感觉有些恍惚。仔细琢磨，就会感觉头开始疼了，仿佛这是什么不可思考的禁忌法则，无形之中有什么因果规则之力。</p>\n<p>“有一间住所、一台电脑、水电网、有吃的，好像我可以在这种地方住一辈子”，有时我不禁这么想。</p>\n<h3 id=\"见闻\"><a class=\"markdownIt-Anchor\" href=\"#见闻\">#</a> 见闻</h3>\n<p>寒假时候，妹妹从哈尔滨会昆明来，住在我这里；有幸她拿到了一个区检察院的实习机会。因为工作地点离家很远，我建议他就近找个住处。每周天去晚上回住处，每周五下午回到我这来，每次回来她总有一些青旅的见闻给我分享。</p>\n<p>“北上广的画家，厌倦了大城市的钢铁森林，放弃高薪工作；选择到大理居家做自由画家。” “我看到那些高楼大厦就害怕” 青年女画家这样说道。在上海工作 10 年，来到大理，租下一间小屋，在院子里种满花；好好生活好好画画。</p>\n<p>“我也是大学毕业” 一个中年妇女说道，“直到现在做保姆”。我忍不住插嘴，大学生也有做保姆的吗？而且在我印象中青旅应该年轻的刺头们选择的居所。妹妹说，青旅大部分是年轻人，但也有一些年纪稍大的人。大家每天都要煮火锅，一起做饭、一起唱歌什么的；  “选择住青旅的人都是比较活络的人吧”</p>\n<h3 id=\"接亲\"><a class=\"markdownIt-Anchor\" href=\"#接亲\">#</a> 接亲</h3>\n<p>今年算得上重要的一件事，我发小也是我表弟结婚了。我特意周五买了晚上的车票，准备一大早随车队去接亲。接亲的位置在大山里面，沿着山路环绕而上，翻过去再环绕而下就到了。在我们几个发小兄弟中，如我们所料，第一个结婚的是我表弟。<ins>过程省略一万字…</ins></p>\n<p>通过这次活动，感觉自己已经不再是小孩子了，未来的路要站在一个成年人的角度去思考；更理智、更成熟的面对问题。</p>\n<h3 id=\"旅行\"><a class=\"markdownIt-Anchor\" href=\"#旅行\">#</a> 旅行</h3>\n<p>一直打算的旅行计划算是完美实施了，大理 —— 保山 —— 芒市 —— 腾冲 —— 保山 —— 大理。</p>\n<iframe height=600 src=\"https://pic.fasty97.top/Video/VID_20240212_183646.mp4\"></iframe>\n",
            "tags": [
                "生活",
                "年终总结"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E8%AE%A9%E7%94%BB%E9%9D%A2%E5%8A%A8%E8%B5%B7%E6%9D%A5/",
            "url": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E8%AE%A9%E7%94%BB%E9%9D%A2%E5%8A%A8%E8%B5%B7%E6%9D%A5/",
            "title": "Unity入门精要（十一）让画面动起来",
            "date_published": "2022-12-26T03:34:17.000Z",
            "content_html": "<h2 id=\"unityshader的内置时间变量\"><a class=\"markdownIt-Anchor\" href=\"#unityshader的内置时间变量\">#</a> UnityShader 的内置时间变量</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212261137373.png\" alt=\"image-20221226113747301\"></p>\n<h2 id=\"序列帧动画\"><a class=\"markdownIt-Anchor\" href=\"#序列帧动画\">#</a> 序列帧动画</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212261519510.gif\" alt=\"\"></p>\n<blockquote>\n<p>通过使用 Time 实现循环的特效播放。</p>\n</blockquote>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"Unlit/Exp2Shader\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Properties</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">_Color</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Color Tint\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">_MainTex</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Texture\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>D<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">_HorizontalAmount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal Amount\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">_VerticalAmount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical Amount\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">_Speed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Speed\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    SubShader</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        Tags</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"Queue\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span> <span class=\"token string\">\"IgnoreProjector\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span> <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Pass</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">vertex vert</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">fragment frag</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// make fog work</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">multi_compile_fog</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnityCG.cginc\"</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">appdata</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                float4 vertex <span class=\"token operator\">:</span> POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                float2 uv <span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">v2f</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                float2 uv <span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                float4 vertex <span class=\"token operator\">:</span> SV_POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">sampler2D</span> _MainTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            float4 _MainTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            v2f <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span>appdata v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                v2f o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                o<span class=\"token punctuation\">.</span>vertex <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">=</span> <span class=\"token function\">TRANSFORM_TEX</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">,</span> _MainTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">float</span> _Speed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">float</span> _HorizontalAmount<span class=\"token punctuation\">,</span> _VerticalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            fixed4 _Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span>v2f i<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> SV_Target</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token keyword\">float</span> time <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>_Time<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _Speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">float</span> row <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> _HorizontalAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">float</span> column <span class=\"token operator\">=</span> time <span class=\"token operator\">-</span> row <span class=\"token operator\">*</span> _VerticalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                half2 uv <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">+</span> <span class=\"token function\">half2</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                uv<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/=</span> _HorizontalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                uv<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/=</span> _VerticalAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                fixed4 c <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_MainTex<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                c<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*=</span> _Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    Fallback <span class=\"token string\">\"Transparent/VertexLit\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"无限滚动背景\"><a class=\"markdownIt-Anchor\" href=\"#无限滚动背景\">#</a> 无限滚动背景</h2>\n<p>很多无限滚动的背景也是使用了纹理动画。纹理资源： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuZ2FtZWFydC5vcmcv\">OpenGameArt.org</span></p>\n<blockquote>\n<p>注意： uv 现已经不存在 zw 值。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"Unlit/BackGroundShader\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Properties</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        _MainTex <span class=\"token punctuation\">(</span><span class=\"token string\">\"Texture\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">_DetailTex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2nd Layer (RGB)\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">2D</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">_ScrollX</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Base Layer Scrool Speed\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">_Scroll2X</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2nd Layer Scroll Speed\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">_Multiplier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Layer Multiplier\"</span><span class=\"token punctuation\">,</span>Float<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    SubShader</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        Tags</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Opaque\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        LOD <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Pass</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> vertex vert</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> fragment frag</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// make fog work</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> multi_compile_fog</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token preprocessor property\">#include </span><span class=\"token string\">\"UnityCG.cginc\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">appdata</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token class-name\">float4</span> vertex <span class=\"token punctuation\">:</span> POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token class-name\">float2</span> uv <span class=\"token punctuation\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">v2f</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token class-name\">float2</span> uv <span class=\"token punctuation\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token function\">UNITY_FOG_COORDS</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token class-name\">float4</span> vertex <span class=\"token punctuation\">:</span> SV_POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token class-name\">sampler2D</span> _MainTex<span class=\"token punctuation\">,</span> _DetailTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">float4</span> _MainTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _ScrollX<span class=\"token punctuation\">,</span> _Scroll2X<span class=\"token punctuation\">,</span> _Multiplier<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token class-name\">float4</span> _DetailTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token return-type class-name\">v2f</span> <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">appdata</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\">v2f</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                o<span class=\"token punctuation\">.</span>vertex <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">=</span> <span class=\"token function\">TRANSFORM_TEX</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">,</span> _MainTex<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">frac</span><span class=\"token punctuation\">(</span><span class=\"token function\">float2</span><span class=\"token punctuation\">(</span>_ScrollX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _Time<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>zw <span class=\"token operator\">=</span> <span class=\"token function\">TRANSFORM_TEX</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">,</span> _DetailTex<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">frac</span><span class=\"token punctuation\">(</span><span class=\"token function\">float2</span><span class=\"token punctuation\">(</span>_Scroll2X<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _Time<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token function\">UNITY_TRANSFER_FOG</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token return-type class-name\">fixed4</span> <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">v2f</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> SV_Target</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token class-name\">fixed4</span> firstLayer <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_MainTex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token class-name\">fixed4</span> secondLayer <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_DetailTex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">.</span>zw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token class-name\">fixed4</span> c <span class=\"token operator\">=</span> <span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span>firstLayer<span class=\"token punctuation\">,</span> secondLayer<span class=\"token punctuation\">,</span> secondLayer<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                c<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*=</span> _Multiplier<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    Fallback <span class=\"token string\">\"VertexLit\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"顶点动画\"><a class=\"markdownIt-Anchor\" href=\"#顶点动画\">#</a> 顶点动画</h2>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%83%EF%BC%89%20%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/",
            "url": "https://www.fasty97.top/2022/12/26/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%83%EF%BC%89%20%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/",
            "title": "Unity入门精要（七）基础纹理",
            "date_published": "2022-12-26T03:13:00.000Z",
            "content_html": "<h1 id=\"unity-shader-第七章-基础纹理\"><a class=\"markdownIt-Anchor\" href=\"#unity-shader-第七章-基础纹理\">#</a> Unity Shader 第七章 基础纹理</h1>\n<blockquote>\n<p>纹理 —— 使用一张图片来控制模型的外观，使用纹理映射技术把一张图黏在模型表面，逐纹素地控制模型的颜色。</p>\n</blockquote>\n<p>通常使用纹理映射坐标对应纹理中的 2D 坐标，这被称为是 UV 坐标。</p>\n<p>顶点 UV 坐标的范围通常被归一到 [0,1] 范围内。</p>\n<p>DirectX 中原点位于左上角，OpenGL 中原点位于左下角。</p>\n<p Unity=\"\" 使用的是OpenGL的坐标，即原点位于左下角=\"\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416024.png\" alt=\"image-20220824104021468\"></p>\n<h2 id=\"纹理采样\"><a class=\"markdownIt-Anchor\" href=\"#纹理采样\">#</a> 纹理采样</h2>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Upgrade NOTE: replaced 'mul(UNITY_MATRIX_MVP,*)' with 'UnityObjectToClipPos(*)'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Shader <span class=\"token string\">\"Book/SingleTexture\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Properties</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">_Color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Color Tint\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">_MainTex</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Texture\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>D<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//        反射</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">_Specular</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Specular\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//        高光</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">_Gloss</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Gloss\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    SubShader</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        Tags</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Opaque\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token string\">\"LightMode\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"ForwardBase\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        LOD <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Pass</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">vertex vert</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">fragment frag</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\">// make fog work</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">multi_compile_fog</span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnityCG.cginc\"</span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Lighting.cginc\"</span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 声明对应变量</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            fixed4 _Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">sampler2D</span> _MainTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            float4 _MainTex_ST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            fixed4 _Specular<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">float</span> _Gloss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">// 输入</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">a2v</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                float4 vertex<span class=\"token operator\">:</span> POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                float3 normal<span class=\"token operator\">:</span> NORMAL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                float4 texcoord<span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">struct</span> <span class=\"token class-name\">v2f</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                float4 pos<span class=\"token operator\">:</span> SV_POSITION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                float3 worldNormal<span class=\"token operator\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                float3 worldPos<span class=\"token operator\">:</span> TEXCOORD1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                float2 uv<span class=\"token operator\">:</span> TEXCOORD2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token comment\">// 进行顶点着色器</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            v2f <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span>a2v v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                v2f o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                o<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                o<span class=\"token punctuation\">.</span>worldNormal <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToWorldNormal</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                o<span class=\"token punctuation\">.</span>worldPos <span class=\"token operator\">=</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>unity_ObjectToWorld<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token comment\">// 计算 Thing And Offset</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                o<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span>texcoord<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">*</span> _MainTex_ST<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">+</span> _MainTex_ST<span class=\"token punctuation\">.</span>zw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token comment\">// 可使用 Unity 内置宏</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token comment\">// o.uv = TRANSFORM_TEX(v.texcoord, _MainTex);</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token comment\">// 进行片元着色器</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span>v2f i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> SV_Target</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token comment\">// 光线方向</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                fixed3 worldNormal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>worldNormal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                fixed3 worldLightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">UnityWorldSpaceLightDir</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>worldPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token comment\">// 纹理采样</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                fixed3 albedo <span class=\"token operator\">=</span> <span class=\"token function\">tex2D</span><span class=\"token punctuation\">(</span>_MainTex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> _Color<span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token comment\">// 环境光</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                fixed3 ambient <span class=\"token operator\">=</span> UNITY_LIGHTMODEL_AMBIENT<span class=\"token punctuation\">.</span>xyz <span class=\"token operator\">*</span> albedo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                <span class=\"token comment\">// 漫反射 - 半兰伯特模型</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                fixed3 diffuse <span class=\"token operator\">=</span> _LightColor0<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> albedo <span class=\"token operator\">*</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>worldNormal<span class=\"token punctuation\">,</span> worldLightDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                fixed3 viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">UnityWorldSpaceViewDir</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>worldPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                fixed3 halfDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>worldLightDir <span class=\"token operator\">+</span> viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token comment\">// 高光反射</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                fixed3 specular <span class=\"token operator\">=</span> _LightColor0<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> _Specular<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>worldNormal<span class=\"token punctuation\">,</span> halfDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _Gloss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">fixed4</span><span class=\"token punctuation\">(</span>ambient <span class=\"token operator\">+</span> diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    Fallback <span class=\"token string\">\"Specular\"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416080.png\" alt=\"image-20220824164058414\"></p>\n<p>值得注意的是：</p>\n<blockquote>\n<p>如果导入的纹理大小超过了 Max Texture Size 中的设置值，那么 Unity 将会把该纹理缩放为这个最大分辨率。理想情况下，导入的纹理可以是非正方形的，但长宽的大小应该是 2 的幂，例如 2、4、8、16、32、64 等。如果使用了非 2 的幂大小（Non Power of Two, NPOT）的纹理，那么这些纹理往往会占用更多的内存空间，而且 GPU 读取该纹理的速度也会有所下降。有一些平台甚至不支持这种 NPOT 纹理，这时 Unity 在内部会把它缩放成最近的 2 的幂大小。出于性能和空间的考虑，我们应该尽量使用 2 的幂大小的纹理。</p>\n</blockquote>\n<h2 id=\"凹凸映射\"><a class=\"markdownIt-Anchor\" href=\"#凹凸映射\">#</a> 凹凸映射</h2>\n<p>纹理的一种应用是凹凸映射（使用一张纹理来修改模型表面的法线，以便为模型提供更多的细节。）——++ 法线贴图 ++。</p>\n<p>有以下两种映射方式【高度纹理，法线纹理】：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416788.png\" alt=\"image-20220830094021154\"></p>\n<h3 id=\"高度纹理\"><a class=\"markdownIt-Anchor\" href=\"#高度纹理\">#</a> 高度纹理</h3>\n<p>存储颜色强度值来表示海拔高度，颜色越深表面越向外凸起，颜色越钱表面越向内凹陷。</p>\n<p>优点：直观明显</p>\n<p>缺点：计算复杂，不能实时计算得到表面法线，消耗性能。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131416546.png\" alt=\"image-20220830094546307\"></p>\n<h3 id=\"法线纹理\"><a class=\"markdownIt-Anchor\" href=\"#法线纹理\">#</a> 法线纹理</h3>\n<p>存储表面法线方向，范围值为 [-1,1], 而像素分量范围为 [0,1]，需要进行映射。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131417006.png\" alt=\"image-20220830094820422\"></p>\n<p>在对法线纹理进行采样后，还需要对结果进行一次反映射得到法线方向：</p>\n<p><code>normal=pixel*2-1</code></p>\n<p>根据使用的坐标系分为：</p>\n<ol>\n<li>\n<p>模型空间的法线纹理</p>\n<p>因为法线方向各不相同，在对应到贴图上是会呈现出不同的颜色，不同的颜色就对应不同的法线方向。—— 直观</p>\n</li>\n<li>\n<p>切线空间的法线纹理</p>\n<p>切线空间下的法线则呈现浅蓝色</p>\n</li>\n</ol>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/12/26/%E5%85%B3%E4%BA%8ESanerFrame%E7%9A%84%E8%AE%B0%E5%BD%95/",
            "url": "https://www.fasty97.top/2022/12/26/%E5%85%B3%E4%BA%8ESanerFrame%E7%9A%84%E8%AE%B0%E5%BD%95/",
            "title": "关于SanerFrame的记录",
            "date_published": "2022-12-26T03:07:43.000Z",
            "content_html": "<h1 id=\"关于sanerframe的记录\"><a class=\"markdownIt-Anchor\" href=\"#关于sanerframe的记录\">#</a> 关于 SanerFrame 的记录</h1>\n<blockquote>\n<p>此文用于记录关于 <code>SanerFreame</code>  的一些思考。</p>\n</blockquote>\n<h2 id=\"关于ioc容器\"><a class=\"markdownIt-Anchor\" href=\"#关于ioc容器\">#</a> 关于 IOC 容器</h2>\n<blockquote>\n<p>使用 <code>this.GetModel</code>  来获取模型。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span>Type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> Instances <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span>Type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> InstanceByNames <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">/// 注册实例</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"instance\"> 要注册的实例 & lt;/param></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token generic-method\"><span class=\"token function\">Register</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Instances<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                Instances<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                Instances<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">/// 获取实例</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">T</span> <span class=\"token generic-method\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token keyword\">class</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Instances<span class=\"token punctuation\">.</span><span class=\"token function\">TryGetValue</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> retObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> retObj <span class=\"token keyword\">as</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"关于数据请求的使用\"><a class=\"markdownIt-Anchor\" href=\"#关于数据请求的使用\">#</a> 关于数据请求的使用</h2>\n<h3 id=\"模型\"><a class=\"markdownIt-Anchor\" href=\"#模型\">#</a> 模型</h3>\n<blockquote>\n<p>数据使用的模型需要继承自 <code>AbstractModel</code> , 使用 <code>this.GetModel&lt;T&gt;()</code>  取得。</p>\n</blockquote>\n<h3 id=\"命令\"><a class=\"markdownIt-Anchor\" href=\"#命令\">#</a> 命令</h3>\n<blockquote>\n<p>命令是一次请求。继承 <code>RequestCommand</code> , 重写本地和网络的方法 使用 <code>this.SendComman(RequestCommand cmmand)</code>  来执行。</p>\n</blockquote>\n",
            "tags": [
                "框架设计"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/11/18/SLATE-%E6%97%B6%E9%97%B4%E8%BD%B4%E6%8F%92%E4%BB%B6/",
            "url": "https://www.fasty97.top/2022/11/18/SLATE-%E6%97%B6%E9%97%B4%E8%BD%B4%E6%8F%92%E4%BB%B6/",
            "title": "SLATE-时间轴插件",
            "date_published": "2022-11-18T06:00:34.000Z",
            "content_html": "<blockquote>\n<p>对于 Unity 官方的 TimeLine 相必我们都很熟悉了，使用时间轴我们可以实现许多功能，这里推荐一款同样优秀的第三方 TimeLine 插件 —— <code>SLATE</code> 。</p>\n</blockquote>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211181413161.png\" alt=\"image-20221118141337920\"></p>\n<p>首先，让我们创建一个 <code>CuteScene</code> , 点击 EDIT 打开编辑窗口。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211181415502.png\" alt=\"image-20221118141536452\"></p>\n<h2 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbGF0ZS5wYXJhZG94bm90aW9uLmNvbS8=\">SLATE | Realtime Cinematic Sequencer for Unity (paradoxnotion.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGZ6eGIudG9wL3VuaXR5LXNsYXRlLXN0dWR5LWFuZC1leHRlbmRwbGFuLw==\">ParadoxNotion-Slate 学习笔记与拓展计划 | 烟雨迷离半世殇的成长之路 (lfzxb.top)</span></li>\n</ol>\n",
            "tags": [
                "TimeLine",
                "剧情编排"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/10/24/%E4%BB%8E%E7%A8%8B%E5%BA%8F%E5%91%98%E5%88%B0%E7%8B%AC%E7%AB%8B%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E8%80%85/",
            "url": "https://www.fasty97.top/2022/10/24/%E4%BB%8E%E7%A8%8B%E5%BA%8F%E5%91%98%E5%88%B0%E7%8B%AC%E7%AB%8B%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E8%80%85/",
            "title": "从程序员到独立游戏开发者",
            "date_published": "2022-10-24T02:00:14.000Z",
            "content_html": "<blockquote>\n<p>💨 每朵云都下落不明，每盏月亮都不知所踪。</p>\n</blockquote>\n<h2 id=\"按照传统程序员思维来开发游戏或许并不那么合适\"><a class=\"markdownIt-Anchor\" href=\"#按照传统程序员思维来开发游戏或许并不那么合适\">#</a> 按照传统程序员思维来开发游戏或许并不那么合适。</h2>\n<p>从大一开始接触程序设计时，老师让我们学习 <code>编程思维</code> 。</p>\n<p>所谓编程思维，也就是将一个复杂问题进行拆解，然后按部就班的去完成的能力。</p>\n<p>对于大多数程序开发来说，这种思维确实是至关重要的，可以公式化处理问题，但在需求多变的游戏开发中，很难做到公式化处理。</p>\n<h2 id=\"是否过分重视框架式设计\"><a class=\"markdownIt-Anchor\" href=\"#是否过分重视框架式设计\">#</a> 是否过分重视框架式设计</h2>\n<blockquote>\n<p><ins>过早优化是大忌，对于游戏开发来说这一点尤为明显。</ins></p>\n<p>有一些水平的程序员总是期望自己写出优雅的代码：逻辑清晰、结构稳定、高效复用。</p>\n</blockquote>\n<p>然而在实际开发时，往往我们很难一次性就处理好软件之间的结构和复杂逻辑，我们需要一边实践一边证明自己的想法是否可行，并不断修正直到自己觉得满意。</p>\n<p>有时我们为了写出 <code>完美的代码</code> 而花费许多时间和精力，也许此时看来完美的代码在反而制约了你新功能的实现，在我们没有确定需求时不要过早过度的优化程序。</p>\n<blockquote>\n<p>算法 —— 解决问题的有限步骤，我们习惯按部就班的完成任务，这显得逻辑清晰。</p>\n</blockquote>\n<p>在一开始我们就试图搭建一个完美的框架，考虑性能高效、逻辑严密，作为商业游戏这是没问题的，但作为独立游戏这往往制约了游戏的完成。</p>\n<h2 id=\"是什么在制约我们完成游戏\"><a class=\"markdownIt-Anchor\" href=\"#是什么在制约我们完成游戏\">#</a> 是什么在制约我们完成游戏</h2>\n<p>不乏能力很强的游戏开发人，并没有真正属于自己的独立游戏。<ins>是什么在制约我们完成游戏制作呢，明明我们那么热爱游戏开发.</ins></p>\n<p>从小时候到现在我都是一个相比零食更爱玩具的人，精神世界比现实世界更为富足，有很多天马行空的想法。</p>\n<h2 id=\"如何能更好的完成自己的游戏\"><a class=\"markdownIt-Anchor\" href=\"#如何能更好的完成自己的游戏\">#</a> 如何能更好的完成自己的游戏</h2>\n<p>📖 坚持去做是完成一个游戏始终要去做的事。</p>\n<ul>\n<li>找到自己的生活节奏，例如在下班后，坚持去写 2 小时的游戏并持之以恒。</li>\n<li>搭建纸面原型或者简单游戏原型对自己的想法进行校验和校正。</li>\n<li>制定 <code>TODOList</code>  让目标清晰可见。</li>\n<li>及时提供正向反馈（做视频、写心得等）</li>\n</ul>\n",
            "tags": [
                "自我认知"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/10/18/%E5%85%B3%E4%BA%8EGit%E7%9A%84%E7%AC%94%E8%AE%B0/",
            "url": "https://www.fasty97.top/2022/10/18/%E5%85%B3%E4%BA%8EGit%E7%9A%84%E7%AC%94%E8%AE%B0/",
            "title": "关于Git的笔记",
            "date_published": "2022-10-18T05:48:07.000Z",
            "content_html": "<h2 id=\"常用指令\"><a class=\"markdownIt-Anchor\" href=\"#常用指令\">#</a> 常用指令</h2>\n<table>\n<thead>\n<tr>\n<th>说明</th>\n<th>指令</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>克隆</td>\n<td>git clone xxx</td>\n<td></td>\n</tr>\n<tr>\n<td>拉取</td>\n<td>git pull</td>\n<td></td>\n</tr>\n<tr>\n<td>推送</td>\n<td>git push</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"分支指令\"><a class=\"markdownIt-Anchor\" href=\"#分支指令\">#</a> 分支指令</h2>\n<table>\n<thead>\n<tr>\n<th>说明</th>\n<th>指令</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>创建分支</td>\n<td>git branch (branchname)</td>\n<td></td>\n</tr>\n<tr>\n<td>切换分支</td>\n<td>git checkout (branchname)</td>\n<td></td>\n</tr>\n<tr>\n<td>合并分支</td>\n<td>git merge</td>\n<td>将指定分支合并到当前分支</td>\n</tr>\n<tr>\n<td>删除分支</td>\n<td>git branch -d</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "git",
                "版本管理",
                "多人协作"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/10/08/Mirror%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2022/10/08/Mirror%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "Mirror初体验",
            "date_published": "2022-10-08T08:50:30.000Z",
            "content_html": "<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 🔖快速食用</h2>\n<p>在场景中创建一个空物体，并挂载如下几个脚本。</p>\n<h3 id=\"网络管理器\"><a class=\"markdownIt-Anchor\" href=\"#网络管理器\">#</a> 网络管理器</h3>\n<blockquote>\n<p>其中，需要指定 Player Prefab, 勾选自动生成玩家可以在连接到服务器时，自动生成玩家对象。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202210191630256.png\" alt=\"image-20221010100103105\"></p>\n<h3 id=\"玩家\"><a class=\"markdownIt-Anchor\" href=\"#玩家\">#</a> 玩家</h3>\n<p>为玩家添加如下组件：</p>\n<ul>\n<li>Network Identity 表示这是一个需要进行网络同步的物体。</li>\n<li>NetWork Transform 表示可同步 Transfrom</li>\n</ul>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202210191630897.png\" alt=\"image-20221010100400624\"></p>\n<blockquote>\n<p>PS: 注意勾选认证，让玩家只能控制自己的物体</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202210191630794.png\" alt=\"image-20221010100615058\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>玩家控制脚本</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Mirror</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UniRx</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Qpublic <span class=\"token keyword\">class</span> <span class=\"token class-name\">PlayerCtr</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">NetworkBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> speed <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SyncVar</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>hook <span class=\"token operator\">=</span> <span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>OnColorChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token class-name\">Color</span> _color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token class-name\">MeshRenderer</span> _renderer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         _renderer <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isServer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             <span class=\"token function\">RpcTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> isLocalPlayer <span class=\"token operator\">&amp;&amp;</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>             <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下空格\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>             <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> color <span class=\"token operator\">=</span> _color <span class=\"token operator\">==</span> Color<span class=\"token punctuation\">.</span>white <span class=\"token punctuation\">?</span> Color<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Color<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>             <span class=\"token function\">CmdChangeColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>         <span class=\"token comment\">//move</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> isLocalPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>             <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> h <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>             <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> v <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>             <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1f</span> <span class=\"token operator\">||</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                 <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> dir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalized<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                 transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>dir <span class=\"token operator\">*</span> speed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnColorChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span> oldColor<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span> newColor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>         <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"颜色变化\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         _renderer<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> newColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Command</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CmdChangeColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span> color<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         _color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> </pre></td></tr><tr><td data-num=\"63\"></td><td><pre> </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>     <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ClientRpc</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RpcTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>         <span class=\"token comment\">// 在服务器端调用时，分别在客户端进行调用</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>         <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前客户端为：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>netId</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\">#</a> 参考</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Nha2VfQy9hcnRpY2xlL2RldGFpbHMvMTIzMTY1MTYwP3NwbT0xMDAxLjIwMTQuMzAwMS41NTAy\"> UnityMirror 学习笔记 (2)：使用 SyncVar 进行数据同步_Cake_C 的博客 - CSDN 博客</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Nha2VfQy9hcnRpY2xlL2RldGFpbHMvMTIzMTcxMTIwP3NwbT0xMDAxLjIwMTQuMzAwMS41NTAy\">UnityMirror 学习笔记 (3)：服务器与客户端间的函数调用，互发控制指令：Command，ClientRpc，TargetRpc_Cake_C 的博客 - CSDN 博客</span></li>\n</ul>\n",
            "tags": [
                "多人"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/10/01/VContainer%20%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2022/10/01/VContainer%20%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "VContainer 初体验",
            "date_published": "2022-10-01T13:51:00.000Z",
            "content_html": "<h2 id=\"ioc-控制反转\"><a class=\"markdownIt-Anchor\" href=\"#ioc-控制反转\">#</a> IOC 控制反转</h2>\n<blockquote>\n<p>IOC 提供一个对象生成容器，在我们需要取得某个对象时，不再使用 <code>New</code>  关键字进行对象生成操作，而是通过 IOC 容器内部控制来获得对象。</p>\n</blockquote>\n<p>使用这种思想方式，可以让我们无需关心对象的生成方式，只需要告诉容器我需要 xxx 对象即可，而高旭容器我需要 xxx 对象的方式就叫做 DI 依赖注入。</p>\n<h2 id=\"di依赖注入\"><a class=\"markdownIt-Anchor\" href=\"#di依赖注入\">#</a> DI 依赖注入</h2>\n<p>这种思想，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS12anF3N3Nkc2RidGl1cGYubmV0\">我是在学习.net</span> core 时发现的，一般采用 <code>特性注入</code> 或者使用 <code>构造函数注入</code> 。</p>\n<p>经过标记的字段会在该类构造时在 IOC 容器中执行构造获取对应的对象示例。</p>\n<h2 id=\"vcontainer\"><a class=\"markdownIt-Anchor\" href=\"#vcontainer\">#</a> VContainer</h2>\n<p>VContainer 是在 Unity 端使用的一种轻量级的 DI 框架，通过 GameLifeScope 划分作用域，和普通的 web 后端的 Di 框架不同的是，针对 Unity 的 Mono 特殊性，提出了 GameLifeScope 的方式，通过在 Game Object 上挂载 Scope，可以在代码中动态切换使用的实例和 Scope。并且提供了一种父子继承 Scope 方式供用户使用。</p>\n<h2 id=\"scope-作用域\"><a class=\"markdownIt-Anchor\" href=\"#scope-作用域\">#</a> Scope 作用域</h2>\n<blockquote>\n<p>作用域指函数、变量的作用范围，在 Di 中一般可以注册 singleton 单例，Trans 复例等</p>\n</blockquote>\n<p>在 netcore 中有类似下面这样的形式：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> serviceCollection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ServiceCollection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddTransient</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ILoginService<span class=\"token punctuation\">,</span> EFLoginService<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddSingleton</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ILoginService<span class=\"token punctuation\">,</span> EFLoginService<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddScoped</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ILoginService<span class=\"token punctuation\">,</span> EFLoginService<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中添加的 <code>Addxxxx</code>  就是为其添加一项注入并指定注入作用域，同时在这里进行的是一个接口的注入操作，在使用这个接口依赖时会生成一个对应的接口实现实例。</p>\n<p>在 VContainer 中的注入和以上的方式很像。</p>\n<h3 id=\"单例\"><a class=\"markdownIt-Anchor\" href=\"#单例\">#</a> 单例？</h3>\n<p>一般来说，在 Unity 中我们会继承自一个泛型单例类。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 基础单例（线程锁）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.6f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.8f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"|单例OK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    Monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Enter</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">finally</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    Monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例如继承自这个泛型单例来实现单例效果，在 Di 中我们的实例无需在外部控制单例，直接由 IOC 容器管理。</p>\n<h3 id=\"gamelifescope\"><a class=\"markdownIt-Anchor\" href=\"#gamelifescope\">#</a> GameLifeScope</h3>\n<blockquote>\n<p>为其 GameObject 添加一个继承自 <code>LifetimeScope</code>  的脚本即添加了一个 Scope。</p>\n<p>++ 游戏中至少需要有一个 Scope ++</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20221006110921.png\" alt=\"GameLifeScope\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseLifeScope</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">LifetimeScope</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IContainerBuilder</span> builder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            builder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Register</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MusicManager<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>Lifetime<span class=\"token punctuation\">.</span>Singleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            builder<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterInstance</span><span class=\"token punctuation\">(</span>GameSettingAssetMgr<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            builder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Register</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>UIManager<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>Lifetime<span class=\"token punctuation\">.</span>Singleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            builder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">RegisterEntryPoint</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameLauncher<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            builder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">RegisterEntryPoint</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameLoop<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>同时我们可以继承父级 LifeScope 来灵活选择我们的 Scope 实现。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameLiftScope</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">BaseLifeScope</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Character</span> gamePanel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IContainerBuilder</span> builder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            builder<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterComponentInNewPrefab</span><span class=\"token punctuation\">(</span>gamePanel<span class=\"token punctuation\">,</span> Lifetime<span class=\"token punctuation\">.</span>Scoped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"可注入对象\"><a class=\"markdownIt-Anchor\" href=\"#可注入对象\">#</a> 可注入对象</h2>\n<blockquote>\n<p>在上面我们描述了 Scope，使用 <code> builder.Register&lt;T&gt;</code>  进行注册。</p>\n</blockquote>\n<h3 id=\"mono\"><a class=\"markdownIt-Anchor\" href=\"#mono\">#</a> Mono</h3>\n<p>可注入 Mono 的对象，例如游戏中的 UI 等与 Mono 关系密切的对象。</p>\n<p>可将场景中的 GameObject 直接注入到容器中来使用。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20221006113633.png\" alt=\"image-20221006113633790\"></p>\n<h3 id=\"instance\"><a class=\"markdownIt-Anchor\" href=\"#instance\">#</a> Instance</h3>\n<p>可注入具体的对象实例，例如单例我们可以直接注入对象的单例，也可以在 Scope 中选择单例。</p>\n<h3 id=\"enterpoint\"><a class=\"markdownIt-Anchor\" href=\"#enterpoint\">#</a> EnterPoint</h3>\n<blockquote>\n<p><code>EnterPoint</code>  可以说是 <code>VContainer</code>  设计十分精妙的部分 —— 将 Mono 转移到普通的 C# 类中。</p>\n</blockquote>\n<p>通过 <code>builder.RegisterEntryPoint&lt;T&gt;();</code>  注入一个入口点。这些入口点能够代替 Unity 的 Start、Update、FixedUpdate 等函数。</p>\n<p>通过实现不同的 &gt; Ixxx 接口重写方法来编写原生 Unity 事件，如下例子：</p>\n<hr>\n<blockquote>\n<p>这是一个类似 Start 的实现，继承自 <code>IStartable</code>  即可，同时这里我注入了 <code>GameSettingAssetMgr</code>  和 <code>MusicManager</code>  两个对象。</p>\n<p>在游戏开始运行时，执行了打印当前游戏语言和播放 Bgm 的指令。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameLauncher</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IStartable</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Inject</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">GameSettingAssetMgr</span> _gameSettingAssetMgr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Inject</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">MusicManager</span> _musicManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">GameLauncher</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MusicManager</span> musicManager<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GameSettingAssetMgr</span> gameSettingAssetMgr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            _musicManager <span class=\"token operator\">=</span> musicManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            _gameSettingAssetMgr <span class=\"token operator\">=</span> gameSettingAssetMgr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>_gameSettingAssetMgr<span class=\"token punctuation\">.</span>lan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            _musicManager<span class=\"token punctuation\">.</span><span class=\"token function\">PlayBgm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12345SEX\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到，在我运行游戏时，根据依赖自动生成了对象并执行了相关操作。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20221006112341.png\" alt=\"image-20221006112341489\"></p>\n<blockquote>\n<p>同理我们可以，实现更多的接口来实现更多的 Unity 原生事件，将原本 Mono 脚本才能执行的内容转移到普通 Class 中。</p>\n</blockquote>\n<p>现在让我们为 GameLauncher 类实现 Update 实现。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>实现ITickable接口</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        _uiManager<span class=\"token punctuation\">.</span><span class=\"token function\">ShowPanel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GamePanel\"</span><span class=\"token punctuation\">,</span> UILayer<span class=\"token punctuation\">.</span>Mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"显示面板\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        _uiManager<span class=\"token punctuation\">.</span><span class=\"token function\">SwitchShowState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GamePanel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"切换面板显示\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/NotePad/20221006113216.gif\" alt=\"\"></p>\n<h2 id=\"在mono中使用\"><a class=\"markdownIt-Anchor\" href=\"#在mono中使用\">#</a> 在 Mono 中使用</h2>\n<blockquote>\n<p>因为 Mono 不支持构造函数，所以在 Mono 中使用时必须使用注入特性或注入方法的方式。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>builder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">RegisterComponentInHierarchy</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Character<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"注入特性\"><a class=\"markdownIt-Anchor\" href=\"#注入特性\">#</a> 注入特性</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Inject</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">MusicManager</span> _musicManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Inject</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">GameSettingAssetMgr</span> _gameSettingAssetMgr<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"注入方法\"><a class=\"markdownIt-Anchor\" href=\"#注入方法\">#</a> 注入方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">MusicManager</span> _musicManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">GameSettingAssetMgr</span> _gameSettingAssetMgr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Inject</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameSettingAssetMgr</span> gameSettingAssetMgr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MusicManager</span> musicManager<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            _gameSettingAssetMgr <span class=\"token operator\">=</span> gameSettingAssetMgr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            _musicManager <span class=\"token operator\">=</span> musicManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92Y29udGFpbmVyLmhhZGFzaGlraWNrLmpwLw==\">关于 | 虚拟容器 (hadashikick.jp)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhZGFzaGlBL1ZDb250YWluZXI=\">hadashiA/VContainer: The extra fast, minimum code size, GC-free DI (Dependency Injection) library running on Unity Game Engine. (github.com)</span></li>\n</ol>\n",
            "tags": [
                "DI",
                "IOC"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/22/UniRx%20%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2022/09/22/UniRx%20%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "UniRx 初体验",
            "date_published": "2022-09-22T03:10:50.000Z",
            "content_html": "<h1 id=\"unirx-初体验\"><a class=\"markdownIt-Anchor\" href=\"#unirx-初体验\">#</a> UniRx 初体验</h1>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209221112957.png\" alt=\"查看源图像\"></p>\n<h2 id=\"链式编程\"><a class=\"markdownIt-Anchor\" href=\"#链式编程\">#</a> 链式编程</h2>\n<blockquote>\n<p>所谓链式编程 —— 使用. . . 像是链条一样进行编程。</p>\n</blockquote>\n<p>🔖 下面是一个延迟调用的示例：</p>\n<figure class=\"highlight cs\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UniRxTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始时间：\"</span><span class=\"token operator\">+</span>Time<span class=\"token punctuation\">.</span>realtimeSinceStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      Observable<span class=\"token punctuation\">.</span><span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span>TimeSpan<span class=\"token punctuation\">.</span><span class=\"token function\">FromSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"现在时间：\"</span> <span class=\"token operator\">+</span> Time<span class=\"token punctuation\">.</span>realtimeSinceStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"ui数据绑定\"><a class=\"markdownIt-Anchor\" href=\"#ui数据绑定\">#</a> Ui 数据绑定</h2>\n<blockquote>\n<p>原版本不支持绑定 TextMeshPro</p>\n</blockquote>\n<figure class=\"highlight cs\"><figcaption data-lang=\"C#\"><span>UI数据绑定</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UniRx</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>UI</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// 数据绑定测试</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RxBingData</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Text</span> titleTex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Button</span> clBtn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">IModel</span> model<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GameData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        model<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">.</span><span class=\"token function\">SubscribeToText</span><span class=\"token punctuation\">(</span>titleTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        clBtn<span class=\"token punctuation\">.</span><span class=\"token function\">OnClickAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            model<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"以分行诉分行诉客户方\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            model<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"1111\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IModel</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token return-type class-name\">StringReactiveProperty</span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameData</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IModel</span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">StringReactiveProperty</span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringReactiveProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校长\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/202209201054684.gif\" alt=\"动画\"></p>\n<h3 id=\"绑定textmeshpro\"><a class=\"markdownIt-Anchor\" href=\"#绑定textmeshpro\">#</a> 绑定 TextMeshPro</h3>\n<blockquote>\n<p>通过扩展方法增加支持</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UnityUiExtensions</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IDisposable</span> <span class=\"token function\">SubscribeToText</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">IObservable<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextMeshProUGUI</span> text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">SubscribeWithState</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IDisposable</span> <span class=\"token generic-method\"><span class=\"token function\">SubscribeToText</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">IObservable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextMeshProUGUI</span> text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">SubscribeWithState</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/202209201113194.gif\" alt=\"动画\"></p>\n<h3 id=\"绑定scriptableobject\"><a class=\"markdownIt-Anchor\" href=\"#绑定scriptableobject\">#</a> 绑定 ScripTableObject</h3>\n<blockquote>\n<p>在此我开始思考是否可以绑定 ScripTableObject？💭</p>\n<p>结果是：YES</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>Asset设定</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameSetting</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">IAudioSetting</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">StringReactiveProperty</span> ProfileName <span class=\"token operator\">=></span> profileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">FloatReactiveProperty</span> BgmVolume <span class=\"token operator\">=></span> bgmVolume<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">StringReactiveProperty</span> profileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatReactiveProperty</span> bgmVolume<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IAudioSetting</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token return-type class-name\">StringReactiveProperty</span> ProfileName <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token return-type class-name\">FloatReactiveProperty</span>  BgmVolume <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>bing数据</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gameSetting<span class=\"token punctuation\">.</span>profileName<span class=\"token punctuation\">.</span><span class=\"token function\">SubscribeToText</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        gameSetting<span class=\"token punctuation\">.</span>bgmVolume<span class=\"token punctuation\">.</span><span class=\"token function\">SubscribeToText</span><span class=\"token punctuation\">(</span>titleTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        clBtn<span class=\"token punctuation\">.</span><span class=\"token function\">OnClickAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            gameSetting<span class=\"token punctuation\">.</span>profileName<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"clicked Data\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        Observable<span class=\"token punctuation\">.</span><span class=\"token function\">EveryUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            gameSetting<span class=\"token punctuation\">.</span>profileName<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"keyDown A\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/202209201138687.gif\" alt=\"动画\"></p>\n<center>数据实时绑定</center>\n<blockquote>\n<p>🏷通过这种方式很快捷方便的就实现了数据的绑定，同时没有污染数据接口</p>\n</blockquote>\n<h2 id=\"subject-和onnext\"><a class=\"markdownIt-Anchor\" href=\"#subject-和onnext\">#</a> Subject 和 OnNext</h2>\n<blockquote>\n<p><ins>Subject 既可以作为观察者也可以作为被观察对象</ins></p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209211032612.png\" alt=\"image-20220921103234529\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> subject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Subject<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 注册处理方式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"接收到：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">m</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 传入参数进行处理</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Subject 实现了 ISubject 接口，其中 ISubject 接口声明如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISubject<span class=\"token punctuation\">&lt;</span>TSource<span class=\"token punctuation\">,</span> TResult<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IObserver<span class=\"token punctuation\">&lt;</span>TSource<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IObservable<span class=\"token punctuation\">&lt;</span>TResult<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISubject<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ISubject<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IObserver<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IObservable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>在其中实现了 IObserver<T>接口，这是一个微软官方的观察者模式的实现接口，可参考 <code>参考资料2</code></p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>IObserver</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">System</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">/// &lt;summary > 提供用于接收基于推送的通知的机制。&lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">/// &lt;typeparam name=\"T\"> 提供通知信息的对象。&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IObserver<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">in</span> T<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary > 向观察者提供新数据。&lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"value\"> 当前通知信息。&lt;/param></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary > 通知观察者提供程序遇到错误情况。&lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"error\"> 提供有关错误的附加信息的对象。&lt;/param></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnError</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary > 通知观察者提供程序已完成发送基于推送的通知。&lt;/summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"事件的过滤和筛选\"><a class=\"markdownIt-Anchor\" href=\"#事件的过滤和筛选\">#</a> 事件的过滤和筛选</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> subject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Subject<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 注册处理方式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"接收到：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">m</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理方式二|\"</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">=></span>x<span class=\"token operator\">==</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"接收到特殊：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">m</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 传入参数进行处理</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><code>  subject.Where(x=&gt;x==&quot;你好&quot;).Subscribe(m =&gt; print($&quot;接收到特殊：&#123;m&#125;&quot;));</code>  使用 Where 操作符对输入参数进行了过滤，让其只处理特定的输入信息   😆 。</p>\n</blockquote>\n<p>📖PS: 可以定义自定义的过滤运算符来指定过滤操作。</p>\n<h2 id=\"unirx-流\"><a class=\"markdownIt-Anchor\" href=\"#unirx-流\">#</a> UniRX 流</h2>\n<p>调用 <code>OnError、OnCompleted</code>  将会终止流，并销毁流对象。（后续监听被终止）</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> subject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Subject<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 注册处理方式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"接收到：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">m</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 传入参数进行处理</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 流被终止，后续不再执行</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        subject<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"空参数\"><a class=\"markdownIt-Anchor\" href=\"#空参数\">#</a> 空参数</h3>\n<blockquote>\n<p>需要使用空参数的情况可以如下操作：</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sub <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Subject<span class=\"token punctuation\">&lt;</span>Unit<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        sub<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触发事件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        sub<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span>Unit<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<ul>\n<li>🔖对于不再使用的流要及时 <code>OnCompleted</code>  获得 <code>Dispose</code>  来释放内存以免出现空引用或内存泄漏。</li>\n<li>🔖可以使用 <code>AddTo()</code>  将流的生命周期绑定到指定对象。对象被销毁，流也会被销毁。</li>\n</ul>\n</blockquote>\n<h3 id=\"流的来源\"><a class=\"markdownIt-Anchor\" href=\"#流的来源\">#</a> 流的来源</h3>\n<blockquote>\n<p>官方提供了创建流的几种方式：</p>\n</blockquote>\n<ul>\n<li>Subject</li>\n<li>ReactiveProperty</li>\n<li>ReactiveCollection</li>\n<li>ReactiveDictionary</li>\n<li>UniRx 提供的方法</li>\n<li>UniRx.Trigger</li>\n<li>UniRx 的协程</li>\n<li>UniRx 转换后的 UGUI 事件</li>\n</ul>\n<h4 id=\"reactivecollection\"><a class=\"markdownIt-Anchor\" href=\"#reactivecollection\">#</a> ReactiveCollection</h4>\n<p>ReactiveCollection 与 ReactiveProperty 类似，<ins>它是内置了一个通知状态变化功能的 List</ins>,ReactiveCollection 可以像 List 一样使用，更棒的是，ReactiveCollection 可以用来对 List 状态的变化进行 Subscribe，所支持的状态变化订阅如下：</p>\n<ul>\n<li>添加元素时</li>\n<li>删除元素时</li>\n<li>集合数量变化时</li>\n<li>集合元素变化时</li>\n<li>元素移动时</li>\n<li>清除集合时</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ReactiveCollection<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">ObserveAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"新增元素：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">ObserveRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"删除元素：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">ObserveMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"移动元素：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">ObserveReset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"重制\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"unirx-的工厂方法\"><a class=\"markdownIt-Anchor\" href=\"#unirx-的工厂方法\">#</a> UniRx 的工厂方法</h4>\n<h5 id=\"unirxtrigger系列\"><a class=\"markdownIt-Anchor\" href=\"#unirxtrigger系列\">#</a> UniRx.Trigger 系列</h5>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnTriggerEnterAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">.</span>name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 进入触发区域\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnTriggerExitAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">.</span>name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 离开触发区域\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/202209211335230.gif\" alt=\"动画\"></p>\n<h2 id=\"在player中的应用\"><a class=\"markdownIt-Anchor\" href=\"#在player中的应用\">#</a> 在 Player 中的应用</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 间隔 2S 攻击</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">UpdateAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ThrottleFirst</span><span class=\"token punctuation\">(</span>TimeSpan<span class=\"token punctuation\">.</span><span class=\"token function\">FromSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Attack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"使用unirx设计playercontroller\"><a class=\"markdownIt-Anchor\" href=\"#使用unirx设计playercontroller\">#</a> 使用 Unirx 设计 PlayerController</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UniRx<span class=\"token punctuation\">.</span>Triggers</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UniRx</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestUniRX</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">CharacterController</span> characterController<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BoolReactiveProperty</span> isJumping <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">BoolReactiveProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        characterController <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CharacterController<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">UpdateAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>isJumping<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>magnitude <span class=\"token operator\">></span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> <span class=\"token function\">Move</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>normalized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    \t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">UpdateAsObservable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    \t    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isJumping<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">&amp;&amp;</span> characterController<span class=\"token punctuation\">.</span>isGrounded<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    \t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    \t    <span class=\"token function\">Jump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    \t    isJumping<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    \tcharacterController</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">ObserveEveryValueChanged</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>isGrounded<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x <span class=\"token operator\">&amp;&amp;</span> isJumping<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> isJumping<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    \tisJumping<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    \t<span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token function\">PlaySoundEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PlaySoundEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"播放音效\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Jump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> normalized<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"针对协程流\"><a class=\"markdownIt-Anchor\" href=\"#针对协程流\">#</a> 针对协程流</h2>\n<blockquote>\n<p>UniRx 提供一种微协程的协程实现方式，性能比原生协程更佳。</p>\n</blockquote>\n<h3 id=\"串联协程\"><a class=\"markdownIt-Anchor\" href=\"#串联协程\">#</a> 串联协程</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Observable<span class=\"token punctuation\">.</span><span class=\"token function\">FromCoroutine</span><span class=\"token punctuation\">(</span>CoroutineA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">SelectMany</span><span class=\"token punctuation\">(</span>CoroutineB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_<span class=\"token operator\">=></span>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineA 和CoroutineB 执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">CoroutineA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineA 开始\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineA 完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span>  <span class=\"token function\">CoroutineB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineB 开始\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineB 完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"并联协程汇总再处理\"><a class=\"markdownIt-Anchor\" href=\"#并联协程汇总再处理\">#</a> 并联协程汇总再处理</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Observable<span class=\"token punctuation\">.</span><span class=\"token function\">WhenAll</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            Observable<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FromCoroutine</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=></span> <span class=\"token function\">CoroutineA</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            Observable<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FromCoroutine</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">=></span> <span class=\"token function\">CoroutineB</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>xs <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token keyword\">in</span> xs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result:\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">CoroutineA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> observer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineA 开始\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        observer<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"协程A 执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A 3秒等待结束\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        observer<span class=\"token punctuation\">.</span><span class=\"token function\">OnCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">CoroutineB</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> observer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CoroutineB 开始\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        observer<span class=\"token punctuation\">.</span><span class=\"token function\">OnNext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"协程B 执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B 1秒等待结束\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        observer<span class=\"token punctuation\">.</span><span class=\"token function\">OnCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"其他使用\"><a class=\"markdownIt-Anchor\" href=\"#其他使用\">#</a> 其他使用</h2>\n<h3 id=\"延迟和定时\"><a class=\"markdownIt-Anchor\" href=\"#延迟和定时\">#</a> 延迟和定时</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 延迟执行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span>TimeSpan<span class=\"token punctuation\">.</span><span class=\"token function\">FromSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 循环执行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">Interval</span><span class=\"token punctuation\">(</span>TimeSpan<span class=\"token punctuation\">.</span><span class=\"token function\">FromSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Subscribe</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"个人总结\"><a class=\"markdownIt-Anchor\" href=\"#个人总结\">#</a> 个人总结</h2>\n<blockquote>\n<p><code>unirx</code>  提供了一种响应式的流编程模式，我觉得 UniRx 最强之处是以下几点：</p>\n<ul>\n<li>万事万物皆可以为流</li>\n<li>提供一种微协程方式，线程回溯</li>\n<li>观察者模式 —— 数据绑定和监听（可用于 UI）</li>\n<li>装饰者模式 —— 对操作和流进行灵活裁剪控制（Linq）</li>\n</ul>\n</blockquote>\n<p><ins>🔖 UniRx 是非常优秀的 Unity 框架！在之后我会在项目中尝试去使用它。</ins></p>\n<h2 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5yb25wYWQuY29tL2RvY3MvdGluYXgvdW5pcnhfbGVhcm5fMS5odG1s\">UniRx 入门系列一・开发文档集合 (ronpad.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL2RvdG5ldC9hcGkvc3lzdGVtLmlvYnNlcnZlci0xP3ZpZXc9bmV0LTYuMA==\">IObserver 接口 (System) | Microsoft Learn</span></li>\n</ol>\n",
            "tags": [
                "ui",
                "链式编程",
                "响应式编程",
                "观察者模式",
                "异步"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/21/Unity2D-%E5%A4%9A%E8%BE%B9%E5%BD%A2%E6%A3%80%E6%B5%8B/",
            "url": "https://www.fasty97.top/2022/09/21/Unity2D-%E5%A4%9A%E8%BE%B9%E5%BD%A2%E6%A3%80%E6%B5%8B/",
            "title": "Unity2D-UGUI多边形检测",
            "date_published": "2022-09-21T01:26:45.000Z",
            "content_html": "<h2 id=\"polygoncollider2d\"><a class=\"markdownIt-Anchor\" href=\"#polygoncollider2d\">#</a> PolygonCollider2D</h2>\n<p>PolygonCollider2D 是 Unity 用于多边形检测的组件，可以进行不规则 UI、2d 对象的射线检测。</p>\n<p>为 UI 对象添加如下脚本：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomImage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Image</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PolygonCollider2D</span> _polygon<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">PolygonCollider2D</span> Polygon</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_polygon <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                _polygon <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>PolygonCollider2D<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> _polygon<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsRaycastLocationValid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector2</span> screenPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Camera</span> eventCamera<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Vector3</span> point<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        RectTransformUtility<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenPointToWorldPointInRectangle</span><span class=\"token punctuation\">(</span>rectTransform<span class=\"token punctuation\">,</span> screenPoint<span class=\"token punctuation\">,</span> eventCamera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> Polygon<span class=\"token punctuation\">.</span><span class=\"token function\">OverlapPoint</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>并将 Button 组件的 source 设置为上面的脚本即可。</p>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RlbmdzaHVuaGFvL2FydGljbGUvZGV0YWlscy8xMDMwMzIxNDc=\"> Unity UGUI 学习系列 (二) ------ PolygonCollider2D 实现不规则碰撞范围_千喜的博客 - CSDN 博客</span></li>\n</ol>\n",
            "tags": [
                "ui",
                "不规则检测"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/20/Unity%20UI%E5%90%88%E6%89%B9/",
            "url": "https://www.fasty97.top/2022/09/20/Unity%20UI%E5%90%88%E6%89%B9/",
            "title": "Unity Ui 合批学习",
            "date_published": "2022-09-20T13:15:09.000Z",
            "content_html": "<h1 id=\"unity-ui-合批学习\"><a class=\"markdownIt-Anchor\" href=\"#unity-ui-合批学习\">#</a> Unity Ui 合批学习</h1>\n<h2 id=\"stats-统计面板\"><a class=\"markdownIt-Anchor\" href=\"#stats-统计面板\">#</a> Stats 统计面板</h2>\n<blockquote>\n<p>stats 面板可以展示摄像机范围内，所有游戏对象元素的顶点、面片、批处理次数、CPU 耗时等。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209191011750.png\" alt=\"image-20220919101137617\"></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tris</td>\n<td>三角形面数</td>\n<td></td>\n</tr>\n<tr>\n<td>verts</td>\n<td>顶点数</td>\n<td></td>\n</tr>\n<tr>\n<td>Batches</td>\n<td>批处理个数</td>\n<td></td>\n</tr>\n<tr>\n<td>Saved By batching</td>\n<td>批处理被合并后的批处理个数</td>\n<td>实际执行的批处理个数 Draw Call</td>\n</tr>\n<tr>\n<td>CPU</td>\n<td>cpu 执行耗时</td>\n<td></td>\n</tr>\n<tr>\n<td>FPS</td>\n<td>时间段执行次数</td>\n<td>流畅度</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"天空盒子\"><a class=\"markdownIt-Anchor\" href=\"#天空盒子\">#</a> 天空盒子</h3>\n<blockquote>\n<p>新建一个场景发现，有 1.7k 的三角和 5k 的顶点。</p>\n<p>++ 这些顶点和三角面其实来源于天空盒，天空盒也是一个模型。 ++</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209191019934.png\" alt=\"image-20220919101907862\"></p>\n<p>修改为适用纯色背景：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211281448056.png\" alt=\"image-20221128144803967\"></p>\n<p>可以看到此时，降低到了 2 个三角面和 4 个顶点。如下图所示的分割情况.</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211281449253.png\" alt=\"image-20221128144922221\"></p>\n<h2 id=\"批处理\"><a class=\"markdownIt-Anchor\" href=\"#批处理\">#</a> 批处理</h2>\n<blockquote>\n<p>我们最常看到的优化技术大概就是批处理了。批处理的实现原理就是为了减少每一帧需要的 draw call 数目。为了把一个对象渲染到屏幕上，CPU 需要检查哪些光源影响了该物体，绑定 Shader 被设置它的参数，再把渲染纹理发送给 GPU。当场景中包含了大量对象时，这些操作就会非常耗时。一个极端的例子是， <code>如果我们需要渲染一千个三角形，把它们按一千个单独的网格进行渲染所花费的时间要远远大于渲染一个包含了一千个三角形的网格。在这两种情况下，GPU的性能消耗其实并没有多大的区别，但CPU的draw call数目就会成为性能瓶颈。</code> 因此，批处理的思想很简单，就是在每次面对 draw call 时尽可能多地处理多个物体。<br>\n使用同一个材质的物体可以一起处理。对于使用同一个材质的物体，它们之间的不同仅仅在于顶点数据的差别。我们可以把这些顶点数据合并在一起，再一起发送给 GPU，就可以完成一次批处理。</p>\n</blockquote>\n<h3 id=\"batches和saved-by-batching\"><a class=\"markdownIt-Anchor\" href=\"#batches和saved-by-batching\">#</a> Batches 和 Saved by batching</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211281518976.png\" alt=\"image-20221128151826942\"></p>\n<ul>\n<li>Batches 表示批处理次数</li>\n<li>Saved byBatching 表示节省的批处理次数</li>\n</ul>\n<h3 id=\"动态批处理和静态批处理\"><a class=\"markdownIt-Anchor\" href=\"#动态批处理和静态批处理\">#</a> 动态批处理和静态批处理</h3>\n<p>将物体标记为 <code>Static</code>  可以大幅优化批处理。—— 静态批处理</p>\n<h2 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ol>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzI1NDE1MDk1L2FydGljbGUvZGV0YWlscy8xMTIzODg2Mzg=\">Unity3D UGUI 系列之合批_WangShade 的博客 - CSDN 博客_ugui 合批</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzI1NDE1MDk1L2FydGljbGUvZGV0YWlscy8xMDQzODM3Mzg=\">Unity3D 客户端项目优化总结之 Stats 统计面板_WangShade 的博客 - CSDN 博客</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzI1NDE1MDk1L2FydGljbGUvZGV0YWlscy8xMDQ0MTk1NzE=\">Unity3D 客户端项目优化总结之静态批处理 Static Batching_WangShade 的博客 - CSDN 博客</span></p>\n</li>\n</ol>\n",
            "tags": [
                "Shader",
                "ui",
                "性能优化"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%EF%BC%89%E9%AB%98%E7%BA%A7%E7%BA%B9%E7%90%86/",
            "url": "https://www.fasty97.top/2022/09/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%8D%81%EF%BC%89%E9%AB%98%E7%BA%A7%E7%BA%B9%E7%90%86/",
            "title": "Unity入门精要（十）高级纹理",
            "date_published": "2022-09-20T13:14:05.000Z",
            "content_html": "<h1 id=\"高级纹理\"><a class=\"markdownIt-Anchor\" href=\"#高级纹理\">#</a> 高级纹理</h1>\n<ul>\n<li>基础纹理：法线纹理、渐变纹理、遮罩纹理等。</li>\n<li>高级纹理：CubeMap、Render Texture、Procedure Texture</li>\n</ul>\n<h2 id=\"cubemap立方体纹理\"><a class=\"markdownIt-Anchor\" href=\"#cubemap立方体纹理\">#</a> CubeMap 立方体纹理</h2>\n<blockquote>\n<p>在图形学中，立方体纹理是环境映射的一种实现方法。</p>\n</blockquote>\n<img data-src=\"http://pic.fasty97.top/NotePad/202209131407838.png\" alt=\"image-20220913140753789\" style=\"zoom:50%;\" />\n<center>立方体纹理采样</center>\n<p>立方体纹理常常用于天空盒、环境映射。</p>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/08/%E6%8F%92%E4%BB%B6-TureShadow/",
            "url": "https://www.fasty97.top/2022/09/08/%E6%8F%92%E4%BB%B6-TureShadow/",
            "title": "插件-TureShadow",
            "date_published": "2022-09-08T11:57:59.000Z",
            "content_html": "<blockquote>\n<p><code>TureShadow</code>  和名称一样 —— 真阴影</p>\n<p>其作用就是为图像、文字添加阴影效果，通常我们使用 Ps 之类的软件为其添加阴影，现在使用这个插件就可以自动动态的实现阴影。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220908195829.gif\" alt=\"\"></p>\n<blockquote>\n<p>添加 TureShadow 脚本</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220908195929.png\" alt=\"image-20220908195929046\"></p>\n",
            "tags": [
                "Unity插件"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/09/04/%E4%B8%8B%E7%8F%AD%E5%90%8E%E5%BC%80%E5%A7%8B%E6%96%B0%E7%9A%84%E4%B8%80%E5%A4%A9/",
            "url": "https://www.fasty97.top/2022/09/04/%E4%B8%8B%E7%8F%AD%E5%90%8E%E5%BC%80%E5%A7%8B%E6%96%B0%E7%9A%84%E4%B8%80%E5%A4%A9/",
            "title": "下班后开始新的一天",
            "date_published": "2022-09-04T03:39:43.000Z",
            "content_html": "<blockquote>\n<p>最近，我在微信读书上看到可这本书，感觉正是处在我这个阶段所需要的，几个问题深深的抓住了我。</p>\n</blockquote>\n<ul>\n<li>晚上还有 4 个小时，缺在苦苦等待周末</li>\n<li>光靠工资，可能财富自由吗</li>\n<li>辞职之后，就能做想做的事情吗</li>\n<li>一辈子只做工作这一件事，就能感到幸福吗？</li>\n</ul>\n<blockquote>\n<p><ins>要把生活过得幸福又笃定～</ins></p>\n</blockquote>\n<p>不论处在什么样的生活环境下，我们都要笃定的去生活，不必让自己成为某一个行业的顶尖或者是专家，而是持续去做自己想做的，能让自己感到幸福的事情，并为此付出巨大努力。</p>\n",
            "tags": [
                "自我认知",
                "人生意义"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/08/31/MRTK%20%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/",
            "url": "https://www.fasty97.top/2022/08/31/MRTK%20%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/",
            "title": "MRTK开发记录",
            "date_published": "2022-08-31T05:12:15.000Z",
            "content_html": "<h1 id=\"mrtk-开发记录\"><a class=\"markdownIt-Anchor\" href=\"#mrtk-开发记录\">#</a> MRTK 开发记录</h1>\n<p>MRTK 是微软官方推出的针对 MR ( <code>混合现实</code> ) 开发的一套工具集。</p>\n<p>同时官方提供了一个 MRFT 工具进行相关工具包的管理。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311312682.png\" alt=\"image-20220812095331431\"></p>\n<p>MRTK 的体系架构：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313036.png\" alt=\"image-20220815105452428\"></p>\n<h2 id=\"mrft\"><a class=\"markdownIt-Anchor\" href=\"#mrft\">#</a> MRFT</h2>\n<p>在选定一个 Unity 项目之后可以使用此工具导入相关的工具。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313494.png\" alt=\"image-20220812095525069\"></p>\n<blockquote>\n<p>使用此工具其实是通过修改 Unity 的包管理器中的 Json 来管理</p>\n</blockquote>\n<p>我们至少需要安装:</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313477.png\" alt=\"image-20220812104205094\"></p>\n<p>在 Unity2021.x 之后版本我们官方推荐使用 <code>OpenXR</code>  工具来管理。</p>\n<blockquote>\n<p>😄当然我们可以选择性的使用。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313228.png\" alt=\"image-20220812104327280\"></p>\n<h2 id=\"unity设置\"><a class=\"markdownIt-Anchor\" href=\"#unity设置\">#</a> Unity 设置</h2>\n<p><code>Unity版本:2020.3.8f1</code></p>\n<blockquote>\n<p>导入 Unity 项目中后，可以看到如下提示。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313899.png\" alt=\"image-20220812103958699\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313019.png\" alt=\"image-20220812165915460\"></p>\n<p>同时我们需要做如下设置：</p>\n<p>切换平台到通用平台：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313007.png\" alt=\"image-20220812104526170\"></p>\n<p>依据导入的选择设置 XR 相关设置：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313869.png\" alt=\"image-20220812104933901\"></p>\n<blockquote>\n<p>我这里没有使用 OPen XR 所以没有勾选支持。</p>\n</blockquote>\n<p>可以导入相关的 example 来查看示例：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313331.png\" alt=\"image-20220812111136533\"></p>\n<blockquote>\n<p>使用上下左右移动视角。鼠标右键按住旋转视角。</p>\n<p>鼠标左键点击。</p>\n</blockquote>\n<p>可以在这里打开相关的打包工具：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313346.png\" alt=\"image-20220812110738654\"></p>\n<p>可以看到如下所示的打包工具：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313426.png\" alt=\"image-20220812110816035\"></p>\n<p>默认是打包生成 VS 项目：</p>\n<p>生成的项目是一个使用 c++ 的 Windows UWP 项目。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313535.png\" alt=\"image-20220812110949329\"></p>\n<p>在设置项目中可以设置要获取的权限。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311313135.png\" alt=\"image-20220812113114132\"></p>\n<blockquote>\n<p>PS: 😿打包的时候务必将画质调到最低，模拟器性能极差。</p>\n</blockquote>\n<h2 id=\"安装hololens2模拟器\"><a class=\"markdownIt-Anchor\" href=\"#安装hololens2模拟器\">#</a> 安装 HoloLens2 模拟器</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L2RldmVsb3AvYWR2YW5jZWQtY29uY2VwdHMvdXNpbmctdGhlLWhvbG9sZW5zLWVtdWxhdG9yI2luc3RhbGxpbmctdGhlLWhvbG9sZW5zLWVtdWxhdG9y\">使用 HoloLens 仿真器 - Mixed Reality | Microsoft Docs</span></p>\n<blockquote>\n<p>在使用模拟器之前，还需要打开 Hype-V</p>\n</blockquote>\n<p>安装好之后，会在 Vs 中看到：<img data-src=\"http://pic.fasty97.top/NotePad/202208311313970.png\" alt=\"image-20220812111306982\"></p>\n<p>选择到此设备后启动项目：</p>\n<p>弹出一个黑框：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314514.png\" alt=\"image-20220812111414847\"></p>\n<p>等待模拟器启动.</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314965.png\" alt=\"image-20220812113600735\"></p>\n<p>按照公司的电脑 i5-8400 32g 1060 的配置，在模拟器下运行 MRTK 的示例场景都是困难的，一打开 CPU 马上占用 100%😢。</p>\n<blockquote>\n<p>后续我自建了一个场景只放了一个 Cube，将所有质量拉到低之后勉强可以运行，还好可以在 Unity 下流畅运行。</p>\n</blockquote>\n<h2 id=\"创建一个新场景\"><a class=\"markdownIt-Anchor\" href=\"#创建一个新场景\">#</a> 创建一个新场景</h2>\n<blockquote>\n<p>MR 场景和我们通常的场景不同，需要特点的摄像机和移动方式。</p>\n<p>MRTK 已经为我们准备好了这些。</p>\n</blockquote>\n<p>创建一个新场景，从选项卡选择 Add to…</p>\n<p>发现左侧面板为我们增加了 3 个对象：</p>\n<ul>\n<li>ToolKit</li>\n<li>MR 玩家空间 - 摄像机</li>\n<li>MR 屏幕内容</li>\n</ul>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314233.png\" alt=\"image-20220815100722745\"></p>\n<p>此时运行场景：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314636.gif\" alt=\"\"></p>\n<blockquote>\n<p>可以看到鼠标变成一个小店，而且会有一个能量条类似的东西用于描述当前的程序性能。</p>\n</blockquote>\n<h3 id=\"mixedrealitytoolkit\"><a class=\"markdownIt-Anchor\" href=\"#mixedrealitytoolkit\">#</a> MixedRealityToolkit</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvY29uZmlndXJhdGlvbi9taXhlZC1yZWFsaXR5LWNvbmZpZ3VyYXRpb24tZ3VpZGU/dmlldz1tcnRrdW5pdHktMjAyMi0wNQ==\">MRTK2 配置文件配置指南 - MRTK 2 | Microsoft Docs</span></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314143.png\" alt=\"image-20220815101123490\"></p>\n<p>在这里我们可以对 MRTK 进行配置，点击 <code>Copy</code>  可以复制一份配置文件。</p>\n<p>通过修改这个来控制性能面板的开关：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314036.png\" alt=\"image-20220815103841608\"></p>\n<h2 id=\"ux组件\"><a class=\"markdownIt-Anchor\" href=\"#ux组件\">#</a> UX 组件</h2>\n<blockquote>\n<p>MRTK 为我们提供了一组规范的 UI 组件，通过这些组件我们可以方便的构建出常用的 UX。</p>\n</blockquote>\n<h3 id=\"边界控制\"><a class=\"markdownIt-Anchor\" href=\"#边界控制\">#</a> 边界控制</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvZmVhdHVyZXMvdXgtYnVpbGRpbmctYmxvY2tzL2JvdW5kcy1jb250cm9sP3ZpZXc9bXJ0a3VuaXR5LTIwMjItMDU=\">边界控制 - MRTK 2 | Microsoft Docs</span></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314142.png\" alt=\"Bounds control\"></p>\n<blockquote>\n<p>边界控制在我实际使用时发现了很多坑💭</p>\n<ol>\n<li>使用边界控制的物体依赖于 <code>Box Collider</code></li>\n<li>在移动了使用边界组件的物体后，其边界框的绘制位置可能出错，需要手动调用 UpdateBound 更新。</li>\n<li>需要关闭 BoxCollider 才能关闭绘制，设置 Active 有可能无法去除边界框。</li>\n</ol>\n</blockquote>\n<h3 id=\"按钮\"><a class=\"markdownIt-Anchor\" href=\"#按钮\">#</a> 按钮</h3>\n<blockquote>\n<p>有基于碰撞的按钮和基于 UI 的按钮</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314706.png\" alt=\"image-20220815140928969\"></p>\n<center>基于物理碰撞的按钮</center>\n<h4 id=\"基于ui的按钮\"><a class=\"markdownIt-Anchor\" href=\"#基于ui的按钮\">#</a> 基于 UI 的按钮</h4>\n<p>创建一个 Canvas，点击按钮转换为 MR 的 Ui Canvas</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314972.png\" alt=\"image-20220815141142436\"></p>\n<p>++ 注意在使用 UnityUi 形式的 button 时，在 HoloLens 实机上需要按下手势，不太方便操作，考虑使用 3D 按钮 ++</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301291520465.png\" alt=\"image-20230129152013229\"></p>\n<p>随后可以不使用 HoloLens 的图集，直接修改 Sprite 为自己要使用的即可：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301291521714.png\" alt=\"image-20230129152126667\"></p>\n<h4 id=\"让ui支持直接点击\"><a class=\"markdownIt-Anchor\" href=\"#让ui支持直接点击\">#</a> 让 UI 支持直接点击</h4>\n<p>需要添加如下几个组件：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301301807614.png\" alt=\"image-20230130180717373\"></p>\n<ul>\n<li>组件</li>\n</ul>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301301808469.png\" alt=\"image-20230130180802422\"></p>\n<p>注意框选的这两个部分：</p>\n<ul>\n<li>Moving Button Visual 用于进行检测按钮 —— 这里使用自己即可</li>\n<li>注意添加 Event 绑定刀 Trigger 中。</li>\n</ul>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202301301808204.png\" alt=\"image-20230130180853141\"></p>\n<h3 id=\"交互\"><a class=\"markdownIt-Anchor\" href=\"#交互\">#</a> 交互</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvZmVhdHVyZXMvdXgtYnVpbGRpbmctYmxvY2tzL2ludGVyYWN0YWJsZT92aWV3PW1ydGt1bml0eS0yMDIyLTA1\">可交互 - MRTK 2 | Microsoft Docs</span></p>\n<blockquote>\n<p>添加此脚本为对象增加可交互性，并且可设置交互时的动画或效果变化。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314216.png\" alt=\"image-20220815143319004\"></p>\n<blockquote>\n<p>设置不同行为的状态表现。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314309.png\" alt=\"image-20220815143435847\"></p>\n<h3 id=\"可操作对象\"><a class=\"markdownIt-Anchor\" href=\"#可操作对象\">#</a> 可操作对象</h3>\n<p>对于我们需要控制移动的对象为其添加脚本：</p>\n<blockquote>\n<p>设定使用单手、双手控制对象移动</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314471.png\" alt=\"image-20220815155426005\"></p>\n<blockquote>\n<p>PS: 😄我们可以通过指定 HostTransform 来设定以谁作为轴，默认以自身为轴，此时移动时是独立的。</p>\n<ol>\n<li>以父对象为 Host 则移动此对象时，所有以此父对象为 Host 的对象都会移动</li>\n<li>以外部对象为 Host 则移动此对象时，此对象将会绕着 Host.</li>\n</ol>\n</blockquote>\n<p>🎫可以添加约束管理器组件来约束行为表现。</p>\n<blockquote>\n<p>ℹ️此组件同样依赖于 <code>BoxCollider</code> 。</p>\n</blockquote>\n<h3 id=\"约束管理器\"><a class=\"markdownIt-Anchor\" href=\"#约束管理器\">#</a> 约束管理器</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvZmVhdHVyZXMvdXgtYnVpbGRpbmctYmxvY2tzL2NvbnN0cmFpbnQtbWFuYWdlcj92aWV3PW1ydGt1bml0eS0yMDIyLTA1\">约束管理器 - MRTK 2 | Microsoft Docs</span></p>\n<blockquote>\n<p>使用约束管理器，可以将一组约束组件应用于转换。 可以考虑使用附加到游戏对象的 <a href=\"https://docs.microsoft.com/zh-CN/dotnet/api/microsoft.mixedreality.toolkit.ui.transformconstraint\"> <code>TransformConstraint</code> </a> 类型的组件。 默认情况下，约束管理器将自动收集附加到游戏对象的所有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvZmVhdHVyZXMvdXgtYnVpbGRpbmctYmxvY2tzL2NvbnN0cmFpbnQtbWFuYWdlcj92aWV3PW1ydGt1bml0eS0yMDIyLTA1I3RyYW5zZm9ybS1jb25zdHJhaW50cw==\">约束组件</span>，并将其应用于已处理的转换。 但是，用户可以选择手动配置应用的约束列表，只允许应用附加约束的一个子集。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311314078.png\" alt=\"image-20220815161016632\"></p>\n<h3 id=\"求解器\"><a class=\"markdownIt-Anchor\" href=\"#求解器\">#</a> 求解器</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvZmVhdHVyZXMvdXgtYnVpbGRpbmctYmxvY2tzL3NvbHZlcnMvc29sdmVyP3ZpZXc9bXJ0a3VuaXR5LTIwMjItMDU=\">求解器概述 - MRTK 2 | Microsoft Docs</span></p>\n<h4 id=\"orbital\"><a class=\"markdownIt-Anchor\" href=\"#orbital\">#</a> Orbital</h4>\n<p>Orbital 用于保持对象与视线的相对位置。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311315321.gif\" alt=\"\"></p>\n<h4 id=\"follow\"><a class=\"markdownIt-Anchor\" href=\"#follow\">#</a> Follow</h4>\n<p>Follow 用于让某对象跟随视线。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311315967.gif\" alt=\"\"></p>\n<h3 id=\"tooltips\"><a class=\"markdownIt-Anchor\" href=\"#tooltips\">#</a> ToolTips</h3>\n<blockquote>\n<p>在 MRTK 中自制使用 TextMeshPro 当做提示文件会导致边界框组件渲染异常😢，网络上也没有任何相关的资料。所以想要在 MR 中对相关的游戏对象显示 ToolTip 可能只能使用官方的组件。</p>\n</blockquote>\n<p>📖官方的 ToolTips 组件，相比 TextMeshPro 还有一个优点是可以始终面向摄像机或始终面向游戏对象。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311315335.png\" alt=\"image-20220823141857540\"></p>\n<p>添加此组件设定好使用的 Prefab 和要显示的提示内容，有需要可重新指定锚点。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311315826.png\" alt=\"image-20220823142055145\"></p>\n<h2 id=\"皮肤\"><a class=\"markdownIt-Anchor\" href=\"#皮肤\">#</a> 皮肤</h2>\n<p>在 MRTK 中，使用 ScripttableObject 来配置使用的样式。</p>\n<p>例如在边界框组件中在 Visuals 下就可以配置不同的边界框显示样式。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311315774.png\" alt=\"image-20220823101336950\"></p>\n<p>在可交互对象中，也可以配置具体的动画交互表现：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202208311315781.png\" alt=\"image-20220823101508110\"></p>\n<h2 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9taXhlZC1yZWFsaXR5L21ydGstdW5pdHkvbXJ0azIvP3ZpZXc9bXJ0a3VuaXR5LTIwMjItMDU=\">MRTK2-Unity 开发人员文档 - MRTK 2 | Microsoft Docs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L2FwaS9taWNyb3NvZnQubWl4ZWRyZWFsaXR5LnRvb2xraXQ/dmlldz1taXhlZC1yZWFsaXR5LXRvb2xraXQtdW5pdHktMjAyMC1kb3RuZXQtMi44LjA=\">Microsoft.MixedReality.Toolkit Namespace | Microsoft Docs</span></li>\n</ul>\n",
            "tags": [
                "VR/AR/MR"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/07/08/MMD%E5%AF%BC%E5%85%A5Unity/",
            "url": "https://www.fasty97.top/2022/07/08/MMD%E5%AF%BC%E5%85%A5Unity/",
            "title": "MMD导入Unity",
            "date_published": "2022-07-08T05:27:59.000Z",
            "content_html": "<h2 id=\"通过blender\"><a class=\"markdownIt-Anchor\" href=\"#通过blender\">#</a> 通过 Blender</h2>\n<blockquote>\n<p>下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fic29sdXRlLXF1YW50dW0vY2F0cy1ibGVuZGVyLXBsdWdpbg==\">https://github.com/absolute-quantum/cats-blender-plugin</span></p>\n</blockquote>\n<p>安装插件后：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220708134034.png\" alt=\"image-20220708133125255\"></p>\n<p>然后选择，Fix Model 修正。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220708134203.png\" alt=\"image-20220708134203907\"></p>\n<p>修正后选择 Export Modle 导出为 Fbx 即可。</p>\n<h2 id=\"通过unity插件\"><a class=\"markdownIt-Anchor\" href=\"#通过unity插件\">#</a> 通过 Unity 插件</h2>\n<blockquote>\n<p>安装 MMD4unity 插件可以直接导入到 Unity，不经过 Blender，实测在某些模型下会发生一些奇怪的错误。</p>\n</blockquote>\n<h2 id=\"改变渲染材质\"><a class=\"markdownIt-Anchor\" href=\"#改变渲染材质\">#</a> 改变渲染材质</h2>\n<blockquote>\n<p>可以使用卡渲来优化渲染效果</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220708150520.png\" alt=\"image-20220708150520449\"></p>\n",
            "tags": [
                "MMD",
                "PMX",
                "模型"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/30/Effective%20C#%20%E7%AC%94%E8%AE%B01/",
            "url": "https://www.fasty97.top/2022/06/30/Effective%20C#%20%E7%AC%94%E8%AE%B01/",
            "title": "Effective C# 笔记1",
            "date_published": "2022-06-29T17:16:30.000Z",
            "content_html": "<blockquote>\n<p>今天我要再开一个新坑，学习一下《Effective C#》, 百闻不如一见，确实有必要好好梳理一下自己的代码方式。</p>\n</blockquote>\n<h2 id=\"第1条优先使用隐式类型的局部变量\"><a class=\"markdownIt-Anchor\" href=\"#第1条优先使用隐式类型的局部变量\">#</a> 第 1 条：优先使用隐式类型的局部变量</h2>\n<p>用 var 来声明变量而不指明其类型，可以令开发者把注意力更多地集中在名称上面，从而更好地了解其含义。</p>\n<h2 id=\"第2条考虑用readonly代替const\"><a class=\"markdownIt-Anchor\" href=\"#第2条考虑用readonly代替const\">#</a> 第 2 条：考虑用 readonly 代替 const</h2>\n<p>C# 有两种常量，一种是编译期（compile-time）的常量，另一种是运行期（runtime）的常量，它们的行为大不相同。常量如果选得不合适，那么程序开发工作可能会受影响。编译期的常量虽然能令程序运行得稍快一点，但却远不如运行期的常量那样灵活。只有当程序性能极端重要且常量取值不会随版本而变化的情况下，才可以考虑选用这种常量。</p>\n<blockquote>\n<p>运行期的常量用 <code>readonly</code>  关键字来声明，编译期的常量用 <code>const</code>  关键字来声明</p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/18/Unity%20Ui%E4%BA%8B%E4%BB%B6%E6%8E%A5%E5%8F%A3/",
            "url": "https://www.fasty97.top/2022/06/18/Unity%20Ui%E4%BA%8B%E4%BB%B6%E6%8E%A5%E5%8F%A3/",
            "title": "Unity Ui事件接口",
            "date_published": "2022-06-18T08:05:03.000Z",
            "content_html": "<p>在 Unity 中 UI 事件有两种方式，一种使用数据接口的方式，另一种使用监听组件的方式。</p>\n<h2 id=\"使用数据接口\"><a class=\"markdownIt-Anchor\" href=\"#使用数据接口\">#</a> 使用数据接口</h2>\n<p>通过继承数据额接口实现接口方法我们可以对 Ui 事件进行处理。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">APanel</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IPointerClickHandler</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPointerClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PointerEventData</span> eventData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ui被点击了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Unity 提供了各种各样的数据接口给我们使用，这里不在一一赘述。</p>\n<p class=\"blue\">需要注意的一点是，使用 Drag 类的接口时，我们必须使用 Drag 接口，其他的 BeginDrag、EndDrag 等接口才会响应。</p>\n<h2 id=\"使用监听组件\"><a class=\"markdownIt-Anchor\" href=\"#使用监听组件\">#</a> 使用监听组件</h2>\n<p>我们最常用的监听组件是 <code>Button组件</code> ，我们可以给任意一个 Ui 添加一个 Button 组件来让 Ui 具有 Button 的效果。</p>\n<p>在处理复杂的监听事件时，我们可以使用 <code>Event trigger</code>  组件。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622225810.png\" alt=\"\"></p>\n<p><code>Event trigger</code>  监听绑定和 Button 基本一致，我们可以在面板上通过拖拽来设定我们的响应事件和要触发的行为。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622225909.png\" alt=\"\"></p>\n<h3 id=\"使用代码绑定\"><a class=\"markdownIt-Anchor\" href=\"#使用代码绑定\">#</a> 使用代码绑定</h3>\n<p>使用那来绑定 Event Trigger 的方式和 Button 略有不同。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">EventTrigger</span> _eventTrigger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _eventTrigger <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>EventTrigger<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span>  entry<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EventTrigger<span class=\"token punctuation\">.</span>Entry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>eventID <span class=\"token operator\">=</span> EventTriggerType<span class=\"token punctuation\">.</span>PointerClick<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    entry<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"被点击了@！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    _eventTrigger<span class=\"token punctuation\">.</span>triggers<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们需要使用 Entry () 的一个类似工厂方法的方式来创建一个回调实体，并指定事件类型。</p>\n",
            "tags": [
                "Ui",
                "小技巧"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/14/%E3%80%8A%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F%E3%80%8B-%E4%B9%A6%E8%AF%84/",
            "url": "https://www.fasty97.top/2022/06/14/%E3%80%8A%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F%E3%80%8B-%E4%B9%A6%E8%AF%84/",
            "title": "《游戏编程模式》-书评",
            "date_published": "2022-06-13T17:17:36.000Z",
            "content_html": "<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>第一次打开《游戏编程模式》这本书已经好像已经是两年前的事情了，断断续续的算是读完了，其实花费的时间应该是大于 9 小时的，</p>\n<p>相比传统的设计模式来说，本书结合了游戏设计方面的思考，让我这个游戏程序员读的很起劲。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220614012226.png\" alt=\"\"></p>\n<h2 id=\"感悟\"><a class=\"markdownIt-Anchor\" href=\"#感悟\">#</a> 感悟</h2>\n<p>书中使用 C<ins> 进行讲解，除了设计模式本身，也让我使用底层 c</ins> 搭建游戏引擎有了一个基本认知，其实很多设计模式我们在平时已经在不经意间使用到了，只是不明确我们使用的是什么模式而已❤️。结合之前学习的 <code>《大话设计模式》</code> , 这算是第二次学习设计模式相关内容了，但我自我感觉自己在代码架构设计方面还是存在一些薄弱。之后考虑再读一下 <code>《设计模式与游戏完美开发》</code> ，主要是结合 C# 看一下在 Unity 中使用设计模式的具体方式。</p>\n",
            "tags": [
                "书评"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/14/%E4%BC%98%E5%8C%96%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E8%84%8F%E6%A0%87%E8%AE%B0%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2022/06/14/%E4%BC%98%E5%8C%96%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E8%84%8F%E6%A0%87%E8%AE%B0%E6%A8%A1%E5%BC%8F/",
            "title": "优化型模式-脏标记模式",
            "date_published": "2022-06-13T16:29:02.000Z",
            "content_html": "<blockquote>\n<p>将工作推迟到必要时进行以避免不必要的工作。</p>\n</blockquote>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<p>但一组数据因为另一组数据的变动而变动时，为了确认具体需要变动的数据，我们为数据进行标记。</p>\n<p><ins>一组原始数据随时间变化。一组衍生数据经过一些代价昂贵的操作由这些数据确定。一个脏标记跟踪这个衍生数据是否和原始数据同步。它在原始数据改变时被设置。如果它被设置了，那么当需要衍生数据时，它们就会被重新计算并且标记被清除。否则就使用缓存的数据。</ins></p>\n<blockquote>\n<p>仅当性能问题严重到值得增加代码复杂度时才使用它</p>\n</blockquote>\n<p>2022 年 6 月 14 日 00:38:00</p>\n<p><ins>等待更新</ins></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/13/%E8%A7%A3%E8%80%A6%E6%80%A7%E6%A8%A1%E5%BC%8F-%E6%9C%8D%E5%8A%A1%E5%AE%9A%E4%BD%8D%E5%99%A8/",
            "url": "https://www.fasty97.top/2022/06/13/%E8%A7%A3%E8%80%A6%E6%80%A7%E6%A8%A1%E5%BC%8F-%E6%9C%8D%E5%8A%A1%E5%AE%9A%E4%BD%8D%E5%99%A8/",
            "title": "解耦性模式-服务定位器",
            "date_published": "2022-06-13T15:34:29.000Z",
            "content_html": "<blockquote>\n<p>通过阅读 <code>《游戏编程模式》</code> 在我的理解下，服务定位器就是：<ins>将需要全局使用的对象进行统一的管理</ins>。</p>\n</blockquote>\n<p>主要是为了解决单例对象在众多系统中被使用暴露了真实系统实现的问题，通过在单例系统外围包裹一层，然后通过访问外界的定位器来范围真实的服务对象。</p>\n<p>当然这样就意味着，我们需要在定位器中对服务进行初始化管理。</p>\n<p class=\"red\">Ps：使用这样的方式，我们就可以通过定位器快捷的替换服务器的具体实现对象，以指定使用例如测试音频模块、发布音频模块等的发布环境区分的子服务类型。</p>\n<blockquote>\n<p>Tips: 其实对于上述的环境区分，我们也可以通过宏定义来处理。</p>\n</blockquote>\n<h2 id=\"时序耦合\"><a class=\"markdownIt-Anchor\" href=\"#时序耦合\">#</a> 时序耦合</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220614002525.png\" alt=\"\"></p>\n<p>在书中提到了一个<ins>时序耦合</ins>的概念，所谓时序耦合就是指两个或多个独立系统因为依赖关系导致，必须有 A 才能使用 B 的情况出现，解决时序耦合可以让我们真正让每个系统独立。</p>\n<p>为了防止出现 NULL 的情况，我们可以为服务指定一个默认初始化方式或默认初始化对象，同时我们可以在想要禁用该项服务时，返回这个默认的空对象。</p>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<blockquote>\n<p>服务定位器模式在很多方面和单例模式（第 6 章）非常相近，所以值得考虑两者来决定哪一个更适合你的需求。</p>\n</blockquote>\n<ul>\n<li>\n<p>Unity [插图] 框架把这个模式和组件模式（第 14 章）结合起来，并使用在了 GetComponent () 方法中。</p>\n</li>\n<li>\n<p>Microsoft 的 XNA [插图] 游戏开发框架将这个模式内嵌到它的核心 Game 类中。每个实例有一个 GameServices 对象，能够用来注册和定位任何类型的服务。</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/11/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFUIkit/",
            "url": "https://www.fasty97.top/2022/06/11/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFUIkit/",
            "title": "Unity 新技术UIkit",
            "date_published": "2022-06-11T06:14:27.000Z",
            "content_html": "<h1 id=\"简单介绍\"><a class=\"markdownIt-Anchor\" href=\"#简单介绍\">#</a> 简单介绍</h1>\n<h2 id=\"uibulider的使用\"><a class=\"markdownIt-Anchor\" href=\"#uibulider的使用\">#</a> UIBulider 的使用</h2>\n<blockquote>\n<p>UIElement 是一种类似于 Html 形式进行界面开发的方式，创建的 EditorWidow 包括以下 3 个文件。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220317003758.png\" alt=\"image-20220317003751243\"></p>\n<ul>\n<li>C#- 代码控制界面逻辑 类似于 js</li>\n<li>Uss - 样式控制器 类似于 Css</li>\n<li>Uxml - 基础骨架模板 类型 Html</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220317004247.png\" alt=\"image-20220317004247734\"></p>\n<center>UIBulider界面</center>\n<h2 id=\"双击asset打开编辑窗\"><a class=\"markdownIt-Anchor\" href=\"#双击asset打开编辑窗\">#</a> 双击 Asset 打开编辑窗</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DialogGraphEditWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">VisualElement</span> rootMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">OnOpenAsset</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">OpenAsset</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> line<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EditorUtility<span class=\"token punctuation\">.</span><span class=\"token function\">InstanceIDToObject</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">DialogTreeGraphAsset</span> graph<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> window <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>DialogGraphEditWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            window<span class=\"token punctuation\">.</span>titleContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"对话窗\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Editor/GraphWindow.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rootMain<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                rootMain <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            window<span class=\"token punctuation\">.</span>rootVisualElement<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rootMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            window<span class=\"token punctuation\">.</span>minSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uss-样式表\"><a class=\"markdownIt-Anchor\" href=\"#uss-样式表\">#</a> Uss 样式表</h2>\n<blockquote>\n<p>形如这样的称为样式表 uss，uss 决定了 ui 元素的显示效果。</p>\n</blockquote>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">Label</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">-unity-font-style</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>68<span class=\"token punctuation\">,</span> 138<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"uxml-模板\"><a class=\"markdownIt-Anchor\" href=\"#uxml-模板\">#</a> Uxml 模板</h2>\n<blockquote>\n<p>uxml 模板类似于 html，其中包含了所有的静态元素内容。</p>\n<p>uxml 使用 uss 决定其中 ui 元素的具体显示效果。</p>\n</blockquote>\n<p>双击打开 uxml 时默认会自动打开可视化工具 ——UIBulider, 在 UiBulider 中进行可视化的数据操作。</p>\n<h2 id=\"ui-绑定\"><a class=\"markdownIt-Anchor\" href=\"#ui-绑定\">#</a> Ui 绑定</h2>\n<blockquote>\n<p>Ui 绑定文件类似于 JavaScript 代码</p>\n</blockquote>\n<p>我们可以在代码中使用相关的 Api 对 Ui 元素和样式表进行操作，如下所示：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>动态操作</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BagMgrWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Window/UI Toolkit/BagMgrWindow\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShowExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">BagMgrWindow</span> wnd <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>BagMgrWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            wnd<span class=\"token punctuation\">.</span>titleContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BagMgrWindow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// Each editor window contains a root VisualElement object</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> root <span class=\"token operator\">=</span> rootVisualElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// VisualElements objects can contain other VisualElement following a tree hierarchy.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> label <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! From C#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// Import UXML</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> visualTree <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/EditorWindows/BagMgrWindow.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> labelFromUXML <span class=\"token operator\">=</span> visualTree<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>labelFromUXML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// A stylesheet can be added to a VisualElement.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// The style will be applied to the VisualElement and all of its children.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> styleSheet <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>StyleSheet<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/EditorWindows/BagMgrWindow.uss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\">VisualElement</span> labelWithStyle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! With Style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            labelWithStyle<span class=\"token punctuation\">.</span>styleSheets<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>styleSheet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            root<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>labelWithStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"debug-工具\"><a class=\"markdownIt-Anchor\" href=\"#debug-工具\">#</a> Debug 工具</h2>\n<blockquote>\n<p>提供有 Ui 检查工具，其中可以查看 Ui 元素的显示状态和包围盒结构，树形结构等，类似 html 的浏览器 F12.</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211211500451.png\" alt=\"image-20221121150027349\"></p>\n<h2 id=\"流程模板\"><a class=\"markdownIt-Anchor\" href=\"#流程模板\">#</a> 流程模板</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>UIElements</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IndexEditorWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">VisualElement</span> rootMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fasty/主界面\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> root <span class=\"token operator\">=</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualTreeAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Index.uxml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        rootMain <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> window <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetWindow</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IndexEditorWindow<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        window<span class=\"token punctuation\">.</span>rootVisualElement<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rootMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">CreateUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">InitEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        window<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/// 动态创建 Ui</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// 处理事件</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> btn <span class=\"token operator\">=</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showBtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        btn<span class=\"token punctuation\">.</span>clicked <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Label<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"查看被点击了\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        btn <span class=\"token operator\">=</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Button<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"descBtn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        btn<span class=\"token punctuation\">.</span>clicked <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Label<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"说明被点击了\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"装备管理小案例\"><a class=\"markdownIt-Anchor\" href=\"#装备管理小案例\">#</a> 装备管理小案例</h1>\n<blockquote>\n<p><ins>2022 年 11 月 21 日 10:32:00 更新</ins></p>\n<p>此案例为 Uitoolkit 练习，使用 Unity2021.3.11f1c2</p>\n</blockquote>\n<h2 id=\"初步设计\"><a class=\"markdownIt-Anchor\" href=\"#初步设计\">#</a> 初步设计</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202211211054281.png\" alt=\"image-20221121105406061\"></p>\n<center>简单装备管理设计</center>\n<p>其中涉及到 <code>ListView</code>  控件参考：[Unity - Manual: Create list and tree views (<span class=\"exturl\" data-url=\"aHR0cDovL3VuaXR5M2QuY29t\">unity3d.com</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnVuaXR5M2QuY29tLzIwMjIuMS9Eb2N1bWVudGF0aW9uL01hbnVhbC9VSUUtTGlzdFZpZXctVHJlZVZpZXcuaHRtbCM6fjp0ZXh0PUNyZWF0ZQ==\">https://docs.unity3d.com/2022.1/Documentation/Manual/UIE-ListView-TreeView.html#:~:text=Create</span> a list view 1 Right-click in the,the ListView control in the Hierarchy window. 更多项目)</p>\n<p>++ 🔖值得注意的是： 当因为修改脚本导致窗口无法打开时，可能是因为查找不到窗口的实例，在修正错误后，重启 Unity 编辑器才能正常打开窗体。++</p>\n<h2 id=\"listview的使用\"><a class=\"markdownIt-Anchor\" href=\"#listview的使用\">#</a> ListView 的使用</h2>\n<blockquote>\n<p>这里点击使用的是通用注册事件，同时也可以使用 ListView 的 OnValueChange 方法监听，在监听时获取不到 text 属性，可以在生成时将数据绑定到 <code>viewDataKey</code> 。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> list <span class=\"token operator\">=</span> _rootMain<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Q</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListView<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list<span class=\"token punctuation\">.</span>itemsSource <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list<span class=\"token punctuation\">.</span>makeItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list<span class=\"token punctuation\">.</span>bindItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">)</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    element<span class=\"token punctuation\">.</span>viewDataKey <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    element<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">RegisterCallback</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MouseDownEvent<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"点击了选项：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">element<span class=\"token punctuation\">.</span>viewDataKey</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> TrickleDown<span class=\"token punctuation\">.</span>TrickleDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "Ui",
                "编辑器扩展",
                "uitoolkit"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/11/%E5%85%B3%E4%BA%8E%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E6%80%9D%E8%80%83/",
            "url": "https://www.fasty97.top/2022/06/11/%E5%85%B3%E4%BA%8E%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E6%80%9D%E8%80%83/",
            "title": "关于状态机的思考",
            "date_published": "2022-06-10T18:15:39.000Z",
            "content_html": "<blockquote>\n<p>状态机是对状态模式的一种使用。用于独立处理在各个状态的具体情况和转换关系。</p>\n</blockquote>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>当我们需要处理带流程响应的问题时，可以将其抽象为状态问题。</p>\n<p class=\"red\">例如下图的我们需要处理 OnEnter、OnUpdate、OnExit 三个部分。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220615115055.png\" alt=\"\"></p>\n<h2 id=\"有限状态机\"><a class=\"markdownIt-Anchor\" href=\"#有限状态机\">#</a> 有限状态机</h2>\n<blockquote>\n<p>有且仅有可能处于一种状态，解决状态区分和转换问题。</p>\n<p>有限状态机是下列几种状态机的基础，下面的状态机都基于有限状态机进行相关功能的扩充。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220615115505.png\" alt=\"\"></p>\n<h3 id=\"转换方式\"><a class=\"markdownIt-Anchor\" href=\"#转换方式\">#</a> 转换方式</h3>\n<p>在状态机中，我们需要使用一种转换方式来进行状态切换，在 Unity 的 Animator 中使用条件参数进行跳转。我们可以使用类似事件的方式来跳转、或者使用任意能够保证正确进行 原状态到目标状态 转换的方式。</p>\n<h3 id=\"实现方式\"><a class=\"markdownIt-Anchor\" href=\"#实现方式\">#</a> 实现方式</h3>\n<blockquote>\n<p>对于有限状态机来说，我们只需要保证具有 <code>状态</code> 、 <code>转换关系</code> 即可。</p>\n</blockquote>\n<h4 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\">#</a> 状态</h4>\n<p>状态是我们需要管理的核心，状态中可以包含转换关系 Dict。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>非继承式状态</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">/// 简单 Fsm 状态</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FsmState</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmTranslation<span class=\"token punctuation\">></span></span> translationDict<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token function\">FsmState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         translationDict <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmTranslation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>         <span class=\"token keyword\">return</span> Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"转换条件\"><a class=\"markdownIt-Anchor\" href=\"#转换条件\">#</a> 转换条件</h4>\n<p>转换条件包括了起止状态和状态切换时要执行的回调函数。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>转换条件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">/// 简单 Fsm 转换条件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FsmTranslation</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">FsmState</span> fromState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">FsmState</span> toState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">FsmTranslationCallBack</span> callBack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">/// 创建条件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"fromState\"> 开始状态 & lt;/param></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"name\"> 响应事件 & lt;/param></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"toState\"> 目标状态 & lt;/param></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">/// &lt;param name=\"callBack\"> 转换回调 & lt;/param></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token function\">FsmTranslation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmState</span> fromState<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FsmState</span> toState<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FsmTranslationCallBack</span> callBack<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fromState <span class=\"token operator\">=</span> fromState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toState <span class=\"token operator\">=</span> toState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>callBack <span class=\"token operator\">=</span> callBack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"控制机器\"><a class=\"markdownIt-Anchor\" href=\"#控制机器\">#</a> 控制机器</h4>\n<p>我们需要一个控制机器来管理我们的状态和条件，让整个系统能够自动化的运转起来，这个部分我将其称之为<ins>状态机器</ins>。<br>\n状态机器存储了当前的状态情况，以及根据条件转变条件的方法 <code>HandleEvent</code> 。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>机器</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 当前状态</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">FsmState</span> CurState <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmState<span class=\"token punctuation\">></span></span> StateDict <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> FsmState<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// 添加状态</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"state\">State.&lt;/param></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmState</span> state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    StateDict<span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/// 添加条转</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"translation\">Translation.&lt;/param></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddTranslation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmTranslation</span> translation<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    StateDict<span class=\"token punctuation\">[</span>translation<span class=\"token punctuation\">.</span>fromState<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">[</span>translation<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> translation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/// 启动状态机</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"state\">State.&lt;/param></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FsmState</span> state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    CurState <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">/// 处理事件</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"name\">Name.&lt;/param></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">HandleEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CurState <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> CurState<span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        UnityEngine<span class=\"token punctuation\">.</span>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fromState:\"</span> <span class=\"token operator\">+</span> CurState<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        CurState<span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">callBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        CurState <span class=\"token operator\">=</span> CurState<span class=\"token punctuation\">.</span>translationDict<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>toState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        UnityEngine<span class=\"token punctuation\">.</span>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toState:\"</span> <span class=\"token operator\">+</span> CurState<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h3>\n<p>通过上面这一步我们已经搭建了一个基本的状态机模板，上面使用的是<ins>非继承的模式</ins>，当然我们可以将状态机接口抽象出去，成为一个接口。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// FSM 有限状态机接口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFsmState</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnExit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如上所示这种形式，我们的状态类通过继承接口来外挂状态行为，这种方式有好有坏，好处是：<ins>可以结构更加严谨的使用状态机接口，逻辑清晰</ins>。</p>\n<p>坏处是：<ins>在使用时也许我们会为了一个状态而去创建一个子类，导致子类过多，而子类的功能本身存在重合的情况</ins>。</p>\n<h2 id=\"并发状态机\"><a class=\"markdownIt-Anchor\" href=\"#并发状态机\">#</a> 并发状态机</h2>\n<blockquote>\n<p>相当于同时运行多个有限状态机，解决多状态并行问题。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622170627.png\" alt=\"\"></p>\n<p>在 Unity 的 Animator Controller 中，我们每一个创建的控制器就是一个 FSM 状态机，但我们使用多个时，这些状态机并不会相互干扰，独立并发的运行，此时我们可以将这种多个状态机同时运行的情况称之为是并发状态机。</p>\n<h2 id=\"分层状态机\"><a class=\"markdownIt-Anchor\" href=\"#分层状态机\">#</a> 分层状态机</h2>\n<blockquote>\n<p>相当于在有限状态机中添加层级划分，通过层级来指定当前使用的状态机。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622170913.png\" alt=\"\"></p>\n<p>在动画系统中可以看到有 Layer 的概念，这就是使用分层状态机的概念，不过在我们的普通分层状态中，我们的每个层级权重都为 1，也就是说每次运行一个层级时有且只运行这一个层级，而 Unity 增加了权重的概念，这个概念让状态层级之间可以可以状态和层级的混合。</p>\n<h2 id=\"下推状态机\"><a class=\"markdownIt-Anchor\" href=\"#下推状态机\">#</a> 下推状态机</h2>\n<blockquote>\n<p>相当于使用一个栈来存储状态的历史记录，以便在需要时回到原先的状态。</p>\n<p>在退出一个状态时，自动恢复到之前的状态。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622171349.png\" alt=\"\"></p>\n<p>如图所示：每个次级状态都与前一个状态存在回溯关系（<ins>这个回溯关系是不需要条件的</ins>），当我们退出 C 状态时，我们会自动回到 B 状态，退出 B 状态时自动回到 A 状态。</p>\n<p class=\"red\">状态机会将每一个使用的状态放入状态栈中，在退出当前状态时自动回溯到上一个状态。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220622171829.png\" alt=\"\"></p>\n<h2 id=\"相关阅读\"><a class=\"markdownIt-Anchor\" href=\"#相关阅读\">#</a> 相关阅读</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYXN0eTk3LnRvcC8yMDIxLzA5LzA4L05vZGVDYW52YXMlRTQlQjklOEJGU00lRTYlOUMlODklRTklOTklOTAlRTclOEElQjYlRTYlODAlODElRTYlOUMlQkEv\">NodeCanvas 之 FSM 有限状态机 - NodeCanvas - 游戏开发 | Fasty Blog = 指尖小屋</span></li>\n</ol>\n",
            "tags": [
                "状态机",
                "有限状态机",
                "并发状态机",
                "分层状态机",
                "下推状态机",
                "AI"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/08/URP%E4%B8%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%A4%84%E7%90%86/",
            "url": "https://www.fasty97.top/2022/06/08/URP%E4%B8%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%A4%84%E7%90%86/",
            "title": "URP下自定义后处理",
            "date_published": "2022-06-08T07:05:23.000Z",
            "content_html": "<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<blockquote>\n<p>在 URP 中 Unity 通过定义 <code>RenderFeature</code>  来编写自定义后处理效果，实现 <code>SRP渲染管线</code> 。</p>\n</blockquote>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105727325\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"144\" style=\"max-width: 712.453125px;\" viewBox=\"0 0 712.453125 144\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-Vlome LE-RenderFeature\" id=\"L-Vlome-RenderFeature\" style=\"opacity: 1;\"><path class=\"path\" d=\"M90.2578125,27.5L132.53125,27.5L157.53125,27.5\" marker-end=\"url(#arrowhead26)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead26\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-RenderFeature LE-RenderPass1\" id=\"L-RenderFeature-RenderPass1\" style=\"opacity: 1;\"><path class=\"path\" d=\"M283.359375,27.5L308.359375,27.5L333.359375,27.5\" marker-end=\"url(#arrowhead27)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead27\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-RenderPass1 LE-RenderPass2\" id=\"L-RenderPass1-RenderPass2\" style=\"opacity: 1;\"><path class=\"path\" d=\"M441.28125,27.5L466.28125,27.5L491.28125,27.5\" marker-end=\"url(#arrowhead28)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead28\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-RenderPass2 LE-......\" id=\"L-RenderPass2-......\" style=\"opacity: 1;\"><path class=\"path\" d=\"M599.203125,27.5L624.203125,27.5L653.767731741573,52.5\" marker-end=\"url(#arrowhead29)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead29\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-RenderPass LE-Shader\" id=\"L-RenderPass-Shader\" style=\"opacity: 1;\"><path class=\"path\" d=\"M107.53125,116.5L132.53125,116.5L185.703125,116.5\" marker-end=\"url(#arrowhead30)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead30\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-Shader LE-ShaderPass1\" id=\"L-Shader-ShaderPass1\" style=\"opacity: 1;\"><path class=\"path\" d=\"M255.1875,116.5L308.359375,116.5L334.0078125,116.5\" marker-end=\"url(#arrowhead31)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead31\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-ShaderPass1 LE-ShaderPass2\" id=\"L-ShaderPass1-ShaderPass2\" style=\"opacity: 1;\"><path class=\"path\" d=\"M440.6328125,116.5L466.28125,116.5L491.9296875,116.5\" marker-end=\"url(#arrowhead32)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead32\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-ShaderPass2 LE-......\" id=\"L-ShaderPass2-......\" style=\"opacity: 1;\"><path class=\"path\" d=\"M598.5546875,116.5L624.203125,116.5L653.767731741573,91.5\" marker-end=\"url(#arrowhead33)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead33\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-Vlome-10\" transform=\"translate(57.765625,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-32.4921875\" y=\"-19.5\" width=\"64.984375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-22.4921875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Vlome</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-RenderFeature-11\" transform=\"translate(220.4453125,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-62.9140625\" y=\"-19.5\" width=\"125.828125\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-52.9140625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">RenderFeature</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-RenderPass1-12\" transform=\"translate(387.3203125,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-53.9609375\" y=\"-19.5\" width=\"107.921875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-43.9609375,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">RenderPass1</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-RenderPass2-13\" transform=\"translate(545.2421875,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-53.9609375\" y=\"-19.5\" width=\"107.921875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-43.9609375,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">RenderPass2</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-......-14\" transform=\"translate(676.828125,72)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-27.625\" y=\"-19.5\" width=\"55.25\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-17.625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">......</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-RenderPass-15\" transform=\"translate(57.765625,116.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-49.765625\" y=\"-19.5\" width=\"99.53125\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-39.765625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">RenderPass</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-Shader-16\" transform=\"translate(220.4453125,116.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-34.7421875\" y=\"-19.5\" width=\"69.484375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-24.7421875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Shader</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-ShaderPass1-17\" transform=\"translate(387.3203125,116.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-53.3125\" y=\"-19.5\" width=\"106.625\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-43.3125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">ShaderPass1</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-ShaderPass2-18\" transform=\"translate(545.2421875,116.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-53.3125\" y=\"-19.5\" width=\"106.625\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-43.3125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">ShaderPass2</tspan></text></g></g></g></g></g></g></svg></pre><center>流程如上</center>\n<h2 id=\"step1-编写后处理shader\"><a class=\"markdownIt-Anchor\" href=\"#step1-编写后处理shader\">#</a> Step1 编写后处理 Shader</h2>\n<h2 id=\"setp2-编写render-feature\"><a class=\"markdownIt-Anchor\" href=\"#setp2-编写render-feature\">#</a> Setp2 编写 Render Feature</h2>\n<h3 id=\"render-feature\"><a class=\"markdownIt-Anchor\" href=\"#render-feature\">#</a> Render Feature</h3>\n<blockquote>\n<p>Render Feature 是一个处理集，继承自 <code>ScriptableRendererFeature</code> ，可以包含多个 Render Pass。</p>\n</blockquote>\n<p><code>public override void Create()</code></p>\n<p>用于在 RenderFeature 创建时调用，一般在这里进行使用到的 RenderPass 的初始化操作。</p>\n<p><code>public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)</code></p>\n<p>用于指定渲染队列信息，通过 <code>renderer.EnqueuePass(renderpass)</code>  方法来将 renderpass 加入渲染队列。</p>\n<h3 id=\"render-pass\"><a class=\"markdownIt-Anchor\" href=\"#render-pass\">#</a> Render Pass</h3>\n<blockquote>\n<p>RenderPass 类似于 ShaderPass，是一块处理单元，通过继承 <code>ScriptableRenderPass</code> , 实现生命周期和处理行为。</p>\n</blockquote>\n<center>按照生命周期流程如下</center>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105729175\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"55\" style=\"max-width: 480.015625px;\" viewBox=\"0 0 480.015625 55\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-OnCameraSetup LE-Execute\" id=\"L-OnCameraSetup-Execute\" style=\"opacity: 1;\"><path class=\"path\" d=\"M142.640625,27.5L167.640625,27.5L192.640625,27.5\" marker-end=\"url(#arrowhead12)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead12\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-Execute LE-OnCameraCleanup\" id=\"L-Execute-OnCameraCleanup\" style=\"opacity: 1;\"><path class=\"path\" d=\"M269.96875,27.5L294.96875,27.5L319.96875,27.5\" marker-end=\"url(#arrowhead13)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead13\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-OnCameraSetup-3\" transform=\"translate(75.3203125,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-67.3203125\" y=\"-19.5\" width=\"134.640625\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-57.3203125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">OnCameraSetup</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-Execute-4\" transform=\"translate(231.3046875,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-38.6640625\" y=\"-19.5\" width=\"77.328125\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-28.6640625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Execute</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-OnCameraCleanup-5\" transform=\"translate(395.9921875,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-76.0234375\" y=\"-19.5\" width=\"152.046875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-66.0234375,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">OnCameraCleanup</tspan></text></g></g></g></g></g></g></svg></pre><ul>\n<li>\n<p><code>public override void OnCameraSetup(CommandBuffer cmd, ref RenderingData renderingData)</code></p>\n<p>用于初始化 RenderPass，完成基础操作。</p>\n</li>\n<li>\n<p><code>public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)</code></p>\n<p>用于处理 Pass 逻辑。</p>\n</li>\n<li>\n<p><code>public override void OnCameraCleanup(CommandBuffer cmd)</code></p>\n<p>用于进行收尾操作，释放资源等。</p>\n</li>\n</ul>\n<h2 id=\"setp3-编写volume-component\"><a class=\"markdownIt-Anchor\" href=\"#setp3-编写volume-component\">#</a> Setp3 编写 Volume Component</h2>\n<p>创建一个类继承自 <code>VolumeComponent</code> , 实现 <code>IPostProcessComponent</code>  接口。</p>\n<p>定义 <code>VolumeComponentMenu</code>  菜单路径。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">VolumeComponentMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyPost-processing/Translation\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TranslationEffect</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">VolumeComponent</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IPostProcessComponent</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Range</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatParameter</span> width <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FloatParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Range</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatParameter</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FloatParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Range</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">FloatParameter</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FloatParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2Parameter</span> viewport<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2Parameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> scale<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsTileCompatible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>PS：书写参数时，必须使用经过保证的参数类型，如 Float 应该使用 FloatParameter 类型代替。</p>\n</blockquote>\n<h2 id=\"setp4-编写控制脚本\"><a class=\"markdownIt-Anchor\" href=\"#setp4-编写控制脚本\">#</a> Setp4 编写控制脚本</h2>\n<h2 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMU5rNHkxbzd3SD9zcG1faWRfZnJvbT0zMzMuOTk5LjAuMA==\">【鸡丝菌的 ShaderGraph 小教室】动物森友会转场效果的实现_哔哩哔哩_bilibili</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnVuaXR5M2QuY29tL1NjcmlwdFJlZmVyZW5jZS9SZW5kZXJpbmcuU2NyaXB0YWJsZVJlbmRlckNvbnRleHQuaHRtbA==\">Unity - Scripting API: ScriptableRenderContext (unity3d.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MDA4NTgxMjE=\">URP 自定义后处理 - 知乎 (zhihu.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNjE2NTgzNDk=\">如何扩展 Unity URP 的后处理 Volume 组件 - 知乎 (zhihu.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzMyNzMzOTA=\">URP 系列教程 | 如何使用 Scriptable Renderer Feature 来自定义后处理效果 - 知乎 (zhihu.com)</span></li>\n</ol>\n",
            "tags": [
                "渲染管线",
                "后处理",
                "可编程渲染管线（SRP）"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%AD%97%E8%8A%82%E7%A0%81/",
            "url": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%AD%97%E8%8A%82%E7%A0%81/",
            "title": "行为型模式-字节码",
            "date_published": "2022-06-07T05:57:47.000Z",
            "content_html": "<blockquote>\n<p>将指令抽象为一组字节码，通过字节码的排列组合定义游戏行为，使得玩家或者策划能够自由设计游戏行为（例如 AI）。</p>\n<p><code>数据驱动</code> 让游戏逻辑脱离编码的限制，赋予数据 行为。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">// 使用这样的一种数据驱动的模式来编程，让游戏逻辑脱离编码的限制，赋予数据 行为</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">// 使用堆栈存储指令，每次将堆栈中的指令出栈执行再入栈，直到栈空</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Stack<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> actlist <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            actlist<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> player <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Character</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// 解析字节码</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> act <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ActType<span class=\"token punctuation\">)</span>stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>act<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token keyword\">case</span> ActType<span class=\"token punctuation\">.</span>AddHp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> parm <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        player<span class=\"token punctuation\">.</span><span class=\"token function\">AddHp</span><span class=\"token punctuation\">(</span>parm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token comment\">//stack.Push(player.Hp);</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token keyword\">case</span> ActType<span class=\"token punctuation\">.</span>PlaySound<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        parm <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        player<span class=\"token punctuation\">.</span><span class=\"token function\">PlaySound</span><span class=\"token punctuation\">(</span>parm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token keyword\">case</span> ActType<span class=\"token punctuation\">.</span>Spell<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        parm <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        player<span class=\"token punctuation\">.</span><span class=\"token function\">Spell</span><span class=\"token punctuation\">(</span>parm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ActType</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        AddHp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        Spell <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        PlaySound <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Character</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Mp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddHp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            Hp <span class=\"token operator\">+=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"增加生命值：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">value</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Spell</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"释放法术：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">pos</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PlaySound</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"播放音效: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">id</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1/",
            "url": "https://www.fasty97.top/2022/06/07/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1/",
            "title": "行为型模式-类型对象",
            "date_published": "2022-06-07T05:04:33.000Z",
            "content_html": "<blockquote>\n<p>通过创建一个类来支持新类型的灵活创建，其每个实例都代表一个不同的对象类型。</p>\n</blockquote>\n<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>试着想象一下，如果我们来设计一个怪物的数据我们会如何？</p>\n<ul>\n<li>名称</li>\n<li>种族</li>\n<li>生命值</li>\n<li>攻击力</li>\n<li>…</li>\n</ul>\n<p>以及我们的 Attack 行为。</p>\n<p>可以想到诸如这些的属性，在以这些数据的基础上来派生更多的特殊化数据。</p>\n<h2 id=\"传统设计\"><a class=\"markdownIt-Anchor\" href=\"#传统设计\">#</a> 传统设计</h2>\n<p>按照我们的常规思维，我们很容易想到如下的设计方案。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MosterBase</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Race <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Damage <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BigCat</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MosterBase</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"喵！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Elf</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MosterBase</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"精灵攻击\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>假如，此时我们希望怪物的数值和种族挂钩。</p>\n</blockquote>\n<p>我们第一时间想到的肯定是将 <code>种族</code> 也划分为一个类。</p>\n<p>于是我们有了以下的代码：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Race</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Damage <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MosterBase</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Damage <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Race</span> Race <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>Race</code>  类可以帮助我们存放所有同种族 怪物的共享信息。</p>\n<blockquote>\n<p>这种，类似组合的设计方案，帮助我们共享一部分数据，但在行为层面 也导致了我们子类过多的问题。</p>\n</blockquote>\n<h2 id=\"使用类型对象\"><a class=\"markdownIt-Anchor\" href=\"#使用类型对象\">#</a> 使用类型对象</h2>\n<blockquote>\n<p>在类中放置一个对象引用来表述类型，通过怪物 + 种族的组合方式，来解决子类过多的设计。</p>\n<p>❤️ 放置的对象引用已经表述了类型，就无需通过继承来表达关系。</p>\n<p>❤️ 通过类型对象搭建工厂生成对象。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>             * 类型对象：是指通过组合的方式去解决继承导致的强耦合问题</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>             * 例如：在下面的例子中，如果我们将种族放在 Moster 中，然后通过继承的方式实现抽象类 Moster，会导致子类过多，耦合强。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>             * 使用一个单独的对象将种族抽离出来，通过怪物和种族的组合方式就可以创建不同的怪物。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>             */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> breed <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Breed</span> <span class=\"token punctuation\">&#123;</span> AttackLevel <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> BaseHp <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"狼\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Moster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Hp <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"灰狼\"</span><span class=\"token punctuation\">,</span> Breed <span class=\"token operator\">=</span> breed <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Moster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Hp <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"白狼\"</span><span class=\"token punctuation\">,</span> Breed <span class=\"token operator\">=</span> breed <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>breed<span class=\"token punctuation\">.</span><span class=\"token function\">NewMoster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> breed2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Breed</span> <span class=\"token punctuation\">&#123;</span> AttackLevel <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"死灵狼\"</span><span class=\"token punctuation\">,</span> Parent <span class=\"token operator\">=</span> breed <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mos <span class=\"token operator\">=</span> breed2<span class=\"token punctuation\">.</span><span class=\"token function\">NewMoster</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恐怖之狼\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">//Console.WriteLine(mos);</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>breed2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// 怪物</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Moster</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Breed</span> Breed <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> SumHp <span class=\"token operator\">=></span> Breed<span class=\"token punctuation\">.</span>BaseHp <span class=\"token operator\">+</span> Hp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> HP:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">SumHp</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> breedName：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Breed<span class=\"token punctuation\">.</span>Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> AttackLevel:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Breed<span class=\"token punctuation\">.</span>AttackLevel</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">/// 种族</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Breed</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> AttackLevel <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\">// 为了区分是否为子种族重写值，我们可以如此判定</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> baseHp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> BaseHp</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>baseHp <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> Parent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> Parent<span class=\"token punctuation\">.</span>baseHp<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token keyword\">return</span> baseHp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">set</span> <span class=\"token punctuation\">&#123;</span> baseHp <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">// 可以通过这种方式为种族添加一个方法工厂化生成 Moster</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Moster</span> <span class=\"token function\">NewMoster</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Moster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> Breed <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token comment\">// 可以通过指定父种族指定层级关系，不使用继承，存储内存地址，在子类和父类仅仅只是数据上不同时，可以避免子类数目过多</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Breed</span> Parent <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Parent<span class=\"token punctuation\">.</span>Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">-></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> AttackLevel:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">AttackLevel</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> BaseHp:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">BaseHp</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/05/25/ASE%20Shader%E7%BB%83%E4%B9%A0/",
            "url": "https://www.fasty97.top/2022/05/25/ASE%20Shader%E7%BB%83%E4%B9%A0/",
            "title": "ASE Shader练习",
            "date_published": "2022-05-25T09:51:31.000Z",
            "content_html": "<blockquote>\n<p>Ase 是一个节点化的 Shader 编辑插件，支持各种渲染管线。</p>\n</blockquote>\n<p>Ase 创建 Shder 后的主界面如下图所示：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220525191418.png\" alt=\"image-20220525191418045\"></p>\n<center>详细说明</center>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220525194244.png\" alt=\"image-20220525194244519\"></p>\n",
            "tags": [
                "Shder",
                "Graph",
                "unity插件"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/20/vs%E5%8F%91%E5%B8%83exe%E7%A8%8B%E5%BA%8F/",
            "url": "https://www.fasty97.top/2022/05/20/vs%E5%8F%91%E5%B8%83exe%E7%A8%8B%E5%BA%8F/",
            "title": "vs发布exe程序",
            "date_published": "2022-05-19T22:59:51.000Z",
            "content_html": "<blockquote>\n<p>之前我打包 vs 开发的小项目时都会将 Debug 整个文件夹复制下来使用。</p>\n<p>最近突然发现，可以使用另一种方式来方便的打包项目。</p>\n</blockquote>\n<p>在需要发布的项目右键选择发布即可。</p>\n<p><img data-src=\"C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20220520070159195.png\" alt=\"image-20220520070159195\"></p>\n<p>虽然这种方式生成的 exe 没有安装过程，可能不太规范，但是很容易操作。</p>\n<p>安装后的程序可以在 windows 的程序列表中查看</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220520070428.png\" alt=\"image-20220520070428006\"></p>\n",
            "tags": [
                "vs"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B9%9D%EF%BC%89%E5%A4%8D%E6%9D%82%E5%85%89%E7%85%A7/",
            "url": "https://www.fasty97.top/2022/05/20/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B9%9D%EF%BC%89%E5%A4%8D%E6%9D%82%E5%85%89%E7%85%A7/",
            "title": "Unity入门精要（九）复杂光照",
            "date_published": "2022-05-19T22:58:51.000Z",
            "content_html": "<h1 id=\"复杂光照\"><a class=\"markdownIt-Anchor\" href=\"#复杂光照\">#</a> 复杂光照</h1>\n<p>在之前的学习中，我们使用的都是单一光照，实际在游戏中可能存在多个光源，不同的光源会互相影响构成真正的光照系统，在这一节我们将实现一个真正可用的光照模型。</p>\n<h2 id=\"渲染路径-rendering-path\"><a class=\"markdownIt-Anchor\" href=\"#渲染路径-rendering-path\">#</a> 渲染路径 Rendering Path</h2>\n<blockquote>\n<p>📖 决定了光照是如何应用到 Unity Shader 中的。</p>\n</blockquote>\n<p>我们只有为 Shader 正确地选择和设置了需要的渲染路径，该 Shader 的光照计算才能被正确执行。</p>\n<p>🏷渲染路径的分类</p>\n<ul>\n<li>前向渲染路径（Forward Rendering Path）</li>\n<li>延迟渲染路径（Deferred Rendering Path）</li>\n<li>顶点照明渲染路径（Vertex Lit Rendering Path）—— 已经被弃用</li>\n</ul>\n<p>目前 unity 提供了新的渲染路径代替了原来的渲染路径。</p>\n<blockquote>\n<p>默认使用 Graphics 中的设置，可以在摄像机中对设置进行覆盖。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021127030.png\" alt=\"image-20220902112709918\"></p>\n<p>在 Shader Pass 中来指定该 Pass 使用的渲染路径：</p>\n<figure class=\"highlight scss\"><figcaption data-lang=\"Sass (Scss)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">Pass  </span><span class=\"token punctuation\">&#123;</span> <span class=\"token selector\">Tags  </span><span class=\"token punctuation\">&#123;</span>  <span class=\"token string\">\"LightMode\"</span>  =  <span class=\"token string\">\"ForwardBase\"</span>  <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>LightMode 标签可供使用的渲染路径：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021129823.png\" alt=\"image-20220902112959760\"></p>\n<p>💭为 Pass 指定正确的渲染路径对于 Unity 光照变量正确赋值具有重要意义。</p>\n<blockquote>\n<p>Unity 默认使用前向渲染光照路径.</p>\n</blockquote>\n<h3 id=\"前向渲染路径\"><a class=\"markdownIt-Anchor\" href=\"#前向渲染路径\">#</a> 前向渲染路径</h3>\n<blockquote>\n<p>前向渲染是传统渲染方式，也是我们常用的一种渲染路径。</p>\n</blockquote>\n<p>📖 原理：每进行一次完整的前向渲染，我们需要渲染该对象的渲染图元，并计算两个缓冲区的信息：颜色缓冲区和深度缓冲区。</p>\n<center>前向渲染伪代码</center>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021402465.png\" alt=\"image-20220902140220407\"></p>\n<p>每个光照下的物体都需要进行一次逐像素的 Pass，也就是在一个场景中，n 个物体 m 个光源的下，渲染场景需要 n*m 次 Pass。</p>\n<h3 id=\"unity中的前向渲染\"><a class=\"markdownIt-Anchor\" href=\"#unity中的前向渲染\">#</a> Unity 中的前向渲染</h3>\n<p>Unity 中照亮物体有 3 种方式：</p>\n<ol>\n<li>逐顶点处理 Spherical</li>\n<li>逐像素处理 Harmonics</li>\n<li>球谐函数 SH</li>\n</ol>\n<p>光源使用哪一种处理方式取决于它的类型和渲染模式。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021411344.png\" alt=\"image-20220902141112298\"></p>\n<blockquote>\n<p>将渲染类型设置为 Important（重要的）来告诉 Unity 这个光源是重要的，把它当成一个逐像素光源来处理。</p>\n<p>通常，Unity 会自动根据远近、强度等参数对光源的重要性进行排序。</p>\n</blockquote>\n<ul>\n<li>\n<p>场景中最亮的平行光总是按逐像素处理的。</p>\n</li>\n<li>\n<p>渲染模式被设置成 Not Important 的光源，会按逐顶点或者 SH 处理。・渲染模式被设置成 Important 的光源，会按逐像素处理。</p>\n</li>\n<li>\n<p>如果根据以上规则得到的逐像素光源数量小于 Quality Setting 中的逐像素光源数量 (Pixel Light Count)，会有更多的光源以逐像素的方式进行渲染。</p>\n</li>\n</ul>\n<h3 id=\"内置变量函数\"><a class=\"markdownIt-Anchor\" href=\"#内置变量函数\">#</a> 内置变量函数</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021420443.png\" alt=\"image-20220902142017381\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021420246.png\" alt=\"image-20220902142034183\"></p>\n<h3 id=\"相关参考\"><a class=\"markdownIt-Anchor\" href=\"#相关参考\">#</a> 相关参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85Mzg0NjAwMA==\">Unity 渲染路径 - 知乎 (zhihu.com)</span></p>\n<h2 id=\"顶点照明渲染路径\"><a class=\"markdownIt-Anchor\" href=\"#顶点照明渲染路径\">#</a> 顶点照明渲染路径</h2>\n<blockquote>\n<p>顶点照明渲染路径是对硬件配置要求最少、运算性能最高，但同时也是得到的效果最差的一种类型，它不支持那些逐像素才能得到的效果，例如阴影、法线映射、高精度的高光反射等。</p>\n</blockquote>\n<p>📖同理，使用逐顶点的方式进行光照计算。—— 是前向渲染的一个子集。</p>\n<h2 id=\"延迟渲染路径\"><a class=\"markdownIt-Anchor\" href=\"#延迟渲染路径\">#</a> 延迟渲染路径</h2>\n<blockquote>\n<p>当场景中包含大量实时光源时，前向选人的性能会急速下降。</p>\n</blockquote>\n<p>除了前向渲染中使用的颜色缓冲和深度缓冲之外，延迟渲染还需要利用额外的缓冲 —— 这些缓冲被统称为 GBuffer。</p>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209021438497.png\" alt=\"image-20220902143817442\"></p>\n<p>在光照计算 Pass 中直接存储法线，表面情况等，从 Gbuff 取到数据后直接在光照 Pass 中计算，故而延迟渲染和场景复杂度不挂钩，通常就只使用两个 Pass 完成故而效率较高。</p>\n<h3 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\">#</a> 缺点</h3>\n<ul>\n<li>不支持真正的抗锯齿（anti-aliasing）功能。</li>\n<li>不能处理半透明物体。</li>\n<li>对显卡有一定要求。如果要使用延迟渲染的话，显卡必须支持 MRT（Multiple Render Targets）、Shader Mode 3.0 及以上、深度渲染纹理以及双面的模板缓冲。</li>\n</ul>\n<blockquote>\n<p>通常我们使用前向渲染路径类型：)</p>\n</blockquote>\n<h2 id=\"unity光源类型\"><a class=\"markdownIt-Anchor\" href=\"#unity光源类型\">#</a> Unity 光源类型</h2>\n<h2 id=\"阴影\"><a class=\"markdownIt-Anchor\" href=\"#阴影\">#</a> 阴影</h2>\n<h3 id=\"不透明物体的阴影\"><a class=\"markdownIt-Anchor\" href=\"#不透明物体的阴影\">#</a> 不透明物体的阴影</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202209131137666.png\" alt=\"image-20220913113734111\"></p>\n<center>通过MeshRender可以设置阴影</center>\n<p>将 CastShaows 设置为 <code>Two Sided</code>  可以双面渲染。</p>\n<blockquote>\n<p>Unity 选择使用一个额外的 Pass 来专门更新光源的阴影映射纹理，这个 Pass 就是 <code>LightMode</code>  标签被设置为 <code>ShadowCaster</code>  的 <code>Pass</code> 。</p>\n</blockquote>\n<ul>\n<li>接收阴影：对阴影纹理进行采样，最终把阴影纹理和光照进行相乘。</li>\n<li>投射阴影：加入到光源的阴影纹理计算中，通过指定的 Pass 来实现，如果使用了屏幕空间投射，还会生成一张摄像机的深度图。</li>\n</ul>\n<h4 id=\"接收阴影\"><a class=\"markdownIt-Anchor\" href=\"#接收阴影\">#</a> 接收阴影</h4>\n<ol>\n<li>在 BasePass 中包含内置文件：</li>\n</ol>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AutoLight.cginc\"</span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在顶点着色器的输出结构体中添加 <code>SHADOW_COORDS</code></li>\n</ol>\n<p>SHADOW_COORDS(2)</p>\n<ol start=\"3\">\n<li>在顶点着色器返回之前添加一个内置宏 <code>TRANSFER_SHADOW</code></li>\n</ol>\n<p>TRANSFER_SHADOW(o)</p>\n<ol start=\"4\">\n<li>在片元着色器中计算阴影值，使用 <code>SHADOW_ATTENUATION</code></li>\n</ol>\n<p>fixed shadow=SHADOW_ATTENUATION(i)</p>\n<blockquote>\n<p>📖PS: 由于这些宏中会使用上下文变量来进行相关计算，例如 TRANSFER_SHADOW 会使用 v.vertex 或 a.pos 来计算坐标，因此为了能够让这些宏正确工作，我们需要保证自定义的变量名和这些宏中使用的变量名相匹配。我们需要保证：a2f 结构体中的顶点坐标变量名必须是 vertex，顶点着色器的输出结构体 v2f 必须命名为 v，且 v2f 中的顶点位置变量必须命名为 pos。</p>\n</blockquote>\n<h3 id=\"透明物体的阴影\"><a class=\"markdownIt-Anchor\" href=\"#透明物体的阴影\">#</a> 透明物体的阴影</h3>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/17/Unity%20Animator%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/",
            "url": "https://www.fasty97.top/2022/05/17/Unity%20Animator%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/",
            "title": "Unity Animator深入理解",
            "date_published": "2022-05-16T21:42:54.000Z",
            "content_html": "",
            "tags": [
                "状态机",
                "动画"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/16/Unity%20InputSystem%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2022/05/16/Unity%20InputSystem%E4%BD%BF%E7%94%A8/",
            "title": "Unity InputSystem使用",
            "date_published": "2022-05-16T07:08:41.000Z",
            "content_html": "<blockquote>\n<p>InputSystem 是 Unity 新推出的输入管理系统。</p>\n<p>相比传统的输入系统， <code>InputSystem </code> 支持对设备拔插状态监听和自定义按键映射。</p>\n</blockquote>\n<h1 id=\"以代码的方式运行\"><a class=\"markdownIt-Anchor\" href=\"#以代码的方式运行\">#</a> 以代码的方式运行</h1>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<p>以下为获取使用游戏手柄的方式。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取最后使用的游戏手柄</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> gamePad <span class=\"token operator\">=</span> Gamepad<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// print(gamePad.name);</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 持续判断按键按下</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamePad<span class=\"token punctuation\">.</span>dpad<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">.</span>isPressed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下 上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 按下一次执行一次</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamePad<span class=\"token punctuation\">.</span>dpad<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按 上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 获取左摇杆的值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>move <span class=\"token operator\">=</span> gamePad<span class=\"token punctuation\">.</span>leftStick<span class=\"token punctuation\">.</span><span class=\"token function\">ReadValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>同理可以获取键盘和鼠标的输入：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取当前的键盘</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> keyboard <span class=\"token operator\">=</span> Keyboard<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键盘：\"</span> <span class=\"token operator\">+</span> keyboard<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keyboard<span class=\"token punctuation\">.</span>kKey<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下K\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 获取当前的鼠标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mouse <span class=\"token operator\">=</span> Mouse<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>leftButton<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击鼠标左键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 兼容多个输入</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gamepad<span class=\"token punctuation\">.</span>aButton<span class=\"token punctuation\">.</span>wasPressedThisFrame <span class=\"token operator\">||</span> keyboard<span class=\"token punctuation\">.</span>jKey<span class=\"token punctuation\">.</span>wasPressedThisFrame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"攻击\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"获取连接设备\"><a class=\"markdownIt-Anchor\" href=\"#获取连接设备\">#</a> 获取连接设备</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 所有连接的游戏手柄</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> all <span class=\"token operator\">=</span> Gamepad<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> allGamepad <span class=\"token operator\">=</span> InputSystem<span class=\"token punctuation\">.</span>devices<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x <span class=\"token keyword\">is</span> <span class=\"token class-name\">Gamepad</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"监听设备改变事件\"><a class=\"markdownIt-Anchor\" href=\"#监听设备改变事件\">#</a> 监听设备改变事件</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>InputSystem<span class=\"token punctuation\">.</span>onDeviceChange <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> change<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">case</span> InputDeviceChange<span class=\"token punctuation\">.</span>Added<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新设备加入\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">case</span> InputDeviceChange<span class=\"token punctuation\">.</span>Disconnected<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"设备断开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">case</span> InputDeviceChange<span class=\"token punctuation\">.</span>Reconnected<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重新连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"inputactionasset映射\"><a class=\"markdownIt-Anchor\" href=\"#inputactionasset映射\">#</a> InputActionAsset 映射</h1>\n<blockquote>\n<p>通过输入信号指定 -&gt; 输入行为</p>\n<p>可以通过不同的输入信号 比如鼠标左右键 键盘 WASD 键 而这些输入信号又可以来自于不同的输入设备 比如鼠标 键盘 通过 InputSystem 各种输入设备可以无缝切换。</p>\n<p>也就是说 <strong>输入设备绑定了各种输入信号 而输入信号触发了输入动作</strong></p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517014535.png\" alt=\"\"></p>\n<h2 id=\"actionmaps动作表\"><a class=\"markdownIt-Anchor\" href=\"#actionmaps动作表\">#</a> ActionMaps (动作表)</h2>\n<blockquote>\n<p>动作表表示一套输入动作，可以同时拥有多个动作表，并切换使用</p>\n</blockquote>\n<p>注：指定动作表的 <code>Scheme</code>  来指定该动作表可以使用的游戏控制器</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517021443.png\" alt=\"image-20220517021443591\"></p>\n<p>使用多个动作表可以分离输入和动作，即使在动作表中存在一致的输入也不会冲突。</p>\n<p>Ps：玩家控制时使用 PlayerController 动作表、控制 UI 时使用 UI 动作表</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517015115.png\" alt=\"image-20220517015113956\"></p>\n<h3 id=\"actiontype\"><a class=\"markdownIt-Anchor\" href=\"#actiontype\">#</a> ActionType</h3>\n<p>其中 Value 指代各种连续变化的输入，比如鼠标移动，摇杆偏移，手柄扳机等，但这个选项只会获取当前受控制的一个设备输入。</p>\n<p>Button 则表示按钮输入，无论是鼠标按钮或是手柄按钮，其输入结果为布尔型。</p>\n<p>PassThrough 和 Value 基本相同，但它可以获取所有可用输入设备的输入。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517015834.png\" alt=\"image-20220517015834087\"></p>\n<h3 id=\"controltype\"><a class=\"markdownIt-Anchor\" href=\"#controltype\">#</a> ControlType</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517020054.png\" alt=\"image-20220517020054781\"></p>\n<p>生成 C# 类：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517021932.png\" alt=\"image-20220517021932810\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>全代码控制</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameInput</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PlayerControls</span> playerControls<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Rigidbody</span> rigidbody<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        playerControls<span class=\"token punctuation\">?.</span><span class=\"token function\">Enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDisable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        playerControls<span class=\"token punctuation\">?.</span><span class=\"token function\">Disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        playerControls<span class=\"token punctuation\">?.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        playerControls <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlayerControls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        rigidbody <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Rigidbody<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector2</span> moveDir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Jump<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"跃动\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            rigidbody<span class=\"token punctuation\">.</span><span class=\"token function\">AddForce</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Attack1<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"攻击\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Dpd<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下上键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Start<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Select<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下Select\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>L<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下L\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>LShouder<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"按下左肩键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Spell<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连按触发\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Spell2<span class=\"token punctuation\">.</span>performed <span class=\"token operator\">+=</span> x <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触发组合键\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        moveDir <span class=\"token operator\">=</span> playerControls<span class=\"token punctuation\">.</span>PlayerMap<span class=\"token punctuation\">.</span>Move<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">ReadValue</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>moveDir<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> moveDir<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/NotePad/20220517044539.png\" alt=\"image-20220517044539871\"></p>\n<h1 id=\"在移动设备中使用\"><a class=\"markdownIt-Anchor\" href=\"#在移动设备中使用\">#</a> 在移动设备中使用</h1>\n<blockquote>\n<p>在移动设备中，我们希望能处理操作轴和按钮两种输入事件。</p>\n<p>在 unity 官方 demo 中，提出了相关的解决方案。</p>\n</blockquote>\n<h1 id=\"在ui中使用\"><a class=\"markdownIt-Anchor\" href=\"#在ui中使用\">#</a> 在 UI 中使用</h1>\n<blockquote>\n<p>经过测试在 Ui 中和之前的使用没啥区别，唯一就是要把 EventSystem 的组件更改一下。</p>\n<p>同时之前的 Ipoint 系列接口也能够正常使用。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220517052201.png\" alt=\"image-20220517052201158\"></p>\n",
            "tags": [
                "输入系统",
                "手柄"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/15/%E5%85%B3%E4%BA%8E%E7%A7%91%E5%AD%A6%E4%BD%BF%E7%94%A8Spine3.8.75/",
            "url": "https://www.fasty97.top/2022/05/15/%E5%85%B3%E4%BA%8E%E7%A7%91%E5%AD%A6%E4%BD%BF%E7%94%A8Spine3.8.75/",
            "title": "关于科学使用Spine3.8.75",
            "date_published": "2022-05-14T17:24:56.000Z",
            "content_html": "<blockquote>\n<p>由于 Spine3.8.75 网络上传播太多，所以官方针对这个版本做了限制，由该版本导出的 Spine 动画不能在 Unity 中正确读取。</p>\n</blockquote>\n<h2 id=\"修改json\"><a class=\"markdownIt-Anchor\" href=\"#修改json\">#</a> 修改 json</h2>\n<p>在以 json 格式导出的动画中，可以直接编辑文件修改版本号，修改版本号后就可以被 Unity 正确识别了。</p>\n<h2 id=\"修改二进制\"><a class=\"markdownIt-Anchor\" href=\"#修改二进制\">#</a> 修改二进制</h2>\n<p>上面的方法虽然方便，但是处于对性能的考量，现在基本都是用二进制数据，通过测试发现，修改二进制文件的版本号同样可以正确使用。</p>\n<p>但是修改二进制十分麻烦，使用二进制查看器去改位非常麻烦，而且在每次导出时都需要修改一次才能正确使用。于是我做了一个简单的小工具。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>核心代码</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FileStream</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Open<span class=\"token punctuation\">,</span> FileAccess<span class=\"token punctuation\">.</span>ReadWrite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 找到的标志位</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fs<span class=\"token punctuation\">.</span>Position <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fs<span class=\"token punctuation\">.</span><span class=\"token function\">WriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fs<span class=\"token punctuation\">.</span><span class=\"token function\">WriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>核心代码如上，通过二进制查看器或，for 循环找出需要修改的数据的位置，然后写入即可。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220520071302.png\" alt=\"image-20220520071302609\"></p>\n<p>使用修正器属于修正的目录，就可以自动修正二进制文件，愉快的在 Unity 中使用了。</p>\n<p>Ps：此方法仅供学习交流，请大家多多支持正版。</p>\n",
            "tags": [
                "游戏开发小工具",
                "自制工具"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/15/%E4%BB%8E%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E6%9D%A5%E7%9C%8B-%E5%8D%81%E4%B8%89%E6%9C%BA%E5%85%B5%E9%98%B2%E5%8D%AB%E5%9C%88/",
            "url": "https://www.fasty97.top/2022/05/15/%E4%BB%8E%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E6%9D%A5%E7%9C%8B-%E5%8D%81%E4%B8%89%E6%9C%BA%E5%85%B5%E9%98%B2%E5%8D%AB%E5%9C%88/",
            "title": "从游戏设计开发来看-十三机兵防卫圈",
            "date_published": "2022-05-14T17:18:27.000Z",
            "content_html": "<p>11111111111</p>\n",
            "tags": [
                "读游戏",
                "互动叙事"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/05/13/%E6%88%91%E7%9A%84%E5%B7%A5%E5%85%B7%E9%9B%86FastyTools/",
            "url": "https://www.fasty97.top/2022/05/13/%E6%88%91%E7%9A%84%E5%B7%A5%E5%85%B7%E9%9B%86FastyTools/",
            "title": "我的工具集FastyTools",
            "date_published": "2022-05-13T03:35:15.000Z",
            "content_html": "<h2 id=\"写在开始\"><a class=\"markdownIt-Anchor\" href=\"#写在开始\">#</a> 写在开始</h2>\n<blockquote>\n<p>此文用于简单介绍 <code>FastyTools</code>  工具集，详细使用情况后面有空我再写。😃</p>\n</blockquote>\n<p><code>FastyTools</code>  是我个人一直在使用的一套 Unity 工具链，包含了一些 Unity 常用的功能封装和基础轮子，可以大大提升开发效率，我个人用起来很爽。</p>\n<h2 id=\"basesystem\"><a class=\"markdownIt-Anchor\" href=\"#basesystem\">#</a> BaseSystem</h2>\n<blockquote>\n<p>BaseSystem 是工具集的基础。</p>\n</blockquote>\n<p>包括以下内容：</p>\n<ol>\n<li>EventCenter 事件中心</li>\n<li>MonoController 全局 Mono</li>\n<li>ObjectPool 对象池</li>\n<li>ResLoad 资源加载</li>\n<li>Singleton 单例</li>\n</ol>\n<h2 id=\"gameplay\"><a class=\"markdownIt-Anchor\" href=\"#gameplay\">#</a> GamePlay</h2>\n<p>包括以下内容：</p>\n<ol>\n<li>\n<p>Bag 背包系统</p>\n</li>\n<li>\n<p>Csv  处理 Csv 的相关操作</p>\n</li>\n<li>\n<p>Localization 本地化</p>\n</li>\n<li>\n<p>Music 音效管理系统</p>\n</li>\n<li>\n<p>Save 存储系统</p>\n</li>\n<li>\n<p>SceneSwitch 场景选择器</p>\n</li>\n<li>\n<p>TurnSystem 回合制系统</p>\n</li>\n<li>\n<p>任务链系统</p>\n</li>\n</ol>\n<h2 id=\"numerical\"><a class=\"markdownIt-Anchor\" href=\"#numerical\">#</a> Numerical</h2>\n<p>包括以下内容：</p>\n<ol>\n<li>角色数值</li>\n<li>数据类型枚举</li>\n<li>玩家主角数据</li>\n<li>Skill 技能系统</li>\n<li>Buffer 系统</li>\n</ol>\n<h2 id=\"inputcenter\"><a class=\"markdownIt-Anchor\" href=\"#inputcenter\">#</a> InputCenter</h2>\n<p>包括：</p>\n<ol>\n<li>玩家输入中心</li>\n<li>Touch 输入</li>\n</ol>\n<h2 id=\"ai\"><a class=\"markdownIt-Anchor\" href=\"#ai\">#</a> AI</h2>\n<ol>\n<li>FSM 有限状态机</li>\n<li>Astar 寻路</li>\n<li>BT 行为树</li>\n</ol>\n<h2 id=\"ffgraphsystem\"><a class=\"markdownIt-Anchor\" href=\"#ffgraphsystem\">#</a> FFGraphSystem</h2>\n<ol>\n<li>Story 对话</li>\n<li>Gift 天赋树</li>\n<li>Flow 流程</li>\n</ol>\n<h2 id=\"相关功能的一些展示\"><a class=\"markdownIt-Anchor\" href=\"#相关功能的一些展示\">#</a> 相关功能的一些展示</h2>\n<h3 id=\"console控制台\"><a class=\"markdownIt-Anchor\" href=\"#console控制台\">#</a> Console 控制台</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713120625.png\" alt=\"image-20220713120625197\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713123704.png\" alt=\"image-20220713123704232\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713123741.png\" alt=\"image-20220713123741834\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713123955.png\" alt=\"image-20220713123955029\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713124014.png\" alt=\"image-20220713124014087\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713124107.png\" alt=\"image-20220713124107515\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713124120.png\" alt=\"image-20220713124119977\"></p>\n<h3 id=\"可视化结点管理\"><a class=\"markdownIt-Anchor\" href=\"#可视化结点管理\">#</a> 可视化结点管理</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713114413.png\" alt=\"image-20220713114406841\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713115650.png\" alt=\"image-20220713115649893\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220713120400.png\" alt=\"image-20220713120400229\"></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2022/05/02/%E5%9C%A8%E5%BC%80%E5%8F%91%E4%BA%92%E5%8A%A8%E5%8F%99%E4%BA%8B%E7%B1%BB%E6%B8%B8%E6%88%8F%E6%97%B6%E7%9A%84%E6%80%9D%E8%80%83/",
            "url": "https://www.fasty97.top/2022/05/02/%E5%9C%A8%E5%BC%80%E5%8F%91%E4%BA%92%E5%8A%A8%E5%8F%99%E4%BA%8B%E7%B1%BB%E6%B8%B8%E6%88%8F%E6%97%B6%E7%9A%84%E6%80%9D%E8%80%83/",
            "title": "在开发互动叙事类游戏时的思考",
            "date_published": "2022-05-01T19:00:00.000Z",
            "content_html": "<blockquote>\n<p>以下用于记录我在开发 <code>《如果世界没有你》</code> 时的一些思考</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220502031244.png\" alt=\"image-20220502031244404\"></p>\n<p><code>《如果世界没有你》</code> 是一款互动叙事类游戏，以下简称 <code>没你</code> ，起初我在接手时，一听伪 3D 的对话冒险游戏，我觉得我不是轻轻松松解决嘛，事实上在实际的游戏开发中，我还是发现了一些特殊的地方，由此文记录，以便日后自己在面对类似情况时少踩坑。</p>\n<h2 id=\"策划设计方面\"><a class=\"markdownIt-Anchor\" href=\"#策划设计方面\">#</a> 策划设计方面</h2>\n<p>在这种注重游戏互动叙事的游戏中，策划设计方案显得尤为重要 ，以下从游戏性和美术学方面讨论。</p>\n<h3 id=\"游戏性\"><a class=\"markdownIt-Anchor\" href=\"#游戏性\">#</a> 游戏性</h3>\n<blockquote>\n<p>游戏性的重要组成是游戏的核心玩法，对于普遍的解密探索类游戏来说，通过玩家点击，找到相关线索，使用道具，推进故事。</p>\n</blockquote>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105737323\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"55\" style=\"max-width: 534px;\" viewBox=\"0 0 534 55\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-玩家互动 LE-寻找线索\" id=\"L-玩家互动-寻找线索\" style=\"opacity: 1;\"><path class=\"path\" d=\"M92,27.5L117,27.5L142,27.5\" marker-end=\"url(#arrowhead17)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead17\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-寻找线索 LE-使用相关道具\" id=\"L-寻找线索-使用相关道具\" style=\"opacity: 1;\"><path class=\"path\" d=\"M226,27.5L251,27.5L276,27.5\" marker-end=\"url(#arrowhead18)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead18\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-使用相关道具 LE-推进故事\" id=\"L-使用相关道具-推进故事\" style=\"opacity: 1;\"><path class=\"path\" d=\"M392,27.5L417,27.5L442,27.5\" marker-end=\"url(#arrowhead19)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead19\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-玩家互动-4\" transform=\"translate(50,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">玩家互动</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-寻找线索-5\" transform=\"translate(184,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">寻找线索</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-使用相关道具-6\" transform=\"translate(334,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-58\" y=\"-19.5\" width=\"116\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-48,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">使用相关道具</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-推进故事-7\" transform=\"translate(484,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">推进故事</tspan></text></g></g></g></g></g></g></svg></pre><p>这是一套大家总结出来的通用的游戏流程，也是市面上最多的游戏流程。</p>\n<p>拿第一个场景（学校）来说几个可交互地点：</p>\n<ol>\n<li>学校大门</li>\n<li>猫</li>\n<li>商店</li>\n<li>路牌</li>\n</ol>\n<p>作为一个不大的场景，有 4 个交互点，其实并不算少，只是我们能否在有限的空间内利用出最大的效能，让玩家能够记住这个场景（除了外形之外情节上的记忆）。如果我们只是在这 4 个交互点显示一些暗淡冰冷的文字，玩家对于这些交互大概也不会留下什么感情，而且大概玩家在 3 分钟之内就会玩透这些交互并厌倦。</p>\n<h4 id=\"让玩家投入更多\"><a class=\"markdownIt-Anchor\" href=\"#让玩家投入更多\">#</a> 让玩家投入更多</h4>\n<p>玩家可以投入什么？</p>\n<p>不论是 <code>时间</code> 、 <code>感情</code> 、 <code>精神</code> 、 <code>金钱</code> 、… 总之得去做点什么</p>\n<p>让我们改变这个场景的设计，让玩家给我们的游戏 <code>投入</code> 。</p>\n<h4 id=\"让交互关联\"><a class=\"markdownIt-Anchor\" href=\"#让交互关联\">#</a> 让交互关联</h4>\n<blockquote>\n<p>无巧不成书，我们看书都知道，书总是围绕这那么几个角色在讲述 ，这些角色承担着剧情中不同的因素。</p>\n</blockquote>\n<p>游戏性的一大体现，让 <code>要素相关</code> 。</p>\n<h4 id=\"游戏反馈\"><a class=\"markdownIt-Anchor\" href=\"#游戏反馈\">#</a> 游戏反馈</h4>\n<blockquote>\n<p>游戏反馈作为老生常谈的话题，在任何游戏都至关重要。</p>\n</blockquote>\n<p>在横版过关游戏中，例如超级玛丽，使用金币为玩家建立正反馈，因为金币，游戏作者可以 <code>控制</code> 玩家的路线，因为金币玩家不觉得这一路往前走是跑步模拟器，也因为金币玩家愿意到一些压根不用走的道路，金币给道路赋予了意义。</p>\n<p>现在来看这个游戏，玩家的行走的意义在于什么？对于故事谜团的好奇。</p>\n<p>这应该是最核心最能抓住玩家的 <code>意义</code> 。</p>\n<h4 id=\"如何设计\"><a class=\"markdownIt-Anchor\" href=\"#如何设计\">#</a> 如何设计</h4>\n<blockquote>\n<p>作为游戏的第一个场景，承担了很大的责任，要交代故事，同时也要教会玩家游戏的操作方式和核心玩法。</p>\n</blockquote>\n<h3 id=\"美术学\"><a class=\"markdownIt-Anchor\" href=\"#美术学\">#</a> 美术学</h3>\n<blockquote>\n<p>美术就像是一个人的衣服，玩家的第一印象多半来自于美术。</p>\n</blockquote>\n<p>在项目中，使用 3D 模型 + 2D 纸片的复合方式来搭建游戏场景，这样的设计并非是我们独创，例如在八方旅人中就使用了这种设计风格。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220515010626.png\" alt=\"image-20220515010608309\"></p>\n<p>PS🎏 : 以前是因为硬件和软件的多方限制导致游戏表现，现在的游戏可以选择很多不同方面的技术来提升游戏效果，传统意义上的 2D 和 3D 游戏的界限已经变得逐渐模糊。</p>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h2>\n<p>关于在游戏程序向设计和开发中的思考，请看在开发互动叙事类游戏的程序设计思考。</p>\n",
            "tags": [
                "互动叙事",
                "实战项目",
                "解密探索",
                "开发总结"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/04/01/Unity%20tip%E6%8F%90%E7%A4%BA%E6%A1%86%E9%97%AA%E7%83%81/",
            "url": "https://www.fasty97.top/2022/04/01/Unity%20tip%E6%8F%90%E7%A4%BA%E6%A1%86%E9%97%AA%E7%83%81/",
            "title": "Unity tip提示框闪烁",
            "date_published": "2022-04-01T09:51:42.000Z",
            "content_html": "<h1 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h1>\n<p>在我们制作如下的提示框时，会使用到 <code>IPointerEnterHandler, IPointerExitHandler</code></p>\n<blockquote>\n<p>但是，会出现提示框闪烁（其实是进入离开疯狂调用）</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220401175208.png\" alt=\"image-20220401175200980\"></p>\n<h1 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\">#</a> 解决方案</h1>\n<ol>\n<li>将提示框射线检测去掉（避免新生成的提示框隔断）</li>\n<li>控制提示框的锚点远离一些</li>\n<li>为提示框添加组件</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220401175514.png\" alt=\"image-20220401175514800\"></p>\n",
            "tags": [
                "Unity",
                "坑"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/03/15/2022-%E7%9B%AE%E6%A0%87%E5%92%8C%E6%96%B9%E5%90%91/",
            "url": "https://www.fasty97.top/2022/03/15/2022-%E7%9B%AE%E6%A0%87%E5%92%8C%E6%96%B9%E5%90%91/",
            "title": "2022-目标和方向",
            "date_published": "2022-03-15T02:34:22.000Z",
            "content_html": "<blockquote>\n<p>此文用于计划 <code>2022</code>  年的目标。</p>\n</blockquote>\n<h2 id=\"总体目标\"><a class=\"markdownIt-Anchor\" href=\"#总体目标\">#</a> 🔝 总体目标</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> 找到一份合适工作</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\"><label for=\"cbx_1\"> 购置一台 4K 显示器</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\"> 发布一套课程</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\"><label for=\"cbx_3\"> Bili Bili 粉丝 &gt; 3000</label></li>\n</ul>\n<h2 id=\"unity技术目标\"><a class=\"markdownIt-Anchor\" href=\"#unity技术目标\">#</a> 📜 Unity 技术目标</h2>\n<blockquote>\n<p>研究新的技术配套游戏框架</p>\n</blockquote>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\"><label for=\"cbx_4\"> UIElement 学习</label></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\"><label for=\"cbx_5\"> 考虑设计一套资源管理器替换 Odin</label></li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_6\" checked=\"true\" disabled=\"true\"><label for=\"cbx_6\"> GraphView 学习 （尝试之后考虑使用原先的 xnode 方式）</label></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" checked=\"true\" disabled=\"true\"><label for=\"cbx_7\"> 设计一套通用的 graph 框架</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" checked=\"true\" disabled=\"true\"><label for=\"cbx_8\"> 移植天赋树系统</label></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"shader\"><a class=\"markdownIt-Anchor\" href=\"#shader\">#</a> Shader</h3>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\"><label for=\"cbx_9\"> shader 入门精要</label></li>\n</ul>\n<h2 id=\"️美术音乐目标\"><a class=\"markdownIt-Anchor\" href=\"#️美术音乐目标\">#</a> ❤️美术音乐目标</h2>\n<blockquote>\n<p>为了独立游戏梦，程序员也要学美术​音乐😄。</p>\n<p>这个部分的目标较为不明确，会将学习成果记录在下面的各项中。</p>\n</blockquote>\n<h3 id=\"绘画\"><a class=\"markdownIt-Anchor\" href=\"#绘画\">#</a> 绘画</h3>\n<blockquote>\n<p>考虑学习像素画和板绘，角色原画，特效等</p>\n</blockquote>\n<h3 id=\"动画\"><a class=\"markdownIt-Anchor\" href=\"#动画\">#</a> 动画</h3>\n<blockquote>\n<p>考虑学习 Spine 骨骼 2D 动画</p>\n</blockquote>\n<h3 id=\"建模\"><a class=\"markdownIt-Anchor\" href=\"#建模\">#</a> 建模</h3>\n<blockquote>\n<p>考虑学习 Blender 的角色建模，简单场景的搭建</p>\n</blockquote>\n<h3 id=\"编曲\"><a class=\"markdownIt-Anchor\" href=\"#编曲\">#</a> 编曲</h3>\n<blockquote>\n<p>学习基础乐理和常用的电子乐器，目标是能编制简单的曲子。</p>\n</blockquote>\n<h2 id=\"项目目标\"><a class=\"markdownIt-Anchor\" href=\"#项目目标\">#</a> 💭 项目目标</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\"><label for=\"cbx_10\"> 完善卡牌游戏</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\"><label for=\"cbx_11\"> 制作一个练手塔防游戏</label></li>\n</ul>\n<h2 id=\"读书目标\"><a class=\"markdownIt-Anchor\" href=\"#读书目标\">#</a> 📚 读书目标</h2>\n<blockquote>\n<p>读一点杂书，开阔自己的视野。</p>\n<p><code>阅读2本以上课外书</code></p>\n</blockquote>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_12\" disabled=\"true\"><label for=\"cbx_12\"> 追风筝的人 - 完成书评</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_13\" disabled=\"true\"><label for=\"cbx_13\"> 1Q84 - 完成书评</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_14\" checked=\"true\" disabled=\"true\"><label for=\"cbx_14\"> 《游戏编程模式》</label></li>\n</ul>\n",
            "tags": [
                "总结",
                "目标"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/03/07/Unity%E6%88%AA%E5%9B%BE%E4%BF%9D%E5%AD%98/",
            "url": "https://www.fasty97.top/2022/03/07/Unity%E6%88%AA%E5%9B%BE%E4%BF%9D%E5%AD%98/",
            "title": "Unity截图保存",
            "date_published": "2022-03-07T10:20:39.000Z",
            "content_html": "<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<p>以下是关于一个游戏存档的设计，包括截取游戏画面，记录时间和存储数据等内容，记录一下，以备以后回顾。</p>\n<blockquote>\n<p>大致的效果如下，将所有存档展示出来，有截图对应，点选载入存档。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220302204934.png\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> Application<span class=\"token punctuation\">.</span>persistentDataPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/aa111.png\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"PATH:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">path</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ScreenCapture<span class=\"token punctuation\">.</span><span class=\"token function\">CaptureScreenshot</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 截图并保存截图文件</span></pre></td></tr></table></figure><blockquote>\n<p>结合存档系统，就可以设计出如下所示的存档功能</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220302230034.gif\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 游戏管理器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameManager</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">SingletonManager<span class=\"token punctuation\">&lt;</span>GameManager<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> startScene <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> startLine <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Unity",
                "存档系统",
                "截图"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/02/04/%E5%83%8F%E7%B4%A0%E7%94%BB-1%20%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE/",
            "url": "https://www.fasty97.top/2022/02/04/%E5%83%8F%E7%B4%A0%E7%94%BB-1%20%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE/",
            "title": "像素画-1 常用功能和快捷键",
            "date_published": "2022-02-04T04:21:25.000Z",
            "content_html": "<h2 id=\"软件选择\"><a class=\"markdownIt-Anchor\" href=\"#软件选择\">#</a> 软件选择</h2>\n<blockquote>\n<p>在软件选择上，对于我这种没有绘画基础的程序员来说，果断选择了轻量级的 <code>Aseprite</code> 。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20220204122833.png\" alt=\"image-20220204122833691\"></p>\n<h3 id=\"工作界面\"><a class=\"markdownIt-Anchor\" href=\"#工作界面\">#</a> 工作界面</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20220204124222.png\" alt=\"image-20220204124222847\"></p>\n<center>工作界面</center>\n<p>如图可以看到工作界面，在界面上有 <code>菜单栏</code> 、 <code>颜色选择器</code> 、 <code>工具栏</code> 、 <code>主工作区</code> 和 <code>动画帧图层工作区</code> 几个部分组成。</p>\n<h3 id=\"快捷键\"><a class=\"markdownIt-Anchor\" href=\"#快捷键\">#</a> 快捷键</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">快捷按键</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">B</td>\n<td>画笔</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">L</td>\n<td>线条工具</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">U</td>\n<td>形状工具</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">D</td>\n<td>轮廓工具，它的功能是在你画出任意形状的轮廓之后将这个轮廓自动填充颜色。这个工具能让你快速绘制任意形状的实色物体。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">I</td>\n<td>拾色器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">G</td>\n<td>油漆桶</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "像素画",
                "Aseprite"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/02/03/Unity%20ScrollView(%E6%BB%91%E5%8A%A8%E5%8C%BA%E5%9F%9F)%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2022/02/03/Unity%20ScrollView(%E6%BB%91%E5%8A%A8%E5%8C%BA%E5%9F%9F)%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "Unity ScrollView(滑动区域)的使用",
            "date_published": "2022-02-03T07:56:37.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<blockquote>\n<p>🔹ScrollView 是我们经常使用的一个 UI 组件，但时常容易忘记具体的使用细节，故在此文予以记录。<ins>主要用于需要滑动的区域</ins></p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20220203155850.png\" alt=\"image-20220203155843510\"></p>\n<center>ScrollView组件如图所示</center>\n<h1 id=\"组成部分\"><a class=\"markdownIt-Anchor\" href=\"#组成部分\">#</a> 组成部分</h1>\n<blockquote>\n<p>ScrollView 包含 Content、Scrollbar、OneValueChange 三部分组成。</p>\n</blockquote>\n<ol>\n<li>Content 用于显示内容，通过 mask 遮罩来过滤大于显示区域的内容。</li>\n<li>Scrollbar 用于滚动条、</li>\n<li>OneValueChange 用于滚动监听</li>\n</ol>\n<h1 id=\"使用示例\"><a class=\"markdownIt-Anchor\" href=\"#使用示例\">#</a> 使用示例</h1>\n<p><ins>注意在 Content 中设定好大小，保证能够包裹所有子物体</ins></p>\n<p>也可以添加<img data-src=\"http://pic.fasty97.top/NotePad/20220203162937.png\" alt=\"image-20220203162937825\"></p>\n<p>制作完成效果如图所示：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20220203163135.gif\" alt=\"ani\"></p>\n",
            "tags": [
                "Unity",
                "UI组件"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/01/17/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "url": "https://www.fasty97.top/2022/01/17/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "title": "2021年终总结",
            "date_published": "2022-01-17T09:17:43.000Z",
            "content_html": "<p><ins>2021</ins> 年不知不觉就过去了，不知道为什么，我感觉时间过得越来越快了🙂.</p>\n<p><span class=\"spoiler\" title=\"...\">回首过去的一年里，我好像也没做什么事情</span></p>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<blockquote>\n<p>我向来觉得对自己的生活进行阶段性记录是很有必要的，通过这种方式可以记录下很多东西，在迷茫时看看从前的自己说不定能获得什么能量吧～</p>\n</blockquote>\n<h2 id=\"关于自设框架\"><a class=\"markdownIt-Anchor\" href=\"#关于自设框架\">#</a> 关于自设框架</h2>\n<h3 id=\"数值系统\"><a class=\"markdownIt-Anchor\" href=\"#数值系统\">#</a> 数值系统</h3>\n<p>引入了数据修改器的概念，所以对于游戏的各种数据都需要分门别类的管理，特别是针对于 Character 的数据。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220125114721.png\" alt=\"数值系统\"></p>\n<h3 id=\"任务系统\"><a class=\"markdownIt-Anchor\" href=\"#任务系统\">#</a> 任务系统</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220125114810.png\" alt=\"image-20220125114810766\"></p>\n<h3 id=\"buff系统\"><a class=\"markdownIt-Anchor\" href=\"#buff系统\">#</a> buff 系统</h3>\n<p>关于 Buff 系统在我的自制框架中，制作了一版实时的，在开发回合制卡牌游戏原型时，发现回合制的 Buff 和实时的 Buff 有较大差别，重新设计了一版回合制的，考虑在之后放入到自制框架中。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220125115301.png\" alt=\"Buffer系统\"></p>\n<h2 id=\"关于我开始成为up主\"><a class=\"markdownIt-Anchor\" href=\"#关于我开始成为up主\">#</a> 关于我开始成为 Up 主</h2>\n<blockquote>\n<p>在 Bilibili 投稿成为偶像？哈</p>\n</blockquote>\n<h3 id=\"兴趣点\"><a class=\"markdownIt-Anchor\" href=\"#兴趣点\">#</a> 兴趣点</h3>\n<p>大概是想要获得一些成就感来鼓励自己单调的生活吧，我开始发布一些编程相关的教程和知识分享，教别人的学习效率大概是自学的 2 倍吧❤️，同时也希望能够记录自己的成长。</p>\n<h3 id=\"视频收益\"><a class=\"markdownIt-Anchor\" href=\"#视频收益\">#</a> 视频收益</h3>\n<p>哈哈哈，在制作视频的时候我是没想过能够在经济上有什么获得的，但现在 b 站的投稿大环境还是挺好的，各种各样的活动和推广。</p>\n<p>在精心制作一天之后，我发出了这个教程（也是目前我最成功的一个视频😺), 前后有 30 块左右收益，粉丝也涨了近 300 左右。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220125120136.png\" alt=\"image-20220125115931021\"></p>\n<h2 id=\"关于新设备\"><a class=\"markdownIt-Anchor\" href=\"#关于新设备\">#</a> 关于新设备</h2>\n<h3 id=\"小米11\"><a class=\"markdownIt-Anchor\" href=\"#小米11\">#</a> 小米 11</h3>\n<blockquote>\n<p>总而言之：小爱同学很好用，小米 11 很垃圾。</p>\n</blockquote>\n<h3 id=\"switch\"><a class=\"markdownIt-Anchor\" href=\"#switch\">#</a> Switch</h3>\n<blockquote>\n<p>自 PSV 之后，好久没碰掌机了。</p>\n<p>实际体验下来，掌机平台的游戏确实和 PC 的有很大的差距，介于硬件的差异，switch 上很多游戏在画质上并比不上 PC，但他们巧妙的利用掌机的特性，提供了非常多 PC 所不能提供的功能，例如面对面多人连接，把 2 台 Switch 靠在一起就可以进行画面的拼合，感觉很奇妙😄.</p>\n</blockquote>\n<h3 id=\"麦克风\"><a class=\"markdownIt-Anchor\" href=\"#麦克风\">#</a> 麦克风</h3>\n<blockquote>\n<p>因为录制教程的关系，购置了闪客 461T 麦克风，但感觉还是有不小的底噪，使用 obs 降噪后勉强可用。</p>\n<p>果然还是太便宜了吗😂</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20220117183236.png\" alt=\"image-20220117183236853\"></p>\n<h3 id=\"数位板\"><a class=\"markdownIt-Anchor\" href=\"#数位板\">#</a> 数位板</h3>\n<blockquote>\n<p>购置了一块超便宜的高漫数位板，录制教程的时候可以画画图，自己平时也可以画画风景什么的，= 不过要拿出作品可能还需要超级久吧 =。</p>\n</blockquote>\n<h2 id=\"关于好剧\"><a class=\"markdownIt-Anchor\" href=\"#关于好剧\">#</a> 关于好剧</h2>\n<h3 id=\"动漫\"><a class=\"markdownIt-Anchor\" href=\"#动漫\">#</a> 动漫</h3>\n<ol>\n<li>\n<p>世界顶尖的暗杀者</p>\n<p>优质的作画和精心设计的剧情，感觉是最近最强了吧。</p>\n<p><img data-src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farticle%2F56e339f84b90d6f60980ed003311c220863fbc0f.jpg&amp;refer=http%3A%2F%2Fi0.hdslb.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1645634472&amp;t=3957a9b0aff315dff6ab3e4bec92522b\" alt=\"img\"></p>\n</li>\n<li>\n<p>超智游戏</p>\n<p>偶然发现的好番，有点像之前看过的赌博默示录系列，但主要讲的是棒球比赛中关于人性的一些猜测和打压，虽然是运动番（个人并不喜欢运动番😃)，但玩心理的感觉真的很爽！</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/R-C.jfif\" alt=\"\"></p>\n</li>\n<li>\n<p>忧国的莫里亚蒂</p>\n</li>\n</ol>\n<p>和福尔摩斯的对手戏很精彩，站在黑暗面拯救社会的感觉.</p>\n<p><img data-src=\"https://tse1-mm.cn.bing.net/th/id/R-C.c575d33286b566da93d4a1fd599764fb?rik=501XO4Zuz6VTxg&amp;riu=http%3a%2f%2fimage.lnstzy.cn%2faoaodcom%2f2020-09%2f15%2f202009150838262f418a37942fac72acfba3d6ca57bb8c.jpg.h700.jpg&amp;ehk=S1lmKKr4IHBoCa%2b0jZsqR0%2b2upX4TsI%2b6fwPTvImlTE%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0\" alt=\"查看源图像\"></p>\n<h3 id=\"电视剧\"><a class=\"markdownIt-Anchor\" href=\"#电视剧\">#</a> 电视剧</h3>\n<ol>\n<li>青瓷</li>\n<li>3 年 A 班 [日]</li>\n<li>孤独的美食家 [日]</li>\n</ol>\n<h2 id=\"关于编制\"><a class=\"markdownIt-Anchor\" href=\"#关于编制\">#</a> 关于编制</h2>\n<p>还有大概 2 次机会（几个月时间），是时候决出胜负了！🔥</p>\n<h2 id=\"新年祈愿\"><a class=\"markdownIt-Anchor\" href=\"#新年祈愿\">#</a> 🚄新年祈愿</h2>\n<p>在新的一年里，希望自己能够事事顺利，以下是几个小目标：</p>\n<blockquote>\n<p>改一改自己的拖延症，今日事今日毕</p>\n</blockquote>\n<ol>\n<li>b 站粉丝数 &gt; 8000</li>\n<li>发布一套自己的专属课程</li>\n<li>找到一个心仪的工作</li>\n<li>完善 FanlFrameWork 的开发</li>\n<li>…</li>\n</ol>\n",
            "tags": [
                "生活",
                "年终总结"
            ]
        },
        {
            "id": "https://www.fasty97.top/2022/01/06/%E7%B1%BB%E6%9D%80%E6%88%AE%E5%B0%96%E5%A1%94-%E5%8D%A1%E7%89%8C%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E6%80%BB%E7%BB%93/",
            "url": "https://www.fasty97.top/2022/01/06/%E7%B1%BB%E6%9D%80%E6%88%AE%E5%B0%96%E5%A1%94-%E5%8D%A1%E7%89%8C%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E6%80%BB%E7%BB%93/",
            "title": "类杀戮尖塔-卡牌游戏原型总结",
            "date_published": "2022-01-05T16:19:55.000Z",
            "content_html": "<blockquote>\n<p>现在是 2022 年 12 月 29 日 16:22:06 没想到拖了整整一年才捡起这件事。</p>\n<p>回顾整个项目，虽然完成了很多通用的模块，但这些模型也仅仅只是 demo 级别，尚还缺乏验证，且游戏设计思想仍然不够完整，对于游戏地图的设计也缺乏确定的解决方案。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212291634128.png\" alt=\"image-20221229163422695\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212291634235.png\" alt=\"image-20221229163443191\"></p>\n",
            "tags": [
                "自制项目"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/12/28/C#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%B9%E6%80%A7/",
            "url": "https://www.fasty97.top/2021/12/28/C#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%B9%E6%80%A7/",
            "title": "C#自定义特性",
            "date_published": "2021-12-28T11:51:01.000Z",
            "content_html": "<blockquote>\n<p>自定义特性可以用来标记一些类或类成员</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Test</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Author</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fasty\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">Test</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 用反射获取自定义特性</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Type</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> attr <span class=\"token operator\">=</span> Attribute<span class=\"token punctuation\">.</span><span class=\"token function\">GetCustomAttributes</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> attribute <span class=\"token keyword\">in</span> attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attribute <span class=\"token keyword\">is</span>  <span class=\"token class-name\">AuthorAttribute</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> a <span class=\"token operator\">=</span> attribute <span class=\"token keyword\">as</span> <span class=\"token class-name\">AuthorAttribute</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 自定义特性</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">AttributeUsage</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>AttributeTargets<span class=\"token punctuation\">.</span>Class <span class=\"token operator\">|</span> AttributeTargets<span class=\"token punctuation\">.</span>Struct<span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AuthorAttribute</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Attribute</span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> version<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">AuthorAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            version <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/12/14/%E9%89%B4%E8%B5%8F%E3%80%90%E7%81%AB%E7%84%B0%E7%BA%B9%E7%AB%A0%20%E9%A3%8E%E8%8A%B1%E9%9B%AA%E6%9C%88%E3%80%91/",
            "url": "https://www.fasty97.top/2021/12/14/%E9%89%B4%E8%B5%8F%E3%80%90%E7%81%AB%E7%84%B0%E7%BA%B9%E7%AB%A0%20%E9%A3%8E%E8%8A%B1%E9%9B%AA%E6%9C%88%E3%80%91/",
            "title": "鉴赏【火焰纹章 风花雪月】",
            "date_published": "2021-12-14T09:14:43.000Z",
            "content_html": "<h2 id=\"起\"><a class=\"markdownIt-Anchor\" href=\"#起\">#</a> 起</h2>\n<p>第一次接触到战旗回合制游戏是在初中时，那时候玩了一个 xx 神剑录（大概吧，记不清了）的游戏。自那之后对于战旗游戏就一发不可收拾，后来认识了 <code>火焰纹章</code> 。</p>\n<p>那个时候，通过 GBA 模拟器玩的火焰纹章封印之剑和圣魔之光石陪我度过了初中。</p>\n<ul>\n<li>封印之剑</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://pic.fasty97.top/NotePad/20211221223456.jpg\" alt=\"封面\"><br>\n<img data-src=\"https://pic.fasty97.top/NotePad/20211221223621.jpeg\" alt=\"战斗\"><br>\n<img data-src=\"https://pic.fasty97.top/NotePad/20211221223641.jpeg\" alt=\"人物面板\"></p>\n<ul>\n<li>圣魔之光石</li>\n</ul>\n<p class=\"gallery\" data-height=\"200\"><img data-src=\"https://pic.fasty97.top/NotePad/20211221224251.jpg\" alt=\"开始界面\"><br>\n<img data-src=\"https://pic.fasty97.top/NotePad/20211221224258.jpg\" alt=\"A\"><br>\n<img data-src=\"https://pic.fasty97.top/NotePad/20211221224302.png\" alt=\"C\"></p>\n<h2 id=\"现在\"><a class=\"markdownIt-Anchor\" href=\"#现在\">#</a> 现在</h2>\n",
            "tags": [
                "switch",
                "回合制"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/12/07/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%94%EF%BC%89Shader%E5%85%A5%E9%97%A8/",
            "url": "https://www.fasty97.top/2021/12/07/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%94%EF%BC%89Shader%E5%85%A5%E9%97%A8/",
            "title": "Unity入门精要（五）Shader入门",
            "date_published": "2021-12-07T07:31:05.000Z",
            "content_html": "",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/12/04/shaderGraph%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E9%87%8A%E4%B9%89/",
            "url": "https://www.fasty97.top/2021/12/04/shaderGraph%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E9%87%8A%E4%B9%89/",
            "title": "shaderGraph常用功能释义",
            "date_published": "2021-12-04T05:56:51.000Z",
            "content_html": "<blockquote>\n<p>本文用于记录一些使用 Shader 实现的基础性效果</p>\n<p>Unity2020.3.8f1</p>\n</blockquote>\n<h1 id=\"基础设置\"><a class=\"markdownIt-Anchor\" href=\"#基础设置\">#</a> 基础设置</h1>\n<p>创建一个空 Shader，可以设置 Graph 以满足需要。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204140159.png\" alt=\"image-20211204140152535\"></p>\n<h1 id=\"顶点着色器\"><a class=\"markdownIt-Anchor\" href=\"#顶点着色器\">#</a> 顶点着色器</h1>\n<h2 id=\"法线外扩\"><a class=\"markdownIt-Anchor\" href=\"#法线外扩\">#</a> 法线外扩</h2>\n<blockquote>\n<p>可以改变一个模型的大小</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204141255.png\" alt=\"image-20211204141255134\"></p>\n<p>其中获取法线方向也可以使用：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204144226.png\" alt=\"image-20211204144226426\"></p>\n<p>通过将法线位置（物体本地位置）归一化得到法线，然后乘以一个数值来实现。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204141734.gif\" alt=\"112\"></p>\n<h2 id=\"模型裁切\"><a class=\"markdownIt-Anchor\" href=\"#模型裁切\">#</a> 模型裁切</h2>\n<blockquote>\n<p>原理： <code>AlphaClip</code>  的值如果比 <code>Alpha</code>  的值大，则会不显示</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204153235.png\" alt=\"image-20211204153235344\"></p>\n<p>简单效果预览：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211204153431.gif\" alt=\"112\"></p>\n<p>加强版本</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207153433.png\" alt=\"image-20211207153426670\"></p>\n<p>效果预览</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207153856.gif\" alt=\"112\"></p>\n<h3 id=\"remap-重映射\"><a class=\"markdownIt-Anchor\" href=\"#remap-重映射\">#</a> Remap 重映射</h3>\n<blockquote>\n<p>根据输入 In 在 InMinMax 中的插值，计算输出。(按照比例位置输出)</p>\n</blockquote>\n<p>比如输入 In 为 0，InMinMax 时（-10，10），那么 In 在 InMinMax 的<br>\n位置就是 0.5，如果 OutMinMax 为（0，10），那么输出 Out 就是 5<br>\n 公式为： Out = OutMinMax.x + (In - InMinMax.x) * (OutMinMax.y - OutMinMax.x) / (InMinMax.y -<br>\nInMinMax.x)</p>\n<h3 id=\"one-minus-1减去\"><a class=\"markdownIt-Anchor\" href=\"#one-minus-1减去\">#</a> One Minus 1 减去</h3>\n<blockquote>\n<p>输出 1-in</p>\n</blockquote>\n<h3 id=\"step-阶梯\"><a class=\"markdownIt-Anchor\" href=\"#step-阶梯\">#</a> Step 阶梯</h3>\n<blockquote>\n<p>输入 in 大于等于 Edge 取 1，否则取 0</p>\n</blockquote>\n<h2 id=\"溶解\"><a class=\"markdownIt-Anchor\" href=\"#溶解\">#</a> 溶解</h2>\n<blockquote>\n<p>原理： <code>AlphaClip</code>  的值如果比 <code>Alpha</code>  的值大，则会不显示</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207162307.gif\" alt=\"112\"></p>\n<h3 id=\"边缘发光\"><a class=\"markdownIt-Anchor\" href=\"#边缘发光\">#</a> 边缘发光</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207163904.png\" alt=\"image-20211207163904223\"></p>\n<p>效果预览</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207164030.gif\" alt=\"112\"></p>\n<h3 id=\"subtract-减法\"><a class=\"markdownIt-Anchor\" href=\"#subtract-减法\">#</a> Subtract 减法</h3>\n<blockquote>\n<p>A-B</p>\n</blockquote>\n<h3 id=\"saturate-0-1\"><a class=\"markdownIt-Anchor\" href=\"#saturate-0-1\">#</a> Saturate 0-1</h3>\n<blockquote>\n<p>将输入控制在 [0-1]</p>\n</blockquote>\n<h2 id=\"边缘发光-2\"><a class=\"markdownIt-Anchor\" href=\"#边缘发光-2\">#</a> 边缘发光</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207165311.png\" alt=\"image-20211207165311854\"></p>\n<h2 id=\"简单卡通效果\"><a class=\"markdownIt-Anchor\" href=\"#简单卡通效果\">#</a> 简单卡通效果</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207171547.png\" alt=\"image-20211207171547100\"></p>\n<h3 id=\"dot-product-点乘\"><a class=\"markdownIt-Anchor\" href=\"#dot-product-点乘\">#</a> Dot Product 点乘</h3>\n<blockquote>\n<p>计算 2 个向量点乘</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207171656.png\" alt=\"image-20211207171656516\"></p>\n<h2 id=\"表面叠加\"><a class=\"markdownIt-Anchor\" href=\"#表面叠加\">#</a> 表面叠加</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207173140.png\" alt=\"image-20211207173140006\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207173246.gif\" alt=\"112\"></p>\n<h3 id=\"tiling-and-offset-平铺和偏移\"><a class=\"markdownIt-Anchor\" href=\"#tiling-and-offset-平铺和偏移\">#</a> Tiling And Offset 平铺和偏移</h3>\n<p>这个功能我们会经常用到，一般只要有贴图的材质上都会有 Tiling And Offset。<br>\n将输入参数 UV 的值，通过 Tiling 和 Offset 改变平铺和偏移。</p>\n<h2 id=\"像素化\"><a class=\"markdownIt-Anchor\" href=\"#像素化\">#</a> 像素化</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211207182510.gif\" alt=\"112\"></p>\n<h2 id=\"粒子消融\"><a class=\"markdownIt-Anchor\" href=\"#粒子消融\">#</a> 粒子消融</h2>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/12/03/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%9B%9B%EF%BC%89%20%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/",
            "url": "https://www.fasty97.top/2021/12/03/Unity%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E5%9B%9B%EF%BC%89%20%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/",
            "title": "Unity入门精要（四） 数学基础",
            "date_published": "2021-12-03T15:18:37.000Z",
            "content_html": "<blockquote>\n<p>最常使用到的就是矢量和矩阵（数学的分支之一 —— 线性代数）</p>\n</blockquote>\n<h1 id=\"笛卡尔坐标系\"><a class=\"markdownIt-Anchor\" href=\"#笛卡尔坐标系\">#</a> 笛卡尔坐标系</h1>\n<blockquote>\n<p>大部分的计算位置、距离和角度等变量都是在笛卡尔坐标系下进行的。</p>\n</blockquote>\n<h2 id=\"二维笛卡尔坐标系\"><a class=\"markdownIt-Anchor\" href=\"#二维笛卡尔坐标系\">#</a> 二维笛卡尔坐标系</h2>\n<ul>\n<li>一个特殊的位置，原点，它是整个坐标系的中心</li>\n<li>两条过原点相互垂直的矢量，x 轴和 y 轴。</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203134502.png\" alt=\"image-20211203134455788\"></p>\n<blockquote>\n<p>不同的渲染方式，坐标系不同</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203134650.png\" alt=\"image-20211203134650147\"></p>\n<h2 id=\"三维笛卡尔坐标系\"><a class=\"markdownIt-Anchor\" href=\"#三维笛卡尔坐标系\">#</a> 三维笛卡尔坐标系</h2>\n<ul>\n<li>三个坐标轴相互垂直，长度为 1，这样的基矢量被称为标准正交基</li>\n<li>这三个坐标轴被称为是基矢量</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203134755.png\" alt=\"image-20211203134755628\"></p>\n<h2 id=\"左手坐标系和右手坐标系\"><a class=\"markdownIt-Anchor\" href=\"#左手坐标系和右手坐标系\">#</a> 左手坐标系和右手坐标系</h2>\n<blockquote>\n<p>在二维笛卡尔坐标系中，我们可以通过旋转将任何的坐标系重合，也就是说所有的二维笛卡尔坐标系都是等价的。</p>\n<p>但对于 <code>三维坐标系</code> ，有时不能靠这种旋转来使 2 个不同朝向的坐标系重合。</p>\n</blockquote>\n<h3 id=\"左手坐标系\"><a class=\"markdownIt-Anchor\" href=\"#左手坐标系\">#</a> 左手坐标系</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203135648.png\" alt=\"image-20211203135647988\"></p>\n<h3 id=\"右手坐标系\"><a class=\"markdownIt-Anchor\" href=\"#右手坐标系\">#</a> 右手坐标系</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203135727.png\" alt=\"image-20211203135727456\"></p>\n<h2 id=\"unity的坐标系\"><a class=\"markdownIt-Anchor\" href=\"#unity的坐标系\">#</a> Unity 的坐标系</h2>\n<ul>\n<li>在模型空间和世界空间中，使用左手坐标系</li>\n<li>观察空间，使用右手坐标系，z 轴坐标的减少意味着场景深度的增加</li>\n</ul>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211203140041.png\" alt=\"image-20211203140041620\"></p>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h2>\n<ol>\n<li>右手坐标系</li>\n<li></li>\n</ol>\n<h1 id=\"点和矢量\"><a class=\"markdownIt-Anchor\" href=\"#点和矢量\">#</a> 点和矢量</h1>\n<h1 id=\"矩阵\"><a class=\"markdownIt-Anchor\" href=\"#矩阵\">#</a> 矩阵</h1>\n<h1 id=\"矩阵变换\"><a class=\"markdownIt-Anchor\" href=\"#矩阵变换\">#</a> 矩阵变换</h1>\n<h1 id=\"坐标空间\"><a class=\"markdownIt-Anchor\" href=\"#坐标空间\">#</a> 坐标空间</h1>\n<h1 id=\"法线变换\"><a class=\"markdownIt-Anchor\" href=\"#法线变换\">#</a> 法线变换</h1>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/11/30/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%89%EF%BC%89UnityShader/",
            "url": "https://www.fasty97.top/2021/11/30/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%89%EF%BC%89UnityShader/",
            "title": "Shader入门精要（三）UnityShader",
            "date_published": "2021-11-30T14:30:18.000Z",
            "content_html": "<h1 id=\"第三章-unityshader基础\"><a class=\"markdownIt-Anchor\" href=\"#第三章-unityshader基础\">#</a> 第三章 UnityShader 基础</h1>\n<blockquote>\n<p>正式进入 shader 学习了，好耶！</p>\n</blockquote>\n<p>使用 UnityShader 的流程：</p>\n<ol>\n<li>创建一个材质</li>\n<li>创建一个 UnityShader，为材质添加</li>\n<li>把材质赋给对象</li>\n<li>调整 shader 属性</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130223524.png\" alt=\"image-20211130223524763\"></p>\n<h2 id=\"创建shader\"><a class=\"markdownIt-Anchor\" href=\"#创建shader\">#</a> 创建 Shader</h2>\n<p>Unity 包含了多种 shader 模板供我们使用。</p>\n<table>\n<thead>\n<tr>\n<th>Standard Surface Shader</th>\n<th>标准光照模型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Unlit Shader</td>\n<td>不包含光照（但包含雾效）</td>\n</tr>\n<tr>\n<td>mage Effect Shader</td>\n<td>实现各种屏幕后处理效果</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Unity Shader 的导入面板还可以方便地查看其使用的渲染队列（Render queue）、是否关闭批处理（Disablebatching）、属性列表（Properties）等信息。</p>\n<h2 id=\"shaderlab\"><a class=\"markdownIt-Anchor\" href=\"#shaderlab\">#</a> ShaderLab</h2>\n<p>ShaderLab 是 Unity 为我们抽象的一种 shader 语言，可以更方便的通用。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130224529.png\" alt=\"image-20211130224529408\"></p>\n<h3 id=\"基本结构\"><a class=\"markdownIt-Anchor\" href=\"#基本结构\">#</a> 基本结构</h3>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"ShaderName\"</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tProperties<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token comment\">// 属性</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display name\"</span><span class=\"token punctuation\">,</span> PropertyType<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>DefaultValue</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tSubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">//A 着色器</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tSubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token comment\">//B 着色器</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tFallback <span class=\"token string\">\"VertexLit\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"属性类型\"><a class=\"markdownIt-Anchor\" href=\"#属性类型\">#</a> 属性类型</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130225328.png\" alt=\"image-20211130225328452\"></p>\n<p>根据以上属性得到的 Shader 放置在材质上效果：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201122201.png\" alt=\"image-20211201122154053\"></p>\n<h3 id=\"subshader\"><a class=\"markdownIt-Anchor\" href=\"#subshader\">#</a> SubShader</h3>\n<blockquote>\n<p>每个 Unityshader 可以包含多个 SubShader， <code>最少要有一个</code> 。</p>\n</blockquote>\n<p>加载时会自动选择第一个可以执行的 SubShader，如果都不支持的话，使用 FallBack 指定的 shader。（为了解决不同显卡的差异）</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 可选的</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span>Tages<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 可选的</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span>RenderSetup<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Pass <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//other Passes</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>每个 Pass 定义了一次完整的渲染流程，Pass 过多，性能下降。</p>\n<h4 id=\"状态设置\"><a class=\"markdownIt-Anchor\" href=\"#状态设置\">#</a> 状态设置</h4>\n<p>在 SubShader 中我们可以设置渲染的一些状态。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201123019.png\" alt=\"image-20211201123019333\"></p>\n<p>在 SubShader 中设置的状态会应用到所有的 Pass，也可以在 Pass 中单独设置。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Tags<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"TagName1\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Value1\"</span> <span class=\"token string\">\"TagName2\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"CC\"</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//Tags 是一些 str 键值对</span></pre></td></tr></table></figure><h4 id=\"subshader标签类型\"><a class=\"markdownIt-Anchor\" href=\"#subshader标签类型\">#</a> SubShader 标签类型</h4>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201123359.png\" alt=\"image-20211201123359479\"></p>\n<blockquote>\n<p>这些标签只能在 SubShader 中申明不可在 Pass 中申明</p>\n</blockquote>\n<h3 id=\"pass\"><a class=\"markdownIt-Anchor\" href=\"#pass\">#</a> Pass</h3>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Pass<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span>Name<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span>Tags<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span>RenderSetup<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//Other</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以通过 Name 来使用 Pass，例如：</p>\n<p><code>UsePass &quot;MyShader/PASSNAME&quot;</code></p>\n<blockquote>\n<p>默认 Unity 会将所有 Pass 名称转换为大写，所以使用时需要使用大写名称</p>\n</blockquote>\n<h4 id=\"pass标签类型\"><a class=\"markdownIt-Anchor\" href=\"#pass标签类型\">#</a> Pass 标签类型</h4>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211201124000.png\" alt=\"image-20211201124000121\"></p>\n<ul>\n<li>\n<p>・UsePass：如我们之前提到的一样，可以使用该命令来复用其他 Unity Shader 中的 Pass；</p>\n</li>\n<li>\n<p>・GrabPass：该 Pass 负责抓取屏幕并将结果存储在一张纹理中，以用于后续的 Pass 处理（详见 10.2.2 节）。</p>\n</li>\n</ul>\n<h3 id=\"fallback\"><a class=\"markdownIt-Anchor\" href=\"#fallback\">#</a> FallBack</h3>\n<p>在 SubShader 后定义，如果上述的都不支持，用这个最低级的 Shader 吧！</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Fallback <span class=\"token string\">\"name\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Fallback off</pre></td></tr></table></figure><blockquote>\n<p>FallBack 还会影响阴影的透射</p>\n</blockquote>\n<h2 id=\"unity-shader形式\"><a class=\"markdownIt-Anchor\" href=\"#unity-shader形式\">#</a> Unity Shader 形式</h2>\n<p>着色器代码可以写在 SubShader 中（表面着色器做法），也可以写在 Pass 语义块中（顶点 / 片元着色器和固定函数着色器的做法）。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"MyShader\"</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Properties<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 所需的各种属性</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 真正意义上的 shader 代码会放在这里</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 表面着色器（Surface Shader）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 顶点 / 片元着色器（Vertex/Fragment Shader)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 固定函数着色器（Fixed Function Shader）</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 和上一哥 SubShader 类似</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"表面着色器surface-shader\"><a class=\"markdownIt-Anchor\" href=\"#表面着色器surface-shader\">#</a> 表面着色器 (Surface Shader)</h3>\n<blockquote>\n<p>是 Unity 自己创造的一种着色器代码类型，需要的代码量少，渲染代价比较大</p>\n</blockquote>\n<p>在背后，任然转换为顶点片元着色器。</p>\n<pre><code class=\"language-glSL\">Shader &quot;Custom/Simple&quot;&#123;\n    SubShader&#123;\n        Tags&#123;&quot;RenderType&quot;= &quot;Opaque&quot;&#125;\n        CGPROGRAM\n        #pragma suface surf lambert\n            struct Input&#123;\n                float4 color: COLOR;\n            &#125;\n        void surf(Input In,in out SurfaceOutput o)&#123;\n            o.Albedo=1;\n        &#125;\n        ENDCG\n    &#125;\n    Fallback &quot;Diffuse&quot;\n&#125;\n</code></pre>\n<p>表面着色器不需要关心，有多少个 Pass，每个 Pass 如何渲染</p>\n<p>CGPROGRAM 和 ENDCG 之间的代码是使用 CG/HLSL 编写的，也就是说，我们需要把 CG/HLSL 语言嵌套在 ShaderLab 语言中。</p>\n<h3 id=\"顶点片元着色器vertexfragment-shader\"><a class=\"markdownIt-Anchor\" href=\"#顶点片元着色器vertexfragment-shader\">#</a> 顶点片元着色器（Vertex/Fragment Shader）</h3>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shader <span class=\"token string\">\"Custom/Simple VertexFragment Shader\"</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    SubShader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Pass<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            CGPROGRAM</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">vertex vert</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">fragment frag float4 <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span>float4 v<span class=\"token operator\">:</span> POSITION<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>SV_POSITION<span class=\"token punctuation\">&#123;</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>UNITY_MATRIX_MVP<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>SV_Target<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">fixed4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            ENDCG</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>顶点 / 片元着色器的代码也需要定义在 CGPROGRAM 和 ENDCG 之间，但不同的是，顶点 / 片元着色器是写在 Pass 语义块内，而非 SubShader 内的.</p>\n<h3 id=\"固定函数着色器\"><a class=\"markdownIt-Anchor\" href=\"#固定函数着色器\">#</a> 固定函数着色器</h3>\n<blockquote>\n<p>对于一些比较老旧的设备，不支持可编程管线着色器，就需要使用固定函数着色器</p>\n</blockquote>\n<h3 id=\"使用哪种形式\"><a class=\"markdownIt-Anchor\" href=\"#使用哪种形式\">#</a> 使用哪种形式？</h3>\n<ul>\n<li>如果你想和各种光源打交道，你可能更喜欢使用表面着色器，但需要小心它在移动平台的性能表现。</li>\n<li>如果你需要使用的光照数目非常少，例如只有一个平行光，那么使用顶点 / 片元着色器是一个更好的选择。</li>\n<li>最重要的是，如果你有很多自定义的渲染效果，那么请选择顶点 / 片元着色器。</li>\n</ul>\n<blockquote>\n<p>至此，第三章完！</p>\n</blockquote>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/10/17/Unity%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2021/10/17/Unity%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "title": "Unity中的单例模式",
            "date_published": "2021-10-17T05:26:56.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<p>单例模式在 Unity 中是一种非常常用的方式，和传统单例不同，在 Unity 中针对不同的情况可分为以下几种方式❤️ 。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211017134711.jpg\" alt=\"87590528_p0\"></p>\n<h2 id=\"普通单例\"><a class=\"markdownIt-Anchor\" href=\"#普通单例\">#</a> 普通单例</h2>\n<ul>\n<li>适用于普通的 Mono 类。</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">singleton</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 单例</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                _instance<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"单例管理器\"><a class=\"markdownIt-Anchor\" href=\"#单例管理器\">#</a> 单例管理器</h2>\n<ul>\n<li>适用于继承自 Mono 的类。</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">singleton</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// 单例管理器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonManager<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token comment\">// 在场景中寻找是否已经存在相同的管理器</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go<span class=\"token operator\">=</span> GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>go<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> go<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ins <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GameObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                _instance <span class=\"token operator\">=</span> ins<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"创建 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> \"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 防止加载场景销毁</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token function\">DontDestroyOnLoad</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"单例scriptableobject\"><a class=\"markdownIt-Anchor\" href=\"#单例scriptableobject\">#</a> 单例 ScriptableObject</h2>\n<ul>\n<li>适用于 ScriptableObject 单例数据存储</li>\n<li>需要放置在 Resource 目录下用于读取</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">singleton</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// So 单例</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonSoManager<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Object</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ins<span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ins<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" 不存在！！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                _instance <span class=\"token operator\">=</span> ins<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/10/16/Async%E4%BB%A3%E6%9B%BF%E5%8D%8F%E7%A8%8B/",
            "url": "https://www.fasty97.top/2021/10/16/Async%E4%BB%A3%E6%9B%BF%E5%8D%8F%E7%A8%8B/",
            "title": "Async代替协程",
            "date_published": "2021-10-16T13:51:24.000Z",
            "content_html": "<blockquote>\n<p>在之前 Unity 想要实现延迟执行或者是等待，要么只能使用自己计数的方法，要么使用协程。</p>\n</blockquote>\n<h1 id=\"ep1-协程\"><a class=\"markdownIt-Anchor\" href=\"#ep1-协程\">#</a> Ep.1 协程</h1>\n<p>首先让我们来看一个协程示例：</p>\n<p>示例是循环 10 次，每次等待 0.2s。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>协程示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 启动协程</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"ep2-async-异步\"><a class=\"markdownIt-Anchor\" href=\"#ep2-async-异步\">#</a> Ep.2 Async 异步</h1>\n<blockquote>\n<p>Async 异步的概念是微软基于多线程提出的 Task 解决方案，相比传统多线程具有很多优势。</p>\n</blockquote>\n<ul>\n<li>❤️相比协程来说，异步的方式不需要搭建基础的协程框架（ <code>不需要新创建一个方法</code> ），可以直接在方法中使用关键字实现等待。</li>\n<li>不需要启动</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>Async示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AsyncFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"ep3-解决痛点\"><a class=\"markdownIt-Anchor\" href=\"#ep3-解决痛点\">#</a> Ep.3 解决痛点</h1>\n<blockquote>\n<p>其实 async 还有其他的优势，让我们来看看这些例子😺</p>\n</blockquote>\n<h2 id=\"协程队列\"><a class=\"markdownIt-Anchor\" href=\"#协程队列\">#</a> 协程队列</h2>\n<p>🌓 有时我们需要这样一种情况，需要在 A 执行结束后执行 B，B 执行结束后执行 C。</p>\n<h3 id=\"协程解决方案\"><a class=\"markdownIt-Anchor\" href=\"#协程解决方案\">#</a> 协程解决方案</h3>\n<p>可以看到，通用的解决方案需要创建多个协程方法，并创建一个总协程方法来为所有参与协程进行排序。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">FunC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全部执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">FunC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C执行结束！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"异步解决方案\"><a class=\"markdownIt-Anchor\" href=\"#异步解决方案\">#</a> 异步解决方案</h3>\n<p>按照协程的思路我们可以这样来替换。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">Fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FunEnd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fun2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"特殊使用\"><a class=\"markdownIt-Anchor\" href=\"#特殊使用\">#</a> 特殊使用</h2>\n<h3 id=\"持续执行\"><a class=\"markdownIt-Anchor\" href=\"#持续执行\">#</a> 持续执行</h3>\n<p>可以使用如下的方式来持续执行一系列的动作！😏</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Rote</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> endTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector3</span> dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Time<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> endTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> dir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 线程让步，让线程池重新排</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">Yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"多任务并行\"><a class=\"markdownIt-Anchor\" href=\"#多任务并行\">#</a> 多任务并行</h3>\n<p>可以为 Start 方式设定异步 Async</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tasks<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Task<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 异步启动多个 Task 任务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        tasks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">Fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">WhenAll</span><span class=\"token punctuation\">(</span>tasks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全部执行完\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"ep4-总结\"><a class=\"markdownIt-Anchor\" href=\"#ep4-总结\">#</a> Ep.4 总结</h1>\n<blockquote>\n<p>使用这样 Async 方式，大大简化了协程的使用复杂度，简化了代码数量，重要的是可以将一些 Task 的特性使用出来。</p>\n<p>✔️同时，Unity 再也不是虚假的多线程了！</p>\n</blockquote>\n",
            "tags": [
                "协程",
                "Async"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/10/15/%E6%9C%89%E5%A4%AA%E5%A4%9A%E8%A6%81%E6%89%93%E7%A0%B4%E7%9A%84%E4%B8%9C%E8%A5%BF/",
            "url": "https://www.fasty97.top/2021/10/15/%E6%9C%89%E5%A4%AA%E5%A4%9A%E8%A6%81%E6%89%93%E7%A0%B4%E7%9A%84%E4%B8%9C%E8%A5%BF/",
            "title": "有太多要打破的东西",
            "date_published": "2021-10-15T14:26:56.000Z",
            "content_html": "<blockquote>\n<p>因在世界上与他人的联系，我们的存在有了价值。</p>\n</blockquote>\n<p>这是我很久之前，大概是在《四月是你的谎言》里听 <code>薰</code> 对 <code>有马</code> 说的话，我们享受着这份链接，也受制于这份链接。</p>\n<p>每个人都有必须要去做的事情，可能是使命一样的东西，有的是自己给自己的，有的是被社会或环境所强压的。</p>\n<blockquote>\n<p>受制于这种链接，要想去打破，就像是打破规则，要挣脱太多的锁链捆绑。</p>\n</blockquote>\n<p>和人世分得太清楚就会孤寡。和人世走得太近则会前行受困。</p>\n<p>如何保持一种微妙平衡已成为全面认识事物的希冀📬 。</p>\n<blockquote>\n<p>比起为无能为力的事而后悔，还不如去做力所能及的事！—— 侑子</p>\n</blockquote>\n<img data-src=\"http://i2.3conline.com/images/piclib/201004/27/batch/1/58767/127233758094237zw8ypjg6.jpg\" alt=\"img\" style=\"zoom:50%;\" />\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/09/13/%E5%85%B3%E4%BA%8ECinemachine%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E6%91%84%E5%83%8F%E6%9C%BA/",
            "url": "https://www.fasty97.top/2021/09/13/%E5%85%B3%E4%BA%8ECinemachine%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E6%91%84%E5%83%8F%E6%9C%BA/",
            "title": "关于Cinemachine第三人称摄像机",
            "date_published": "2021-09-13T11:35:35.000Z",
            "content_html": "<h2 id=\"参考视频\"><a class=\"markdownIt-Anchor\" href=\"#参考视频\">#</a> 参考视频</h2>\n<iframe width=\"100%\" height=\"600\" src=\"//player.bilibili.com/player.html?aid=669740085&bvid=BV1Xa4y1j7iP&cid=237960877&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n",
            "tags": [
                "Cinemachine"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "url": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "title": "Shader入门精要（二）",
            "date_published": "2021-09-10T07:00:15.000Z",
            "content_html": "<blockquote>\n<p>因为第一章内容太少，就再更一章吧～</p>\n</blockquote>\n<h1 id=\"第二篇-渲染流水线\"><a class=\"markdownIt-Anchor\" href=\"#第二篇-渲染流水线\">#</a> 第二篇 渲染流水线</h1>\n<p>Q: 渲染流水线在干什么？</p>\n<p>A: 渲染流水线的最终目的在于生成或者说是渲染一张二维纹理，即我们在电脑屏幕上看到的所有效果。它的输入是一个虚拟摄像机、一些光源、一些 Shader 以及纹理等。</p>\n<p>使用流水线的好处在于可以提高单位时间的生产量。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210911215359.png\" alt=\"image-20210911215352715\"></p>\n<p>流水线系统中决定最后生产速度的是最慢的工序所需的时间 ( <code>短板效应</code> )</p>\n<p>理想情况下，如果把一个非流水线系统分成 n 个流水线阶段，且每个阶段耗费时间相同的话，会使整个系统得到 n 倍的速度提升。（多线渲染？）</p>\n<h2 id=\"渲染流程概念上的流水线\"><a class=\"markdownIt-Anchor\" href=\"#渲染流程概念上的流水线\">#</a> 渲染流程 (概念上的流水线)</h2>\n<blockquote>\n<p>渲染流程分成 3 个阶段：应用阶段（Application Stage）、几何阶段（Geometry Stage）、光栅化阶段（Rasterizer Stage）。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210911215704.png\" alt=\"image-20210911215704318\"></p>\n<h3 id=\"应用阶段\"><a class=\"markdownIt-Anchor\" href=\"#应用阶段\">#</a> 应用阶段</h3>\n<p>这个阶段 <code>是由我们的应用主导</code> 的，因此通常由 <code>CPU负责实现</code> 。主要包含三个任务：</p>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105707020\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"55\" style=\"max-width: 649.5px;\" viewBox=\"0 0 649.5 55\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-准备场景数据 LE-粗粒度剔除culling\" id=\"L-准备场景数据-粗粒度剔除culling\" style=\"opacity: 1;\"><path class=\"path\" d=\"M124,27.5L149,27.5L174,27.5\" marker-end=\"url(#arrowhead12)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead12\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-粗粒度剔除culling LE-渲染图元and输出渲染所需几何信息\" id=\"L-粗粒度剔除culling-渲染图元and输出渲染所需几何信息\" style=\"opacity: 1;\"><path class=\"path\" d=\"M321.4375,27.5L346.4375,27.5L371.4375,27.5\" marker-end=\"url(#arrowhead13)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead13\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-准备场景数据-3\" transform=\"translate(66,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-58\" y=\"-19.5\" width=\"116\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-48,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">准备场景数据</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-粗粒度剔除culling-4\" transform=\"translate(247.71875,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-73.71875\" y=\"-19.5\" width=\"147.4375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-63.71875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">粗粒度剔除culling</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-渲染图元and输出渲染所需几何信息-5\" transform=\"translate(506.46875,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-135.03125\" y=\"-19.5\" width=\"270.0625\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-125.03125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">渲染图元and输出渲染所需几何信息</tspan></text></g></g></g></g></g></g></svg></pre><h3 id=\"几何阶段\"><a class=\"markdownIt-Anchor\" href=\"#几何阶段\">#</a> 几何阶段</h3>\n<p>几何阶段用于处理所有和我们要绘制的几何相关的事情。例如，决定需要绘制的图元是什么，怎样绘制它们，在哪里绘制它们。这一阶段 <code>通常在GPU上</code> 进行。几何阶段负责和每个渲染图元打交道，进行逐顶点、逐多边形的操作。这个阶段 <code>可以进一步分成更小的流水线阶段</code> ，这在下一章中会讲到。几何阶段的一个重要任务就是 <code>把顶点坐标变换到屏幕空间中</code> ，再交给光栅器进行处理。通过对输入的渲染图元进行多步处理后，这一阶段将会输出屏幕空间的二维顶点坐标、每个顶点对应的深度值、着色等相关信息，并传递给下一个阶段。</p>\n<h3 id=\"光栅化阶段\"><a class=\"markdownIt-Anchor\" href=\"#光栅化阶段\">#</a> 光栅化阶段</h3>\n<p>这一阶段将会使用上个阶段传递的数据来产生屏幕上的像素，并 <code>渲染出最终的图像</code> 。 <code>这一阶段也是在GPU上运行</code> 。光栅化的任务主要是 <code>决定每个渲染图元中的哪些像素应该被绘制在屏幕上</code> 。它需要对上一个阶段得到的逐顶点数据（例如纹理坐标、顶点颜色等）进行插值，然后再进行逐像素处理。和上一个阶段类似，光栅化阶段也 <code>可以分成更小的流水线阶段</code> 。</p>\n<h2 id=\"cpu与gpu通信\"><a class=\"markdownIt-Anchor\" href=\"#cpu与gpu通信\">#</a> CPU 与 GPU 通信</h2>\n<blockquote>\n<p>真实的流水线🔨</p>\n</blockquote>\n<p>渲染流水线的起点是 CPU，即应用阶段。应用阶段大致可分为下面 3 个阶段：</p>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105713835\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"55\" style=\"max-width: 512.046875px;\" viewBox=\"0 0 512.046875 55\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-把数据加载到显存中 LE-设置渲染状态\" id=\"L-把数据加载到显存中-设置渲染状态\" style=\"opacity: 1;\"><path class=\"path\" d=\"M172,27.5L197,27.5L222,27.5\" marker-end=\"url(#arrowhead12)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead12\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-设置渲染状态 LE-调用DrawCall\" id=\"L-设置渲染状态-调用DrawCall\" style=\"opacity: 1;\"><path class=\"path\" d=\"M338,27.5L363,27.5L388,27.5\" marker-end=\"url(#arrowhead13)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead13\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-把数据加载到显存中-3\" transform=\"translate(90,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-82\" y=\"-19.5\" width=\"164\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-72,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">把数据加载到显存中</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-设置渲染状态-4\" transform=\"translate(280,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-58\" y=\"-19.5\" width=\"116\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-48,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">设置渲染状态</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-调用DrawCall-5\" transform=\"translate(446.0234375,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-58.0234375\" y=\"-19.5\" width=\"116.046875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-48.0234375,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">调用DrawCall</tspan></text></g></g></g></g></g></g></svg></pre><h3 id=\"把数据加载到显存中\"><a class=\"markdownIt-Anchor\" href=\"#把数据加载到显存中\">#</a> 把数据加载到显存中</h3>\n<p>数据需要从硬盘到内存再到显存，显存读取速度快！加载之后就会丢弃，为了运算，某些数据不应该被丢弃，</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210911221304.png\" alt=\"image-20210911221304571\"></p>\n<p>因为从硬盘加载到 RAM 的过程是十分耗时的，故我们要编写程序指导 CPU ，不要丢弃。</p>\n<blockquote>\n<p>9.14 继续更新啦😃</p>\n</blockquote>\n<h3 id=\"设置渲染状态\"><a class=\"markdownIt-Anchor\" href=\"#设置渲染状态\">#</a> 设置渲染状态</h3>\n<blockquote>\n<p>这些状态定义了场景中的网格是怎样被渲染的</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210914131155.png\" alt=\"image-20210914131148894\"></p>\n<center>在同一状态下渲染3个网格。由于没有更改渲染状态，因此3个网格的外观看起来像是同一种材质的物体</center>\n<h3 id=\"调用draw-call\"><a class=\"markdownIt-Anchor\" href=\"#调用draw-call\">#</a> 调用 Draw Call</h3>\n<p>在设置好渲染状态后，就开始绘制了。 <code>由CPU发起，GPU接收</code> 。</p>\n<blockquote>\n<p>11.30 继续更新 😺</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130192907.png\" alt=\"image-20211130192900305\"></p>\n<h2 id=\"gpu流水线\"><a class=\"markdownIt-Anchor\" href=\"#gpu流水线\">#</a> GPU 流水线</h2>\n<blockquote>\n<p>当 GPU 收到渲染命令后，进行一系列流水线操作，将图元渲染到屏幕上</p>\n</blockquote>\n<p>GPU 主要实现 几何阶段和光栅化阶段。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130193451.png\" alt=\"image-20211130193451213\"></p>\n<p>其中说明如下：</p>\n<ul>\n<li>完全可编程控制： 顶点着色器、曲面细分着色器、几何着色器、片元着色器</li>\n<li>可配置不可编程：逐片元、裁剪、</li>\n<li>不可控制：屏幕映射、三角形设置、三角形遍历</li>\n<li><code>实现为必须由开发者实现，虚线为可选</code></li>\n</ul>\n<h3 id=\"顶点着色器\"><a class=\"markdownIt-Anchor\" href=\"#顶点着色器\">#</a> 顶点着色器</h3>\n<p>完全可编程</p>\n<blockquote>\n<p>用于实现顶点的空间变换、顶点着色</p>\n</blockquote>\n<ol>\n<li>输入来自于 CPU</li>\n<li>处理单位为顶点</li>\n<li>不可以创建或销毁顶点、无法得到顶点之间的关系</li>\n<li>处理速度很快</li>\n<li>进行坐标变换和顶点光照</li>\n<li>还可以输出后续所需要的一些数据</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130214131.png\" alt=\"image-20211130214131052\"></p>\n<p>核心任务：** 顶点坐标从 <code>模型空间</code> 转换到 <code>齐次裁剪空间</code></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130214642.png\" alt=\"image-20211130214642514\"></p>\n<p>转换到齐次裁减空间后，硬件通过做透视触发得到 <code>NDC（设备坐标）</code> 下的坐标。</p>\n<blockquote>\n<p>NDC OpenGL (Unity) 范围在【-1,1】</p>\n</blockquote>\n<h3 id=\"曲面细分着色器\"><a class=\"markdownIt-Anchor\" href=\"#曲面细分着色器\">#</a> 曲面细分着色器</h3>\n<p>是一个可选的着色器，它用于细分图元</p>\n<h3 id=\"几何着色器\"><a class=\"markdownIt-Anchor\" href=\"#几何着色器\">#</a> 几何着色器</h3>\n<p>是一个可选的着色器，它可以被用于执行逐图元（Per-Primitive）的着色操作，或者被用于产生更多的图元</p>\n<h3 id=\"裁剪\"><a class=\"markdownIt-Anchor\" href=\"#裁剪\">#</a> 裁剪</h3>\n<p><strong>可配置但不可编程。</strong></p>\n<blockquote>\n<p>这一阶段的目的是将那些不在摄像机视野内的顶点裁剪掉，并剔除某些三角图元的面片</p>\n</blockquote>\n<p><code>用于完成裁剪掉只有部分在摄像机范围内出现的物体。</code></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130215204.png\" alt=\"image-20211130215204031\"></p>\n<p>经过裁剪，会在相交处生成新的点，同时原先的旧的点（在范围外）将被删除掉。</p>\n<h3 id=\"屏幕映射\"><a class=\"markdownIt-Anchor\" href=\"#屏幕映射\">#</a> 屏幕映射</h3>\n<p>输入三维坐标，二维屏幕坐标</p>\n<blockquote>\n<p>任务：把每个图元的 X 和 y 坐标转换到屏幕坐标系</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130215609.png\" alt=\"image-20211130215609144\"></p>\n<p>在 OpenGL 中，原点位于左下角，在 DirectX 中，原点在左上角</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130215806.png\" alt=\"image-20211130215806421\"></p>\n<h3 id=\"三角形遍历\"><a class=\"markdownIt-Anchor\" href=\"#三角形遍历\">#</a> 三角形遍历</h3>\n<blockquote>\n<p>检查每个像素是否被一个三角网格所覆盖。如果被覆盖就生成一个 ` 片元，输出片元序列。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130220052.png\" alt=\"image-20211130220052140\"></p>\n<h3 id=\"片元着色器\"><a class=\"markdownIt-Anchor\" href=\"#片元着色器\">#</a> 片元着色器</h3>\n<p>计算出颜色</p>\n<blockquote>\n<p>经过前面的三角形步骤，获得了一系列的数据信息，用来表述一个三角形网格式怎样覆盖到每个像素的。</p>\n<p>输入为：顶点插值数据</p>\n<p>输出为：一个或多个颜色</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130220450.png\" alt=\"image-20211130220450027\"></p>\n<h3 id=\"逐片元\"><a class=\"markdownIt-Anchor\" href=\"#逐片元\">#</a> 逐片元</h3>\n<p>渲染流水线的最后一步❤️</p>\n<blockquote>\n<p>逐片元操作（Per-FragmentOperations）阶段负责执行很多重要的操作，例如 <code>修改颜色</code> 、 <code>深度缓冲</code> 、 <code>进行混合等</code></p>\n<p>用于合并数据。</p>\n</blockquote>\n<p>这一个阶段有如下任务：</p>\n<ol>\n<li>决定每个片元的可见性。这涉及了很多测试工作，例如深度测试、模板测试等。</li>\n<li>如果一个片元通过了所有的测试，就需要把这个片元的颜色值和已经存储在颜色缓冲区中的颜色进行合并，或者说是混合。</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130220813.png\" alt=\"image-20211130220813558\"></p>\n<p>需要通过所有的测试，才能和颜色缓冲区混合，最后写入颜色缓冲区</p>\n<blockquote>\n<p>这些测试用于筛选掉一些无用片元</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130221004.png\" alt=\"image-20211130221004246\"></p>\n<p>当片元通过了所有测试，就会进入混合阶段</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20211130221310.png\" alt=\"image-20211130221310360\"></p>\n<p>对于透明效果需要开启混合，对于不透明物体可以选择关闭混合效果</p>\n<blockquote>\n<p>出于性能考虑，很多 GPU 会先进行测试在进行片元着色器 —— Early-Z 技术</p>\n</blockquote>\n<p>为了避免我们看到正在光栅化的图元，GPU 使用 <code>双重缓冲</code> ，我们看到的是前置渲染结构，同时后置渲染也在工作，但后置渲染完成就会交换前后渲染的内容。</p>\n<h1 id=\"什么是shader\"><a class=\"markdownIt-Anchor\" href=\"#什么是shader\">#</a> 什么是 Shader?</h1>\n<ul>\n<li>GPU 流水线上一些可高度编程的阶段，而由着色器编译出来的最终代码是会在 GPU 上运行的（对于固定管线的渲染来说，着色器有时等同于一些特定的渲染设置）</li>\n<li>有一些特定类型的着色器，如顶点着色器、片元着色器等；</li>\n</ul>\n<blockquote>\n<p>第二章完！</p>\n</blockquote>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%80%EF%BC%89/",
            "url": "https://www.fasty97.top/2021/09/10/Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%EF%BC%88%E4%B8%80%EF%BC%89/",
            "title": "Shader入门精要（一）",
            "date_published": "2021-09-10T06:57:37.000Z",
            "content_html": "<h2 id=\"致自己\"><a class=\"markdownIt-Anchor\" href=\"#致自己\">#</a> 致自己</h2>\n<blockquote>\n<p>之前我学习过一段时间的 Shader 入门精要（大概是学到第六章吧），但后面的章节都没有学习，加上时间久远很多内容都忘记了，故打算重新学一遍。</p>\n<p>为了勉励自己坚持下去，也为了记录一些学习过程，此系列就出现啦！</p>\n<p>❤️ ❤️</p>\n<p>(希望自己能够坚持学完，在渲染方面有所收获，可以制作出满意的效果)</p>\n<p>📑 此系列每周一更</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910151044.png\" alt=\"image-20210910151043222\"></p>\n<h1 id=\"第一篇-欢迎来到shader的世界\"><a class=\"markdownIt-Anchor\" href=\"#第一篇-欢迎来到shader的世界\">#</a> 第一篇 欢迎来到 Shader 的世界</h1>\n<h2 id=\"语录\"><a class=\"markdownIt-Anchor\" href=\"#语录\">#</a> 语录</h2>\n<ul>\n<li>\n<p>程序员的三大浪漫是编译原理、操作系统和图形学（是的，我已经听到很多人在反驳这句话了，不要当真啦）</p>\n</li>\n<li>\n<p>我们是程序员中的 “外貌协会”，期待着用代码编写出一个绚丽多姿的世界。这就是我们的浪漫。</p>\n</li>\n<li>\n<p>我们之所以要学习 Shader，是想要学习如何把物体按照自己的意愿渲染到屏幕上，但是，Shader 只是整个渲染流程中的一个子部分。</p>\n</li>\n<li>\n<p>和 C++ 这样的高级语言不同，尽管 Shader 的编写语言已经达到了我们可以理解的程度，但 Shader 更多地是面向 GPU 的工作方式，所以它的一些语法对我们来说并不那么直观。</p>\n</li>\n</ul>\n<h2 id=\"基础篇大纲1-4章\"><a class=\"markdownIt-Anchor\" href=\"#基础篇大纲1-4章\">#</a> 基础篇大纲 1-4 章</h2>\n<ol>\n<li><code>第2章 渲染流水线</code>  这一章讲解了现代 GPU 是如何实现整个渲染流水线的，这些内容对于理解 Shader 的工作原理有着非常重要的作用。</li>\n<li><code>第3章Unity Shader基础</code>  Unity 在原有的渲染流程上进行了封装，并提供给开发者新的图像编程接口 ——Unity Shader。这一章将讲解 Unity Shader 的实现原理和基本语法</li>\n<li><code>第4章 学习Shader所需的数学基础</code>  数学向来是初学者面对的一大学习障碍。然而，在初级阶段的渲染学习中，我们需要掌握的数学理论实际并不复杂。本章将为读者讲解渲染过程中常见的数学知识，如矢量、矩阵运算、坐标空间等。</li>\n</ol>\n<h2 id=\"自我理解\"><a class=\"markdownIt-Anchor\" href=\"#自我理解\">#</a> 自我理解</h2>\n<p>本章主要讲述了本书的结构的内容大纲，引出了 shader 学习的问题。</p>\n<p>尽管是第二次读，依然觉得有趣～</p>\n",
            "tags": [
                "Shader",
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/10/NodeCanvas%E6%89%A9%E5%B1%95/",
            "url": "https://www.fasty97.top/2021/09/10/NodeCanvas%E6%89%A9%E5%B1%95/",
            "title": "NodeCanvas扩展",
            "date_published": "2021-09-10T02:12:21.000Z",
            "content_html": "<blockquote>\n<p>除去三大功能外，NodeCanvas 还有一些别的有趣的东西，能帮助我们改进 3 大流程。</p>\n</blockquote>\n<h3 id=\"standalone-action-list\"><a class=\"markdownIt-Anchor\" href=\"#standalone-action-list\">#</a> Standalone Action List</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910101555.png\" alt=\"image-20210910101555501\"></p>\n<p>给对线添加如上脚本后，我们可以在对象上进行一些可视化的对话构建。</p>\n<h3 id=\"自定义action和condition\"><a class=\"markdownIt-Anchor\" href=\"#自定义action和condition\">#</a> 自定义 Action 和 Condition</h3>\n<blockquote>\n<p>我们可以自定义自己的节点，方便我们在 3 大功能上使用。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910101826.png\" alt=\"image-20210910101826535\"></p>\n<p>生成脚本如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>生成的行为</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Framework</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">ParadoxNotion<span class=\"token punctuation\">.</span>Design</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">.</span>Actions</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Category</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"my\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Description</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"输出一些内容\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Mylog</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ActionTask</span></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">//Use for initialization. This is called only once in the lifetime of the task.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token comment\">//Return null if init was successfull. Return an error string otherwise</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">OnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token comment\">//This is called once each time the task is enabled.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token comment\">//Call EndAction() to mark the action as finished, either in success or failure.</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token comment\">//EndAction can be called from anywhere.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnExecute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         <span class=\"token function\">EndAction</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\">//Called once per frame while the action is active.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\">//Called when the task is disabled.</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token comment\">//Called when the task is paused.</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建之后可以在 Action 中找到：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910102308.png\" alt=\"image-20210910102308892\"></p>\n<p>条件如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>生成的条件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Framework</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">ParadoxNotion<span class=\"token punctuation\">.</span>Design</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">NodeCanvas<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">.</span>Conditions</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Category</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"my\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Description</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制条件\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">myCon</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ConditionTask</span></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">//Use for initialization. This is called only once in the lifetime of the task.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token comment\">//Return null if init was successfull. Return an error string otherwise</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">OnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token comment\">//Called whenever the condition gets enabled.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\">//Called whenever the condition gets disabled.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDisable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\">//Called once per frame while the condition is active.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token comment\">//Return whether the condition is success or failure.</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">OnCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在图中使用：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910102705.png\" alt=\"image-20210910102705181\"></p>\n<h3 id=\"全局黑板\"><a class=\"markdownIt-Anchor\" href=\"#全局黑板\">#</a> 全局黑板</h3>\n<blockquote>\n<p>可以在所有图中使用</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910102835.png\" alt=\"image-20210910102835494\"></p>\n<h3 id=\"类型管理器\"><a class=\"markdownIt-Anchor\" href=\"#类型管理器\">#</a> 类型管理器</h3>\n<blockquote>\n<p>用于管理添加新的数据类型</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103000.png\" alt=\"image-20210910103000347\"></p>\n<h3 id=\"图控制台\"><a class=\"markdownIt-Anchor\" href=\"#图控制台\">#</a> 图控制台</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103100.png\" alt=\"image-20210910103100590\"></p>\n<h3 id=\"结构视图\"><a class=\"markdownIt-Anchor\" href=\"#结构视图\">#</a> 结构视图</h3>\n<blockquote>\n<p>可快速定位到对应节点</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103148.png\" alt=\"image-20210910103148583\"></p>\n<h3 id=\"运行视图\"><a class=\"markdownIt-Anchor\" href=\"#运行视图\">#</a> 运行视图</h3>\n<p>方便在游戏运行中，显示运行的所有树</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910103307.png\" alt=\"image-20210910103307475\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<blockquote>\n<p>比起另一套行为树插件来说， <code>NodeCanvas</code>  提供的功能比较基础，其更像是一个程序框架，因此其扩展性也更佳，通过提供的接口和程式，我们可以打造定制化的工作流，代码设计简洁有力。</p>\n</blockquote>\n<p>总之还是非常不错的！😏</p>\n",
            "tags": [
                "Unity Tool"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/09/NodeCanvas%E4%B9%8B%E5%AF%B9%E8%AF%9D%E6%A0%91/",
            "url": "https://www.fasty97.top/2021/09/09/NodeCanvas%E4%B9%8B%E5%AF%B9%E8%AF%9D%E6%A0%91/",
            "title": "NodeCanvas之对话树",
            "date_published": "2021-09-09T05:03:59.000Z",
            "content_html": "<h2 id=\"主要功能\"><a class=\"markdownIt-Anchor\" href=\"#主要功能\">#</a> 主要功能</h2>\n<blockquote>\n<p>基础功能都有，具备良好的扩展性。</p>\n</blockquote>\n<ol>\n<li>播放对话</li>\n<li>对话音效</li>\n<li>分支对话</li>\n<li>概览对话</li>\n<li>条件对话</li>\n<li>…</li>\n</ol>\n<h2 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h2>\n<h3 id=\"添加脚本\"><a class=\"markdownIt-Anchor\" href=\"#添加脚本\">#</a> 添加脚本</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910095523.png\" alt=\"image-20210910095523494\"></p>\n<h3 id=\"添加角色并给角色添加\"><a class=\"markdownIt-Anchor\" href=\"#添加角色并给角色添加\">#</a> 添加角色并给角色添加</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910100346.png\" alt=\"image-20210910100346800\"></p>\n<h3 id=\"编写对话树\"><a class=\"markdownIt-Anchor\" href=\"#编写对话树\">#</a> 编写对话树</h3>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910095400.png\" alt=\"image-20210910095352935\"></p>\n<h4 id=\"启动对话树\"><a class=\"markdownIt-Anchor\" href=\"#启动对话树\">#</a> 启动对话树</h4>\n<blockquote>\n<p><code>默认是不启动</code> 对话树的，可以在代码中控制启动也可以在属性面板设置游戏开始时启动。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">DialogueTreeController</span> dialogueTreeController<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dialogueTreeController<span class=\"token punctuation\">.</span><span class=\"token function\">StartBehaviour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为了保证对话正确显示，在 UI 层需要添加官方的预制体和事件系统监听</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210910100905.png\" alt=\"image-20210910100905937\"></p>\n<h2 id=\"存在的问题待学习\"><a class=\"markdownIt-Anchor\" href=\"#存在的问题待学习\">#</a> 存在的问题待学习</h2>\n<ol>\n<li>\n<p>❓NodeCanvas 的对话树似乎 在显示富文本内容时存在问题。例如使用颜色代码，会出现输出颜色代码之后再实现效果的问题</p>\n</li>\n<li>\n<p>❓ 其配置的 UI 显示界面不清楚是如何进行绑定的</p>\n</li>\n</ol>\n",
            "tags": [
                "Unity Tool"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/08/NodeCanvas%E4%B9%8BFSM%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/",
            "url": "https://www.fasty97.top/2021/09/08/NodeCanvas%E4%B9%8BFSM%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/",
            "title": "NodeCanvas之FSM有限状态机",
            "date_published": "2021-09-08T14:27:11.000Z",
            "content_html": "<blockquote>\n<p>FSM 有限状态机是一种设计方式，用于处理不同状态的切换</p>\n<p>其主要包含以下几个部分：</p>\n<ol>\n<li>状态（进入、更新、离开）</li>\n<li>过渡条件 【 <code>用于控制状态的切换</code> 】</li>\n<li>状态机控制器【 <code>用于控制状态机</code> 】</li>\n</ol>\n</blockquote>\n<p>本文主要介绍 <code>NodeCanvas</code>  的 FSM 使用，具体基础 FSM 概念不做解释。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908225324.png\" alt=\"image-20210908225324425\"></p>\n<center>FSM示例图</center>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>为游戏对象添加如下脚本：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210909125307.png\" alt=\"image-20210909125300176\"></p>\n<h2 id=\"结点类型\"><a class=\"markdownIt-Anchor\" href=\"#结点类型\">#</a> 结点类型</h2>\n<p>NodeCanvas 中结点分为几个类型：</p>\n<ol>\n<li>Action State（动作状态，只处理进入状态）</li>\n<li>Super Action State （超级动作状态，能处理进入、更新、离开状态）</li>\n<li>Pass（过渡态，不做任何处理）</li>\n<li>Parallel（并行。 在状态机处于任意状态时，并行执行）</li>\n<li>Any State（能够从任意状态进行状态切换，在状态机过程中，时刻监听）</li>\n</ol>\n<h2 id=\"结语\"><a class=\"markdownIt-Anchor\" href=\"#结语\">#</a> 结语</h2>\n<p>在 FSM 中，也没什么太多可以讲的，其条件和行为结点为 <code>NodeCanvas</code>  行为树、状态机、对话树所共用。</p>\n<blockquote>\n<p>个人感觉，NodeCanvas 设计最棒的一点就是，他三种系统用的同一个底层，而且可以互相嵌套兼容。</p>\n</blockquote>\n",
            "tags": [
                "Unity Tool",
                "FSM",
                "状态机",
                "有限状态机"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/08/Spine%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2021/09/08/Spine%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "Spine初体验",
            "date_published": "2021-09-08T04:09:41.000Z",
            "content_html": "<blockquote>\n<p><code>Spine</code>  是市面上流行的 2D 动画解决方案，其支持 2D 图片制作动画。</p>\n<p>考虑到之后我要学习一下绘画，那就必须得学习一下 Spine 咯，此文用于记录一些学习过程😄 。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908121220.png\" alt=\"image-20210908121213419\"></p>\n<h2 id=\"制作流程\"><a class=\"markdownIt-Anchor\" href=\"#制作流程\">#</a> 制作流程</h2>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105721746\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"55\" style=\"max-width: 968px;\" viewBox=\"0 0 968 55\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-创建项目 LE-导入图片\" id=\"L-创建项目-导入图片\" style=\"opacity: 1;\"><path class=\"path\" d=\"M92,27.5L117,27.5L142,27.5\" marker-end=\"url(#arrowhead32)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead32\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-导入图片 LE-装配图片\" id=\"L-导入图片-装配图片\" style=\"opacity: 1;\"><path class=\"path\" d=\"M226,27.5L251,27.5L276,27.5\" marker-end=\"url(#arrowhead33)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead33\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-装配图片 LE-创建骨骼\" id=\"L-装配图片-创建骨骼\" style=\"opacity: 1;\"><path class=\"path\" d=\"M360,27.5L385,27.5L410,27.5\" marker-end=\"url(#arrowhead34)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead34\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-创建骨骼 LE-将图片和骨骼进行匹配\" id=\"L-创建骨骼-将图片和骨骼进行匹配\" style=\"opacity: 1;\"><path class=\"path\" d=\"M494,27.5L519,27.5L544,27.5\" marker-end=\"url(#arrowhead35)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead35\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-将图片和骨骼进行匹配 LE-制作动画\" id=\"L-将图片和骨骼进行匹配-制作动画\" style=\"opacity: 1;\"><path class=\"path\" d=\"M724,27.5L749,27.5L774,27.5\" marker-end=\"url(#arrowhead36)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead36\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-制作动画 LE-导出\" id=\"L-制作动画-导出\" style=\"opacity: 1;\"><path class=\"path\" d=\"M858,27.5L883,27.5L908,27.5\" marker-end=\"url(#arrowhead37)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead37\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-创建项目-7\" transform=\"translate(50,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">创建项目</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-导入图片-8\" transform=\"translate(184,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">导入图片</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-装配图片-9\" transform=\"translate(318,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">装配图片</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-创建骨骼-10\" transform=\"translate(452,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">创建骨骼</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-将图片和骨骼进行匹配-11\" transform=\"translate(634,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-90\" y=\"-19.5\" width=\"180\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-80,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">将图片和骨骼进行匹配</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-制作动画-12\" transform=\"translate(816,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-42\" y=\"-19.5\" width=\"84\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">制作动画</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-导出-13\" transform=\"translate(934,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-26\" y=\"-19.5\" width=\"52\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-16,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">导出</tspan></text></g></g></g></g></g></g></svg></pre><h2 id=\"设置模式装配模式式\"><a class=\"markdownIt-Anchor\" href=\"#设置模式装配模式式\">#</a> 设置模式（装配模式）式</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908124518.png\" alt=\"image-20210908124518412\"></p>\n<blockquote>\n<p>在此模式下操作骨骼时，注意将骨骼进行 <code>合理命名</code> ，方便后续动画制作。</p>\n</blockquote>\n<h2 id=\"动画模式\"><a class=\"markdownIt-Anchor\" href=\"#动画模式\">#</a> 动画模式</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908124815.png\" alt=\"image-20210908124815902\"></p>\n<h3 id=\"动画曲线\"><a class=\"markdownIt-Anchor\" href=\"#动画曲线\">#</a> 动画曲线</h3>\n<p>动画曲线用于控制两个关键帧之间的动画变化方式。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908125000.png\" alt=\"image-20210908125000724\"></p>\n<h2 id=\"简单动画效果预览\"><a class=\"markdownIt-Anchor\" href=\"#简单动画效果预览\">#</a> 简单动画效果预览</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210908125252.gif\" alt=\"\"></p>\n",
            "tags": [
                "Spine",
                "2D"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/09/04/NodeCanvas%E4%B9%8B%E8%A1%8C%E4%B8%BA%E6%A0%91/",
            "url": "https://www.fasty97.top/2021/09/04/NodeCanvas%E4%B9%8B%E8%A1%8C%E4%B8%BA%E6%A0%91/",
            "title": "NodeCanvas之行为树",
            "date_published": "2021-09-04T12:15:26.000Z",
            "content_html": "<h2 id=\"认识行为树\"><a class=\"markdownIt-Anchor\" href=\"#认识行为树\">#</a> 认识行为树</h2>\n<ol>\n<li>什么是行为树？<br>\n自顶向下的树形结构</li>\n</ol>\n<p>行为树 Behavior Tree 是一种数据结构，自顶向下的树形结构。</p>\n<ol start=\"2\">\n<li>什么情况下要使用行为树？<br>\n情况多变，条件复杂</li>\n</ol>\n<p>在处理逻辑复杂的问题时，这个复杂可能是条件复杂，情况多样。</p>\n<p>行为树并非是游戏 Ai 的专属，在处理其他复杂业务逻辑或可能时都可以尝试用行为树来解决。</p>\n<ol start=\"3\">\n<li>行为树有什么优点？<br>\n高效可读，易于扩展</li>\n</ol>\n<p>行为树解决的问题是将复杂的关系，简单化，能很大程度的加强程序的可读性，健壮性。</p>\n<ol start=\"4\">\n<li>\n<p>行为树由哪几部分组成？<br>\n主要由四部分  CDAC 组成 ，两根两叶</p>\n<pre><code>Composites  组合节点    只能作为根节点，控制子节点的执行（顺序）\nDecorator 装饰节点         只能作为根节点，修饰子节点\nActions     行为节点         只能作为叶子节点，执行具体动作\nConditinals 条件节点       只能作为叶子节点，判断条件\n</code></pre>\n<ol start=\"5\">\n<li>行为树的工作流程？<br>\n自顶向下，从左至右（并发进行），逐层进行</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>行为树执行的成果（成功 / 失败），由其子节点决定，子节点执行完成后会向父节点传递成功 / 失败的消息，<br>\n最终这些来自各个子枝的消息汇聚到行为树，行为树将结果整合得到行为树的最终执行结果。<br>\n其最终结果：同真为真，一假则假</p>\n</blockquote>\n<h2 id=\"关于nodecanvas\"><a class=\"markdownIt-Anchor\" href=\"#关于nodecanvas\">#</a> 关于 NodeCanvas</h2>\n<blockquote>\n<p><code>NodeCanvas</code>  是一个集成了:</p>\n<ul>\n<li>行为树</li>\n<li>对话树</li>\n<li>FSM 有限状态机</li>\n</ul>\n<p>的可视化 开发工具。</p>\n</blockquote>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\">#</a> 快速开始</h2>\n<h3 id=\"准备\"><a class=\"markdownIt-Anchor\" href=\"#准备\">#</a> 准备</h3>\n<p>准备一个角色，1.  配置好动画控制器，2. 进行 NaveMesh 的网格烘焙。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904203556.png\" alt=\"Aa\"></p>\n<p>添加上以下组件:</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904203733.png\" alt=\"image-20210904203733291\"></p>\n<h3 id=\"创建行为树\"><a class=\"markdownIt-Anchor\" href=\"#创建行为树\">#</a> 创建行为树</h3>\n<p>可以看到由两个部分组成</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904204124.png\" alt=\"image-20210904204124080\"></p>\n<h4 id=\"数据黑板\"><a class=\"markdownIt-Anchor\" href=\"#数据黑板\">#</a> 数据黑板</h4>\n<blockquote>\n<p>“黑板”（Blackboard）在人工智能领域已经是一个很古老的东西了，它基于一种很直观的概念，就是一群人为了解决一个问题，在黑板前聚集，每个人都可以发表自己的意见，然后在黑板上写下自己的看法，当然你也可以基于别人记录在黑板上的看法，来发表和更新自己的看法，在这样不断的意见交换，看法更新的过程中，越来越趋向于对于问题的最终解答。一开始的黑板系统就是这样一个由多个子系统来共同协作的人工智能解决方案。</p>\n</blockquote>\n<p>可参考: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5haXNoYXJpbmcuY29tL2FyY2hpdmVzLzgwMQ==\">http://www.aisharing.com/archives/801</span></p>\n<p><code>在NodeCanvas里，我们可以把需要共享点数据放在黑板里，在多个行为树中共享。</code></p>\n<h4 id=\"操作窗口\"><a class=\"markdownIt-Anchor\" href=\"#操作窗口\">#</a> 操作窗口</h4>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904204714.png\" alt=\"image-20210904204714062\"></p>\n<p>左上可以导入导出，右上是黑板数据。</p>\n<p>可以添加不同类型点节点， <code>行为树一般从流程节点开始</code> 。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904204908.png\" alt=\"image-20210904204908578\"></p>\n<h4 id=\"基本流程\"><a class=\"markdownIt-Anchor\" href=\"#基本流程\">#</a> 基本流程</h4>\n<ol>\n<li>\n<p>Sequencer 依次执行直到失败</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904205615.png\" alt=\"image-20210904205615378\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904205615.png\" alt=\"\"><br>\n完成效果如下:<br>\n<img data-src=\"https://pic.fasty97.top/NotePad/20210904210007.gif\" alt=\"\"></p>\n</li>\n<li>\n<p>Selector 依次执行直到成功</p>\n</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904210501.png\" alt=\"image-20210904210501209\"></p>\n<ol start=\"3\">\n<li>Parallel  并行执行</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904210629.png\" alt=\"image-20210904210629825\"> 其中，可以结束配置参数：</p>\n<p>第一次成功、第一次失败、第一次成功或失败。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210904211016.png\" alt=\"image-20210904211016371\"></p>\n<h2 id=\"完成的行为树\"><a class=\"markdownIt-Anchor\" href=\"#完成的行为树\">#</a> 完成的行为树</h2>\n<blockquote>\n<p>包含攻击、追逐、徘徊、巡逻几个状态</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210905162014.png\" alt=\"image-20210905162014408\"></p>\n<h3 id=\"节点介绍\"><a class=\"markdownIt-Anchor\" href=\"#节点介绍\">#</a> 节点介绍</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hMTI0NzA1NzdmZDA=\">NodeCanvas—— 行为树节点介绍 - 简书 (jianshu.com)</span></p>\n<h2 id=\"扩展-分层行为树\"><a class=\"markdownIt-Anchor\" href=\"#扩展-分层行为树\">#</a> 扩展 - 分层行为树</h2>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTYyNDAyNC9hcnRpY2xlL2RldGFpbHMvODA4NzkyOTQ=\">分层机制 - 复杂行为树的行为控制_一生做游戏 - CSDN 博客_复杂行为树</span></p>\n<h2 id=\"综合参考\"><a class=\"markdownIt-Anchor\" href=\"#综合参考\">#</a> 综合参考</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210905122921.png\" alt=\"image-20210905122914367\"></p>\n",
            "tags": [
                "Unity Tool",
                "行为树"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/07/26/VFXGraph%E4%BD%93%E9%AA%8C-%E7%81%AB%E8%8A%B1%E6%95%88%E6%9E%9C/",
            "url": "https://www.fasty97.top/2021/07/26/VFXGraph%E4%BD%93%E9%AA%8C-%E7%81%AB%E8%8A%B1%E6%95%88%E6%9E%9C/",
            "title": "VFXGraph体验-火花效果",
            "date_published": "2021-07-26T06:35:45.000Z",
            "content_html": "<blockquote>\n<p>本文采用：unity2021.1.5f1c1 HDRP 渲染管线</p>\n</blockquote>\n<h1 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h1>\n<p>创建 HDRP 项目，并设置好相关配置。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726143925.png\" alt=\"image-20210726143918376\"></p>\n<p>搭建的场景如图所示：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726144023.png\" alt=\"image-20210726144023543\"></p>\n<h1 id=\"认识vfx-graph\"><a class=\"markdownIt-Anchor\" href=\"#认识vfx-graph\">#</a> 🔸认识 VFX Graph</h1>\n<p>创建一个 VFX Graph 可以点击 Edit 进入编辑界面，其编辑界面和 ShaderGraph 类似。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726144442.png\" alt=\"image-20210726144442857\"></p>\n<h1 id=\"编写graph\"><a class=\"markdownIt-Anchor\" href=\"#编写graph\">#</a> 🔹 编写 Graph</h1>\n<h2 id=\"孵化器循环\"><a class=\"markdownIt-Anchor\" href=\"#孵化器循环\">#</a> 孵化器循环</h2>\n<blockquote>\n<p>针对于持续性和非持续性进行区分</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726144914.png\" alt=\"image-20210726144914494\"></p>\n<h2 id=\"初始化粒子\"><a class=\"markdownIt-Anchor\" href=\"#初始化粒子\">#</a> 初始化粒子</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726150137.png\" alt=\"image-20210726150137280\"></p>\n<blockquote>\n<p>完成上述 2 个步骤时，效果如下，记得替换粒子的贴图</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726145903.gif\" alt=\"\"></p>\n<h2 id=\"渲染粒子\"><a class=\"markdownIt-Anchor\" href=\"#渲染粒子\">#</a> 渲染粒子</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726230116.png\" alt=\"image-20210726230116859\"></p>\n<blockquote>\n<p>通过渲染器设置，火花效果更好了</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726230231.gif\" alt=\"效果\"></p>\n<h2 id=\"更新粒子-使用重力\"><a class=\"markdownIt-Anchor\" href=\"#更新粒子-使用重力\">#</a> 更新粒子 - 使用重力</h2>\n<p>现在我们的火花是直线发射的，我们想让其受到一个重力自动下垂。</p>\n<p>在更新粒子模块，增加重力，设置一个随机数重力。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726230856.png\" alt=\"image-20210726230856799\"></p>\n<blockquote>\n<p>添加重力后，可以看到我们的粒子受重力而下垂。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726231034.gif\" alt=\"\"></p>\n<h1 id=\"️完善火花\"><a class=\"markdownIt-Anchor\" href=\"#️完善火花\">#</a> ❤️完善火花</h1>\n<h2 id=\"发射形状\"><a class=\"markdownIt-Anchor\" href=\"#发射形状\">#</a> 发射形状</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726233034.png\" alt=\"image-20210726233034173\"></p>\n<h2 id=\"local和world坐标\"><a class=\"markdownIt-Anchor\" href=\"#local和world坐标\">#</a> Local 和 World 坐标</h2>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210726233115.png\" alt=\"image-20210726233115448\"></p>\n<blockquote>\n<p>在布局坐标中，粒子效果不会残留，为了让我们的火花可以在世界中残留，需该为世界坐标系</p>\n</blockquote>\n<h1 id=\"添加碰撞\"><a class=\"markdownIt-Anchor\" href=\"#添加碰撞\">#</a> 添加碰撞</h1>\n<blockquote>\n<p>我们希望火花粒子能够和周围环境产生碰撞</p>\n</blockquote>\n<h2 id=\"碰撞框\"><a class=\"markdownIt-Anchor\" href=\"#碰撞框\">#</a> 碰撞框</h2>\n<p>添加如下碰撞框组件：</p>\n<p>其中： <code>LifeTime Loss为生命损失</code></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729201759.png\" alt=\"image-20210729201752721\"></p>\n<p>发现我们的粒子在接触碰撞框时会被弹开。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729201835.gif\" alt=\"\"></p>\n<h2 id=\"碰撞事件\"><a class=\"markdownIt-Anchor\" href=\"#碰撞事件\">#</a> 碰撞事件</h2>\n<blockquote>\n<p>为了响应碰撞添加如下组件</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729202054.png\" alt=\"碰撞响应\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729202141.png\" alt=\"事件处理\"></p>\n<blockquote>\n<p>其效果如下，每个粒子碰撞死亡后将生产 1 个蓝色粒子</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729202653.gif\" alt=\"\"></p>\n<h1 id=\"完善和脚本控制\"><a class=\"markdownIt-Anchor\" href=\"#完善和脚本控制\">#</a> 完善和脚本控制</h1>\n<p>调整一下粒子，将循环关闭，使用脚本控制粒子。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>脚本控制VFX</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VFXTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> vfx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>vfx<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> vf <span class=\"token operator\">=</span> go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VisualEffect<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            vf<span class=\"token punctuation\">.</span><span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>其效果如下图所示，按下 A 自动生成一个特效</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210729205458.gif\" alt=\"\"></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/07/20/ASE%E4%BD%93%E9%AA%8C-%E8%8F%B2%E6%B6%85%E5%B0%94%E6%95%88%E6%9E%9C/",
            "url": "https://www.fasty97.top/2021/07/20/ASE%E4%BD%93%E9%AA%8C-%E8%8F%B2%E6%B6%85%E5%B0%94%E6%95%88%E6%9E%9C/",
            "title": "ASE体验-菲涅尔效果",
            "date_published": "2021-07-20T13:27:04.000Z",
            "content_html": "<blockquote>\n<p>体验一下 ASE 插件</p>\n</blockquote>\n<h3 id=\"体验\"><a class=\"markdownIt-Anchor\" href=\"#体验\">#</a> 体验</h3>\n<p>创建一个 ASE Suface shader，依图连接节点。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210720212833.png\" alt=\"image-20210720212826746\"></p>\n<p>效果如下：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210720213139.gif\" alt=\"\"></p>\n<h3 id=\"感受\"><a class=\"markdownIt-Anchor\" href=\"#感受\">#</a> 感受</h3>\n<blockquote>\n<p>整体感受 ASE 插件，在某些方面确实强于 ShaderGraph ，例如可以直接在默认渲染管线中使用。</p>\n<p>总之，用起来挺爽的。😄</p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/06/08/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFHDRP/",
            "url": "https://www.fasty97.top/2021/06/08/Unity%20%E6%96%B0%E6%8A%80%E6%9C%AFHDRP/",
            "title": "Unity 新技术HDRP",
            "date_published": "2021-06-08T03:42:01.000Z",
            "content_html": "<blockquote>\n<p>本系列基于 Unity2021.1.5f1c1</p>\n</blockquote>\n<h2 id=\"安装hdrp\"><a class=\"markdownIt-Anchor\" href=\"#安装hdrp\">#</a> 安装 HDRP</h2>\n<p>在管理器安装 hdrp 后会自动弹出此初始化对话框。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210608121937.png\" alt=\"image-20210608121930293\"></p>\n<p>根据对话框检测的步骤，将需要修正的地方进行修正。</p>\n<blockquote>\n<p>修正后全部呈现绿√。</p>\n</blockquote>\n<p>修正完成，系统自动添加了如下包。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210608122232.png\" alt=\"image-20210608122232513\"></p>\n<h3 id=\"添加天空盒子\"><a class=\"markdownIt-Anchor\" href=\"#添加天空盒子\">#</a> 添加天空盒子</h3>\n<p>在 Volume 组件中添加如下组件，可以设置天空盒。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210730125729.png\" alt=\"image-20210730125722895\"></p>\n<h3 id=\"调节光线亮度\"><a class=\"markdownIt-Anchor\" href=\"#调节光线亮度\">#</a> 调节光线亮度</h3>\n<p>在 Volume 组件中添加如下组件，可以设置调节光线。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210730125833.png\" alt=\"image-20210730125833770\"></p>\n",
            "tags": [
                "unity",
                "HDRP"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/06/07/%E8%B5%B0%E8%BF%9BUE2-%E4%BD%BF%E7%94%A8%E5%8A%A8%E7%94%BB%E6%A8%A1%E5%9E%8B/",
            "url": "https://www.fasty97.top/2021/06/07/%E8%B5%B0%E8%BF%9BUE2-%E4%BD%BF%E7%94%A8%E5%8A%A8%E7%94%BB%E6%A8%A1%E5%9E%8B/",
            "title": "走进UE2-使用动画模型",
            "date_published": "2021-06-07T01:53:56.000Z",
            "content_html": "<blockquote>\n<p>上一节中，我们熟悉了 Ue 的基本操作并编写简单蓝图控制了一个椅子的移动，这一节我们来进一步完善我们的主角～</p>\n</blockquote>\n<h1 id=\"导入资源\"><a class=\"markdownIt-Anchor\" href=\"#导入资源\">#</a> 导入资源</h1>\n<p>首先我们选择一个人物模型导入。</p>\n<p>删除原先的静态网格椅子模型，在 Mesh 中选择导入的模型 Skeletal Mesh。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210607103237.png\" alt=\"image-20210607103237589\"></p>\n<p>可以看到我们的角色替换成了模型：</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210607103417.png\" alt=\"image-20210607103416955\"></p>\n",
            "tags": [
                "UE4"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/06/02/%E8%B5%B0%E8%BF%9BUE1-%E8%BF%9B%E5%85%A5UE%E4%B8%96%E7%95%8C/",
            "url": "https://www.fasty97.top/2021/06/02/%E8%B5%B0%E8%BF%9BUE1-%E8%BF%9B%E5%85%A5UE%E4%B8%96%E7%95%8C/",
            "title": "走进UE1-进入UE世界",
            "date_published": "2021-06-02T08:50:29.000Z",
            "content_html": "<blockquote>\n<p>UE4 每个月送免费资源，实在是太香了。 😄</p>\n</blockquote>\n<p>所以本系列是一个进入 UE4 学习过程的记录。</p>\n<h1 id=\"参考文档\"><a class=\"markdownIt-Anchor\" href=\"#参考文档\">#</a> 参考文档</h1>\n<ol>\n<li>官方文档： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNC4yNi96aC1DTi9CYXNpY3MvQWN0b3Jz\">https://docs.unrealengine.com/4.26/zh-CN/Basics/Actors</span></li>\n</ol>\n<h1 id=\"前置准备\"><a class=\"markdownIt-Anchor\" href=\"#前置准备\">#</a> 前置准备</h1>\n<p>首先下载 EPIC，使用 EPIC 下载 UE4，这里使用的是 4.26.2。</p>\n<h2 id=\"设置语言为中文\"><a class=\"markdownIt-Anchor\" href=\"#设置语言为中文\">#</a> 设置语言为中文</h2>\n<p>编辑器默认是英文的，可以根据需要设置为中文。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210602170135.png\" alt=\"image-20210602170135583\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210602170203.png\" alt=\"设置中文\"></p>\n<h1 id=\"基础概念介绍\"><a class=\"markdownIt-Anchor\" href=\"#基础概念介绍\">#</a> 基础概念介绍</h1>\n<h2 id=\"界面布局\"><a class=\"markdownIt-Anchor\" href=\"#界面布局\">#</a> 界面布局</h2>\n<p>基础的界面布局如下图所示。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210602170639.png\" alt=\"image-20210602170639546\"></p>\n<h2 id=\"player-start-玩家出生点\"><a class=\"markdownIt-Anchor\" href=\"#player-start-玩家出生点\">#</a> Player Start 玩家出生点</h2>\n<p>Player Start 为玩家的出生点（起点），游戏开始时，玩家从这里开始。</p>\n<h2 id=\"游戏模式\"><a class=\"markdownIt-Anchor\" href=\"#游戏模式\">#</a> 游戏模式</h2>\n<blockquote>\n<p>游戏模式是游戏的基本设定，每一个游戏都必须有一个游戏模式设置。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604194800.png\" alt=\"image-20210604194752974\"></p>\n<blockquote>\n<p>默认 Pawn 类选择游戏角色。</p>\n</blockquote>\n<p>需要在世界场景设置中设置当前需要使用的游戏模式。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604195146.png\" alt=\"image-20210604195146023\"></p>\n<center>世界场景设置</center>\n<h2 id=\"项目输入设置\"><a class=\"markdownIt-Anchor\" href=\"#项目输入设置\">#</a> 项目输入设置</h2>\n<blockquote>\n<p>为了映射按键操作我们需要在项目设置中进行按键映射。</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604195720.png\" alt=\"image-20210604195719983\"></p>\n<h2 id=\"设定角色使其移动\"><a class=\"markdownIt-Anchor\" href=\"#设定角色使其移动\">#</a> 设定角色使其移动</h2>\n<h3 id=\"设定物件\"><a class=\"markdownIt-Anchor\" href=\"#设定物件\">#</a> 设定物件</h3>\n<p>首先需要设置，角色的静态网格（决定呈现内容），设置摄像机（用于拍摄游戏角色）。</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604203512.png\" alt=\"image-20210604203512863\"></p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604203525.png\" alt=\"image-20210604203525271\"></p>\n<h3 id=\"设定角色行为蓝图\"><a class=\"markdownIt-Anchor\" href=\"#设定角色行为蓝图\">#</a> 设定角色行为蓝图</h3>\n<blockquote>\n<p>通过蓝图我们来进行角色行为设置</p>\n</blockquote>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604204643.png\" alt=\"image-20210604204643632\"></p>\n<center>前后左右移动基本蓝图</center>\n<p>角色旋转值设定</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210604205720.png\" alt=\"image-20210604205720790\"></p>\n<p>上下旋转设定</p>\n<p><img data-src=\"https://pic.fasty97.top/NotePad/20210606143318.png\" alt=\"\"></p>\n<blockquote>\n<p>效果测试如下</p>\n</blockquote>\n<p><video src=\"https://pic.fasty97.top/UE1.mp4\" controls=\"controls\"></video></p>\n",
            "tags": [
                "UE4"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/04/29/PUN2%EF%BC%88%E4%BA%8C%EF%BC%89%E5%AF%B9%E8%B1%A1%E5%90%8C%E6%AD%A5/",
            "url": "https://www.fasty97.top/2021/04/29/PUN2%EF%BC%88%E4%BA%8C%EF%BC%89%E5%AF%B9%E8%B1%A1%E5%90%8C%E6%AD%A5/",
            "title": "PUN2（二）对象同步",
            "date_published": "2021-04-29T06:58:33.000Z",
            "content_html": "<blockquote>\n<p>对象同步是多人在线游戏的核心在 Pun 中使用 Photon View 组件来同步对象</p>\n</blockquote>\n<h2 id=\"创建同步对象\"><a class=\"markdownIt-Anchor\" href=\"#创建同步对象\">#</a> 创建同步对象</h2>\n<p>创建一个胶囊体，并为其添加 <code>Photon View</code> ， <code>Photon Transform View</code> 、 <code>Photon Rigidbody View</code>  组件使其监听。</p>\n<img data-src=\"https://pic.fasty97.top/NotePad/20210429151825.png\" alt=\"image-20210429151825946\"  />\n<center>Photon View</center>\n<h2 id=\"连接同步\"><a class=\"markdownIt-Anchor\" href=\"#连接同步\">#</a> 连接同步</h2>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/04/21/%E4%B8%80%E4%B8%AAPyGame%E6%B8%B8%E6%88%8F%E7%9A%84%E8%AF%9E%E7%94%9F/",
            "url": "https://www.fasty97.top/2021/04/21/%E4%B8%80%E4%B8%AAPyGame%E6%B8%B8%E6%88%8F%E7%9A%84%E8%AF%9E%E7%94%9F/",
            "title": "一个PyGame游戏的诞生",
            "date_published": "2021-04-21T01:38:02.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<blockquote>\n<p>得益于各种各样的原因，接手了几个 pygame 游戏的小项目。在自己完成项目设计的时候，发现网络上关于 pygame 的资料比较稀少而且有很多误区，特别是在制作控件，场景切换，资源加载方面。</p>\n<p>趁着自己还有点映像，把一些学习感悟记录下来吧😼。</p>\n</blockquote>\n<h2 id=\"想法\"><a class=\"markdownIt-Anchor\" href=\"#想法\">#</a> 想法</h2>\n<blockquote>\n<p>不论是制作什么项目，都缺少不了你的想法。.</p>\n<p>想法也代表着你的创意，在一个游戏中创意是至关重要的哦❤️。</p>\n</blockquote>\n<p>在你有想法的时候你至少需要明确一下这些点:</p>\n<ol>\n<li>游戏的运行平台：手机、PC、网页…</li>\n<li>游戏的玩家人数：单人、双人、更多人</li>\n<li>游戏的获胜方式：合作、对抗、过关…</li>\n<li>游戏的展现形式：2D，3D (pygame 似乎只支持 2D 😄)</li>\n<li>游戏的视角：Top-Down、Left-Right…</li>\n<li>…</li>\n</ol>\n<p>有了想法的支撑，就好像有了方向，知道朝着哪个方向去做。</p>\n<h2 id=\"搜集或制作游戏的素材\"><a class=\"markdownIt-Anchor\" href=\"#搜集或制作游戏的素材\">#</a> 搜集或制作游戏的素材</h2>\n<blockquote>\n<p>游戏和其他软件项目很大的不同就是，游戏需要很多素材，声音、模型、图片、视频…</p>\n</blockquote>\n<p>这里推荐一些比较好用的游戏素材处理软件：</p>\n<ul>\n<li>建模和贴图处理\n<ul>\n<li>blender 建模</li>\n<li>Substance Painter 贴图处理</li>\n</ul>\n</li>\n<li>像素画和像素动画\n<ul>\n<li>Aseprite</li>\n</ul>\n</li>\n<li>图片处理\n<ul>\n<li>photoshop</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"搭建开发环境\"><a class=\"markdownIt-Anchor\" href=\"#搭建开发环境\">#</a> 搭建开发环境</h2>\n<blockquote>\n<p>对于 pygame 来说，只需要按照 pygame 游戏库就足够了</p>\n</blockquote>\n<p>开发工具可以使用 vscode、pycharm 等任何支持 python 的编辑器。</p>\n<h2 id=\"创造我们的游戏\"><a class=\"markdownIt-Anchor\" href=\"#创造我们的游戏\">#</a> 创造我们的游戏</h2>\n<h3 id=\"跑起来\"><a class=\"markdownIt-Anchor\" href=\"#跑起来\">#</a> 跑起来</h3>\n<h3 id=\"写点控件\"><a class=\"markdownIt-Anchor\" href=\"#写点控件\">#</a> 写点控件</h3>\n<h3 id=\"资源加载\"><a class=\"markdownIt-Anchor\" href=\"#资源加载\">#</a> 资源加载</h3>\n<h3 id=\"精灵和精灵组\"><a class=\"markdownIt-Anchor\" href=\"#精灵和精灵组\">#</a> 精灵和精灵组</h3>\n<h3 id=\"场景切换\"><a class=\"markdownIt-Anchor\" href=\"#场景切换\">#</a> 场景切换</h3>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n",
            "tags": [
                "python"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/04/05/Blazor%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2021/04/05/Blazor%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "Blazor初体验",
            "date_published": "2021-04-05T06:56:52.000Z",
            "content_html": "<blockquote>\n<p>使用 Blazor 来实现前后端统一使用 C# 开发，用 C# 写前端，想想就刺激😃</p>\n</blockquote>\n<h2 id=\"什么是blazor\"><a class=\"markdownIt-Anchor\" href=\"#什么是blazor\">#</a> 什么是 Blazor</h2>\n<p>Blazor 是一个使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L3N0YW5kYXJkL3RvdXI=\">.NET</span> 生成交互式客户端 Web UI 的框架：</p>\n<ul>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L2NzaGFycC8=\">C#</span> 代替 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamF2YXNjcmlwdC5jb20v\">JavaScript</span> 来创建信息丰富的交互式 UI。</li>\n<li>共享使用 .NET 编写的服务器端和客户端应用逻辑。</li>\n<li>将 UI 呈现为 HTML 和 CSS，以支持众多浏览器，其中包括移动浏览器。</li>\n<li>与新式托管平台（如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L3N0YW5kYXJkL21pY3Jvc2VydmljZXMtYXJjaGl0ZWN0dXJlL2NvbnRhaW5lci1kb2NrZXItaW50cm9kdWN0aW9uL2luZGV4\">Docker</span>）集成。</li>\n</ul>\n<p>使用 .NET 进行客户端 Web 开发可提供以下优势：</p>\n<ul>\n<li>使用 C# 代替 JavaScript 来编写代码。</li>\n<li>利用现有的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L3N0YW5kYXJkL2NsYXNzLWxpYnJhcmllcw==\">.NET 库</span>生态系统。</li>\n<li>在服务器和客户端之间共享应用逻辑。</li>\n<li>受益于 .NET 的性能、可靠性和安全性。</li>\n<li>在 Windows、Linux 和 macOS 上使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS8=\">Visual Studio</span> 保持高效工作。</li>\n<li>以一组稳定、功能丰富且易用的通用语言、框架和工具为基础来进行生成</li>\n</ul>\n<blockquote>\n<p>Blazor 应用基于组件。 Blazor 中的组件是指 UI 元素，例如页面、对话框或数据输入窗体。</p>\n</blockquote>\n<p>组件是内置到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L3N0YW5kYXJkL2Fzc2VtYmx5Lw==\">.NET 程序集</span>的 .NET C# 类，它们用于：</p>\n<ul>\n<li>定义灵活的 UI 呈现逻辑。</li>\n<li>处理用户事件。</li>\n<li>可以嵌套和重用。</li>\n<li>可作为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vYXNwbmV0L2NvcmUvcmF6b3ItcGFnZXMvdWktY2xhc3M/dmlldz1hc3BuZXRjb3JlLTUuMA==\">Razor 类库</span>或 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vbnVnZXQvd2hhdC1pcy1udWdldA==\">NuGet 包</span>共享和分发。</li>\n</ul>\n<h2 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h2>\n<blockquote>\n<p>此文使用 vs2019 .net core 3.1</p>\n</blockquote>\n<p><code>这里我从空项目开始创建。</code></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210406092431.png\" alt=\"image-20210406092424290\"></p>\n<h2 id=\"配置项目\"><a class=\"markdownIt-Anchor\" href=\"#配置项目\">#</a> 配置项目</h2>\n<h3 id=\"配置starup\"><a class=\"markdownIt-Anchor\" href=\"#配置starup\">#</a> 配置 Starup</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>ConfigureServices</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token comment\">// 启用 RazorPage</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     services<span class=\"token punctuation\">.</span><span class=\"token function\">AddRazorPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     <span class=\"token comment\">// 启用服务端 Blazor</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     services<span class=\"token punctuation\">.</span><span class=\"token function\">AddServerSideBlazor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>Configure</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IApplicationBuilder</span> app<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IWebHostEnvironment</span> env<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">.</span><span class=\"token function\">IsDevelopment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                app<span class=\"token punctuation\">.</span><span class=\"token function\">UseDeveloperExceptionPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 启用静态文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            app<span class=\"token punctuation\">.</span><span class=\"token function\">UseStaticFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">// 启用路由</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            app<span class=\"token punctuation\">.</span><span class=\"token function\">UseRouting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 启用终端节点</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            app<span class=\"token punctuation\">.</span><span class=\"token function\">UseEndpoints</span><span class=\"token punctuation\">(</span>endpoints <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token comment\">// 配置实时连接 SinglR</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                endpoints<span class=\"token punctuation\">.</span><span class=\"token function\">MapBlazorHub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token comment\">// 配置 Blazor 的主页</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                endpoints<span class=\"token punctuation\">.</span><span class=\"token function\">MapFallbackToPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_Host\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"配置通用依赖项\"><a class=\"markdownIt-Anchor\" href=\"#配置通用依赖项\">#</a> 配置通用依赖项</h3>\n<p>创建_Imports.razor 文件加入内容</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Http</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@<span class=\"token keyword\">using</span> Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Authorization</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>@<span class=\"token keyword\">using</span> Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Components<span class=\"token punctuation\">.</span>Authorization</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>@<span class=\"token keyword\">using</span> Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Components<span class=\"token punctuation\">.</span>Forms</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@<span class=\"token keyword\">using</span> Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Components<span class=\"token punctuation\">.</span>Routing</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>@<span class=\"token keyword\">using</span> Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Components<span class=\"token punctuation\">.</span>Web</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>@<span class=\"token keyword\">using</span> Microsoft<span class=\"token punctuation\">.</span>JSInterop</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>@<span class=\"token keyword\">using</span> BlazorAppGo</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>@<span class=\"token keyword\">using</span> BlazorAppGo<span class=\"token punctuation\">.</span>Shared</pre></td></tr></table></figure><h3 id=\"书写_host主页\"><a class=\"markdownIt-Anchor\" href=\"#书写_host主页\">#</a> 书写_Host 主页</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@page \"/\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@namespace BlazorAppGo.Pages</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>@&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Layout = null;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>BlazorAppGo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>base</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>~/<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/bootstrap/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/site.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>typeof(App)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">render-mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ServerPrerendered<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blazor-error-ui<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>environment</span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Staging,Production<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            An error has occurred. This application may no longer respond until reloaded.</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>environment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>environment</span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Development<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            An unhandled exception has occurred. See browser dev tools for details.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>environment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Reload<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dismiss<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>🗙<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_framework/blazor.server.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"razor-页面\"><a class=\"markdownIt-Anchor\" href=\"#razor-页面\">#</a> Razor 页面</h2>\n<p>在 Blazor 中，每一个页面以.cshtml 结尾，页面可以绑定一个模型类用户数据操作。</p>\n<h2 id=\"rezor布局\"><a class=\"markdownIt-Anchor\" href=\"#rezor布局\">#</a> Rezor 布局</h2>\n<p>在 Blazor 中，在 Shared 文件夹下书写布局和通用组件。创建.razor 结尾的文件写入如下文件。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@inherits LayoutComponentBase</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sidebar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NavMenu</span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-row px-4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://docs.microsoft.com/aspnet/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content px-4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        @Body</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>在布局文件中，使用 @inherits LayoutComponentBase 来继承自 LayoutComponentBase 标注为布局文件</p>\n</blockquote>\n<h3 id=\"apprazor\"><a class=\"markdownIt-Anchor\" href=\"#apprazor\">#</a> App.razor</h3>\n<blockquote>\n<p>创建 App.razor 文件用于配置路由情况和默认布局</p>\n</blockquote>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Router</span> <span class=\"token attr-name\">AppAssembly</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@typeof(Program).Assembly<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Found</span> <span class=\"token attr-name\">Context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>routeData<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouteView</span> <span class=\"token attr-name\">RouteData</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@routeData<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">DefaultLayout</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@typeof(MainLayout)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Found</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NotFound</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LayoutView</span> <span class=\"token attr-name\">Layout</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@typeof(MainLayout)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Sorry, there's nothing at this address.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LayoutView</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NotFound</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Router</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"razor-组件\"><a class=\"markdownIt-Anchor\" href=\"#razor-组件\">#</a> Razor 组件</h2>\n<blockquote>\n<p>创建.razor 结尾的文件作为 Razaor 组件，组件可以在其他页面或组件中复用</p>\n</blockquote>\n<p>直接使用 &lt;组件名称&gt; 当作 html 元素使用即可。</p>\n<h2 id=\"curd小例子\"><a class=\"markdownIt-Anchor\" href=\"#curd小例子\">#</a> CURD 小例子</h2>\n<h3 id=\"ef连接sqlite\"><a class=\"markdownIt-Anchor\" href=\"#ef连接sqlite\">#</a> EF 连接 Sqlite</h3>\n<blockquote>\n<p>在数据库连接上，这里我使用比较简单的 sqlite</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210406154848.png\" alt=\"image-20210406154848381\"></p>\n<center>安装相关包</center>\n<h4 id=\"实体配置\"><a class=\"markdownIt-Anchor\" href=\"#实体配置\">#</a> 实体配置</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>EntityFrameworkCore</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">BlazorAppGo<span class=\"token punctuation\">.</span>Models</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppDbContext</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">DbContext</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> Users <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">AppDbContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptions<span class=\"token punctuation\">&lt;</span>AppDbContext<span class=\"token punctuation\">></span></span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConfiguring</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptionsBuilder</span> optionsBuilder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnConfiguring</span><span class=\"token punctuation\">(</span>optionsBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnModelCreating</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ModelBuilder</span> modelBuilder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnModelCreating</span><span class=\"token punctuation\">(</span>modelBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"注入\"><a class=\"markdownIt-Anchor\" href=\"#注入\">#</a> 注入</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddDbContext</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AppDbContext<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span> options<span class=\"token punctuation\">.</span><span class=\"token function\">UseSqlite</span><span class=\"token punctuation\">(</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sqlite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"appsetting\"><a class=\"markdownIt-Anchor\" href=\"#appsetting\">#</a> appsetting</h4>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 连接字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"ConnectionStrings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"sqlite\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Data Source=./myData.db\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h4 id=\"service\"><a class=\"markdownIt-Anchor\" href=\"#service\">#</a> service</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">BlazorAppGo<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">BlazorAppGo<span class=\"token punctuation\">.</span>Services</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserService</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">AppDbContext</span> dbContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">UserService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AppDbContext</span> dbContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dbContext <span class=\"token operator\">=</span> dbContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            dbContext<span class=\"token punctuation\">.</span><span class=\"token function\">AddAsync</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            dbContext<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> user <span class=\"token operator\">=</span> dbContext<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            user<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            dbContext<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            dbContext<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            dbContext<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>dbContext<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            dbContext<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">List</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">return</span> dbContext<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">User</span> <span class=\"token function\">FindOne</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">return</span> dbContext<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>注入</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>             * AddSingleton 添加唯一注入</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>             * AddScoped 添加会话注入，每次会话不同</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>             * AddTransient 添加不同实例，每次请求都不同</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>             */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddScoped</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AppDbContext<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddScoped</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>UserService<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"razor界面\"><a class=\"markdownIt-Anchor\" href=\"#razor界面\">#</a> Razor 界面</h3>\n<h4 id=\"userlist\"><a class=\"markdownIt-Anchor\" href=\"#userlist\">#</a> userList</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@page <span class=\"token string\">\"/userList\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@<span class=\"token keyword\">using</span> BlazorAppGo<span class=\"token punctuation\">.</span>Models</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>@<span class=\"token keyword\">using</span> BlazorAppGo<span class=\"token punctuation\">.</span>Services</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>@inject BlazorAppGo<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span>UserService userService</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@inject NavigationManager NavigationManager</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-primary\"</span> @onclick<span class=\"token operator\">=</span><span class=\"token string\">\"Add\"</span><span class=\"token operator\">></span>新增<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-1\"</span><span class=\"token operator\">></span>ID<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">input</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control\"</span> @bind<span class=\"token operator\">-</span><span class=\"token keyword\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-1\"</span><span class=\"token operator\">></span>Name<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">input</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control\"</span> @bind<span class=\"token operator\">-</span><span class=\"token keyword\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">&lt;</span>table <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"table\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"margin-top:15px\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token operator\">&lt;</span>thead<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">></span>ID<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">></span>Name<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">></span>Options<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>thead<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token operator\">&lt;</span>tbody<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        @<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> user <span class=\"token keyword\">in</span> users<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">></span>@user<span class=\"token punctuation\">.</span>Id<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">></span>@user<span class=\"token punctuation\">.</span>Name<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-info\"</span> @onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@(e=>Info(user.Id))\"</span><span class=\"token operator\">></span>详细<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/userUpdate/@user.Id\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-warning\"</span><span class=\"token operator\">></span>修改<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-danger\"</span> @onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@(e=>Del(user.Id))\"</span><span class=\"token operator\">></span>删除<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tbody<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>table<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>@cid<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>@code <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> users<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> cid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        users <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">List</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        userService<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span> <span class=\"token punctuation\">&#123;</span> Id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        users <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">List</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">// 重新绑定 刷新页面</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\">//StateHasChanged();</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token comment\">// 刷新</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token function\">ShouldRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        NavigationManager<span class=\"token punctuation\">.</span><span class=\"token function\">NavigateTo</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"/userInfo/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">id</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Del</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        userService<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        users <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">List</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token function\">ShouldRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"userupdate\"><a class=\"markdownIt-Anchor\" href=\"#userupdate\">#</a> userUpdate</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@page <span class=\"token string\">\"/userUpdate/&#123;Id&#125;\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@inject BlazorAppGo<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span>UserService userService</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-primary\"</span> @onclick<span class=\"token operator\">=</span><span class=\"token string\">\"Save\"</span><span class=\"token operator\">></span>保存<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-1\"</span><span class=\"token operator\">></span>ID<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">input</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control\"</span> @bind<span class=\"token operator\">-</span><span class=\"token keyword\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"Id\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-1\"</span><span class=\"token operator\">></span>Name<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">input</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control\"</span> @bind<span class=\"token operator\">-</span><span class=\"token keyword\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>@<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>修改成功<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/userList\"</span><span class=\"token operator\">></span>返回<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>@code <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Parameter</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> show<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> user <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">FindOne</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        name <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        userService<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Models<span class=\"token punctuation\">.</span>User</span> <span class=\"token punctuation\">&#123;</span> Id <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        show <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"userinfo\"><a class=\"markdownIt-Anchor\" href=\"#userinfo\">#</a> userInfo</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@page <span class=\"token string\">\"/userInfo/&#123;Id&#125;\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@inject BlazorAppGo<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span>UserService userService</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>UserInfo @Id<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Id<span class=\"token punctuation\">:</span>@Id<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Name<span class=\"token punctuation\">:</span>@Name<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/userList\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-primary\"</span><span class=\"token operator\">></span>返回<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>@code<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Parameter</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> user <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">FindOne</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        Name <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\">#</a> 效果</h3>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210407091627.gif\" alt=\"效果\"></p>\n",
            "tags": [
                "新技术体验"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/03/21/%E7%BB%8F%E6%B5%8E%E9%93%BE%E6%9D%A1%E2%80%94%E2%80%94%E9%B1%BC/",
            "url": "https://www.fasty97.top/2021/03/21/%E7%BB%8F%E6%B5%8E%E9%93%BE%E6%9D%A1%E2%80%94%E2%80%94%E9%B1%BC/",
            "title": "经济链条——鱼",
            "date_published": "2021-03-21T02:47:01.000Z",
            "content_html": "<blockquote>\n<p>在实习一段时间后，通过和一些资本家的交流，我逐渐发现了一个社会运作的经济链条。</p>\n</blockquote>\n<h3 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>我在一个科技公司实习，其主要为政府服务；帮助政府进行一些信息化建设。从去年起，公司就规划为市里面某片区建设一套区块链的司法存证系统。就在上周，有幸参加了项目的专家评审；来访的专家都来自市里的科技人才库，有很多有地位民望的教授和专家。我负责做项目讲解，不用说我当紧张死了😂。虽然表面淡定自若，其实内心慌得一批😭。</p>\n<p>ps: 有空更新</p>\n<h3 id=\"项目评审流程\"><a class=\"markdownIt-Anchor\" href=\"#项目评审流程\">#</a> 项目评审流程</h3>\n<h3 id=\"问答模式\"><a class=\"markdownIt-Anchor\" href=\"#问答模式\">#</a> 问答模式</h3>\n<h3 id=\"感受\"><a class=\"markdownIt-Anchor\" href=\"#感受\">#</a> 感受</h3>\n<h3 id=\"经济链条\"><a class=\"markdownIt-Anchor\" href=\"#经济链条\">#</a> 经济链条</h3>\n<h3 id=\"存活手段\"><a class=\"markdownIt-Anchor\" href=\"#存活手段\">#</a> 存活手段</h3>\n",
            "tags": [
                "市场",
                "创业",
                "工作"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/03/09/PUN%EF%BC%88%E4%B8%80%EF%BC%89%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87/",
            "url": "https://www.fasty97.top/2021/03/09/PUN%EF%BC%88%E4%B8%80%EF%BC%89%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87/",
            "title": "PUN2（一）前置准备",
            "date_published": "2021-03-09T02:07:15.000Z",
            "content_html": "<h2 id=\"创建app\"><a class=\"markdownIt-Anchor\" href=\"#创建app\">#</a> 创建 APP</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhvdG9uZW5naW5lLmNvbS8=\">photo 光子服务器官网</span></p>\n<p>在 photo 官网注册后，进入面板，创建一个新 APP，类型选择 PUN</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310100355.png\" alt=\"photo\"></p>\n<p>记录下新创建 App 的 App ID</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310100925.png\" alt=\"image-20210310100925155\"></p>\n<h2 id=\"下载导入unity-pun\"><a class=\"markdownIt-Anchor\" href=\"#下载导入unity-pun\">#</a> 下载导入 Unity PUN</h2>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310101044.png\" alt=\"image-20210310101044859\"></p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210310101241.png\" alt=\"image-20210310101241690\"></p>\n<h2 id=\"连接到服务器\"><a class=\"markdownIt-Anchor\" href=\"#连接到服务器\">#</a> 连接到服务器</h2>\n<p>使用 <code>PhotonNetwork.ConnectUsingSettings();</code>  来连接到服务器</p>\n<p>可以通过继承 <code>MonoBehaviourPunCallbacks</code>  类来实现连接相关的回调。</p>\n<h3 id=\"简单的连接示例\"><a class=\"markdownIt-Anchor\" href=\"#简单的连接示例\">#</a> 简单的连接示例</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Photon<span class=\"token punctuation\">.</span>Pun</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Photon<span class=\"token punctuation\">.</span>Realtime</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">PUNTest</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PunLink</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviourPunCallbacks</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 同步场景</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            PhotonNetwork<span class=\"token punctuation\">.</span>AutomaticallySyncScene <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 使用设置连接</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            PhotonNetwork<span class=\"token punctuation\">.</span><span class=\"token function\">ConnectUsingSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始连接...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConnected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已连接到服务器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 连接到主机</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConnectedToMaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\">// 加入房间</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            PhotonNetwork<span class=\"token punctuation\">.</span><span class=\"token function\">JoinOrCreateRoom</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"room\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RoomOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>MaxPlayers <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>TypedLobby<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始加入房间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnJoinedRoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已加入房间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/20210310110333.gif\" alt=\"ani\"></p>\n<center>效果图</center>",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/03/09/%E5%AD%A4%E7%8B%AC&%E7%8B%AC%E7%AB%8B/",
            "url": "https://www.fasty97.top/2021/03/09/%E5%AD%A4%E7%8B%AC&%E7%8B%AC%E7%AB%8B/",
            "title": "孤独&独立",
            "date_published": "2021-03-09T02:04:29.000Z",
            "content_html": "<blockquote>\n<p>我不喜热闹，甚至很多时候会有逃避人群的念头；与其于人为伍，有时候我更喜欢与自己独处。</p>\n</blockquote>\n<p>可能我并不是一个好相处的人，虽然我周围的朋友都觉得我是一个随和的人；我常常感觉到社交的疲劳和烦躁，和大多数人不同我很多时候并没有感受到真正的社交的快乐。我羡慕那些能很快融入集体，自来熟的人；他们的快乐感觉比我来得简单🙂 。</p>\n<blockquote>\n<p>我享受着孤独，我习惯性的沉溺在自己的小世界中</p>\n</blockquote>\n<p>这大概也是我喜欢计算机，喜欢编程的原因吧；从小我的思想就和别人不同，因此也常受人排挤；人们总是对不符合自己预期的事物提出质疑和否定。那时候我觉得可能我真是个怪人吧😅。不和别人玩，大概就是奇怪吧。</p>\n<blockquote>\n<p>从开始实习后，和朋友疯玩了一阵，最后还是觉得索然无味，还是于自己独处最为有趣。</p>\n</blockquote>\n",
            "tags": [
                "生活"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/03/04/Unity%20PlasticSCM%20%E6%89%98%E7%AE%A1/",
            "url": "https://www.fasty97.top/2021/03/04/Unity%20PlasticSCM%20%E6%89%98%E7%AE%A1/",
            "title": "Unity PlasticSCM 托管",
            "date_published": "2021-03-04T01:21:52.000Z",
            "content_html": "<h2 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h2>\n<blockquote>\n<p>记得之前 unity 也有自己的云同步，但是在使用后体验并不好，开启云同步后对于配置低的电脑软件负担会很大。而且在国内网络下，速度非常慢；所以在试过一次后我还是转战 github 和码云了。</p>\n</blockquote>\n<p>现在 Unity 推出了一套新的托管系统 —— <code>PlasticSCM</code></p>\n<p>在创建项目时，勾选启用 <code>PlasticSCM</code> ，在第一次使用时会自动下载 <code>PlasticSCM</code>  客户端。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304092525.png\" alt=\"创建项目\"></p>\n<h2 id=\"托管界面\"><a class=\"markdownIt-Anchor\" href=\"#托管界面\">#</a> 托管界面</h2>\n<h3 id=\"pending-changes\"><a class=\"markdownIt-Anchor\" href=\"#pending-changes\">#</a> pending changes</h3>\n<p>在 <code>pending changes</code>  界面会显示当前的 <code>changeList</code> ，默认勾选了 AutoSave。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304094320.png\" alt=\"托管界面\"></p>\n<h3 id=\"changesets\"><a class=\"markdownIt-Anchor\" href=\"#changesets\">#</a> Changesets</h3>\n<p>Changesets 面板显示项目的提交记录和资源变化。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304101907.png\" alt=\"Changesets\"></p>\n<h2 id=\"客户端\"><a class=\"markdownIt-Anchor\" href=\"#客户端\">#</a> 客户端</h2>\n<p>点击 Launch Plastic 可以启动客户端。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210304102159.png\" alt=\"客户端\"></p>\n<p>客户端可以直观方便的管理托管项目。</p>\n<h2 id=\"使用感受\"><a class=\"markdownIt-Anchor\" href=\"#使用感受\">#</a> 使用感受</h2>\n<ol>\n<li>PlasticSCM 支持大文件存储，相比传统 git 更加适应游戏开发的需要。</li>\n<li>与 Unity 高度集成，可以在 unity 中进行快捷操作</li>\n<li>是替代 git 的不二选择</li>\n</ol>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/02/22/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2021/02/22/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/",
            "title": "原型模式",
            "date_published": "2021-02-22T04:47:13.000Z",
            "content_html": "<blockquote>\n<p>原型模式：使用特定原型实例来创建特定种类的对象，并且通过拷贝原型来创建新的对象。</p>\n</blockquote>\n<h3 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h3>\n<p>假如在游戏中我们需要生成各种各样的怪物，我们需要一个孵化器，我们想到为每个怪物类型确定一个孵化器，如下图所示：</p>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1734105731476\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"144\" style=\"max-width: 249.984375px;\" viewBox=\"0 0 249.984375 144\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-Ghost LE-GhostSpawner\" id=\"L-Ghost-GhostSpawner\" style=\"opacity: 1;\"><path class=\"path\" d=\"M69.625,27.5L94.625,27.5L119.625,27.5\" marker-end=\"url(#arrowhead8)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead8\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-Demo LE-DemoSpawner\" id=\"L-Demo-DemoSpawner\" style=\"opacity: 1;\"><path class=\"path\" d=\"M69.2265625,116.5L94.625,116.5L119.90625,116.5\" marker-end=\"url(#arrowhead9)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead9\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-Ghost-4\" transform=\"translate(38.8125,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-30.8125\" y=\"-19.5\" width=\"61.625\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-20.8125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Ghost</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-GhostSpawner-5\" transform=\"translate(180.8046875,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-61.1796875\" y=\"-19.5\" width=\"122.359375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-51.1796875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">GhostSpawner</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-Demo-6\" transform=\"translate(38.8125,116.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-30.4140625\" y=\"-19.5\" width=\"60.828125\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-20.4140625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Demo</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-DemoSpawner-7\" transform=\"translate(180.8046875,116.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-60.8984375\" y=\"-19.5\" width=\"121.796875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-50.8984375,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">DemoSpawner</tspan></text></g></g></g></g></g></g></svg></pre><p>✔️ 不难想到，我们可以抽象出怪物的基类对上面的结构进行优化。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 怪物基类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Hp <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> Speed <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\">Monster</span> <span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"Hp:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Hp</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Speed:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Speed</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> \t<span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// 幽灵类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Ghost</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Monster</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Monster</span> <span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Ghost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>Hp<span class=\"token operator\">=</span><span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span>Hp<span class=\"token punctuation\">,</span>Speed <span class=\"token operator\">=</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span>Speed<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/// 孵化器</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Spawner</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Monster</span> _monster<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Spawner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Monster</span> monster<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            _monster <span class=\"token operator\">=</span> monster<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Monster</span> <span class=\"token function\">SpawnerMonster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">return</span> _monster<span class=\"token punctuation\">.</span><span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>调用</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> gh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Ghost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>Hp <span class=\"token operator\">=</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> Speed <span class=\"token operator\">=</span> <span class=\"token number\">3.3f</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> spa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Spawner</span><span class=\"token punctuation\">(</span>gh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> en<span class=\"token operator\">=</span> spa<span class=\"token punctuation\">.</span><span class=\"token function\">SpawnerMonster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>en<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\">#</a> 结论</h3>\n<blockquote>\n<p>关于这个模式，有一点比较优雅的是，它不仅克隆原型类，而且它也克隆了对象的状态。</p>\n</blockquote>\n<p>基于这样的 <code>模板(原型)</code> ，我们可以创建出类似的一系列对象。</p>\n<p>📘 Ps: 有兴趣的话可以去看看 <code>Self语言</code> 相信你会对原型，oop 有新的认识 —— 类并不是实现 oop 的唯一方法。</p>\n<p>📖OOP 的特征是它将状态和行为结合得更紧密。</p>\n<h3 id=\"扩展\"><a class=\"markdownIt-Anchor\" href=\"#扩展\">#</a> 扩展</h3>\n<p>正是 self 基于原型的设计理念，诞生了现在大受欢迎的 <code>javascript</code> ；</p>\n<p>正是 self 不断强化编译技术，虚拟机效率，现在的动态语言才能高效执行。</p>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/02/22/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2021/02/22/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/",
            "title": "观察者模式",
            "date_published": "2021-02-22T01:35:56.000Z",
            "content_html": "<blockquote>\n<p>观察者模式（Observer）：在对象间定义一种 <code>一对多</code> 的依赖关系，以便当某对象的状态改变时，与它存在依赖关系的所有对象都能收到通知并自动进行更新。</p>\n</blockquote>\n<ul>\n<li>MVC 模式的底层可以说就是利用了观察者模式</li>\n</ul>\n<h2 id=\"基础设计\"><a class=\"markdownIt-Anchor\" href=\"#基础设计\">#</a> 基础设计</h2>\n<blockquote>\n<p>我们可以使用如下的方式设计一个简单的观察者模式，在被观察者中需要存储一个观察者组，提供一个发送消息的方法对观察组进行消息推送。</p>\n<p>在观察者中提供一个消息响应的方法，响应消息。</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>事件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 事件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Event</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        捡到金币<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        通关</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>接口</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 观察者接口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IObserver</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">/// 接收通知</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"subject\">&lt;/param></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"eventMsg\">&lt;/param></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Subject</span> subject<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Event</span> eventMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// 被观察者接口</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISubject</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span> <span class=\"token function\">Observers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>实体对象</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 观察者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IObserver</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Subject</span> subject<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Event</span> eventMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>eventMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">case</span> Event<span class=\"token punctuation\">.</span>捡到金币<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    subject<span class=\"token punctuation\">.</span>Score <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">case</span> Event<span class=\"token punctuation\">.</span>通关<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    subject<span class=\"token punctuation\">.</span>Score <span class=\"token operator\">+=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">/// 被观察者</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Subject</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ISubject</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span> _observers<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// 发送消息</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"eventMsg\">&lt;/param></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Notify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Event</span> eventMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            _observers<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">=></span>x<span class=\"token punctuation\">.</span><span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>eventMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            _observers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>IObserver<span class=\"token punctuation\">></span></span> <span class=\"token function\">Observers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">return</span> _observers<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            _observers<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObserver</span> observer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            _observers<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"使用委托和事件\"><a class=\"markdownIt-Anchor\" href=\"#使用委托和事件\">#</a> 使用委托和事件</h2>\n<p>在 Csharp 中内置了委托和事件来处理这种一对多的响应方式。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>c#内置了委托和事件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObserverPattern</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// 观察者模式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">internal</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"小白\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mouse</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"小鼠\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            c<span class=\"token punctuation\">.</span><span class=\"token function\">OnCatCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">event</span> <span class=\"token class-name\">Action</span> catCom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCatCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;来了\"</span><span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            catCom<span class=\"token punctuation\">?.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Mouse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cat</span> cat<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 将事件绑定到方法</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            cat<span class=\"token punctuation\">.</span>catCom <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>MouseRun<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MouseRun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;快跑!!\"</span><span class=\"token punctuation\">,</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>        </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h2>\n<p>其实观察者模式就是对象的一种 <code>间接同步调用</code> ，使用这种方法是为了解除耦合，达到统一分配管理的作用。</p>\n<p>从上文提到的可以知道，这种模式是同步的，也就是说当存在一组观察者时，那么可能会导致 <code>阻塞</code> ，但在实际中可能没这么严重，但在使用中我们还需注意。</p>\n<blockquote>\n<p>如果你在每次响应后给出一个状态，表示通知的响应情况，那么这就接近  <code>责任链模式</code> 了。</p>\n</blockquote>\n<h2 id=\"销毁对象\"><a class=\"markdownIt-Anchor\" href=\"#销毁对象\">#</a> 销毁对象？</h2>\n<p>在书中提到一个问题很有趣，在观察者模式中销毁对象该怎么办呢？</p>\n<p>在销毁对象前，需要解除监听，确保对象被正确销毁。</p>\n<h2 id=\"现状\"><a class=\"markdownIt-Anchor\" href=\"#现状\">#</a> 现状</h2>\n<blockquote>\n<p>观察者模式出现于 1994 年（比我还大😄), 因此基本都是基于类来实现的，但现在更流行 <code>函数式编程</code> ，可能不太符合现在的编程美学。例如 C# 的 event 就是现代化的观察者模式。</p>\n</blockquote>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/02/22/python%E8%BF%9E%E6%8E%A5Mysql/",
            "url": "https://www.fasty97.top/2021/02/22/python%E8%BF%9E%E6%8E%A5Mysql/",
            "title": "python连接Mysql",
            "date_published": "2021-02-22T01:16:48.000Z",
            "content_html": "<blockquote>\n<p>python 3.x 开始需要下载安装 <code>PyMySQL</code></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pymysql</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ip <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>user <span class=\"token operator\">=</span> <span class=\"token string\">'root'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>password <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>db <span class=\"token operator\">=</span> <span class=\"token string\">'spr'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始连接~'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\"># 打开数据库连接</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    con <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">3306</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span>user<span class=\"token punctuation\">,</span> passwd<span class=\"token operator\">=</span>password<span class=\"token punctuation\">,</span> db<span class=\"token operator\">=</span>db<span class=\"token punctuation\">,</span> charset<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># 游标对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    cur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 执行 sql</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'select * from food'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    res <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 插入</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into food (fName,fDesc) values('%s','%s')\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'小西瓜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'一毛一个'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    con<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'成功插入'</span><span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">.</span>rowcount<span class=\"token punctuation\">,</span> <span class=\"token string\">'条数据'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 关闭连接</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    con<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/01/25/%E5%AD%A6%E7%9D%80%E7%94%9F%E6%B4%BB/",
            "url": "https://www.fasty97.top/2021/01/25/%E5%AD%A6%E7%9D%80%E7%94%9F%E6%B4%BB/",
            "title": "学着生活",
            "date_published": "2021-01-25T03:13:02.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanV6aWtvbmcuY29tL3Bvc3RzLzQ0MzkxODk1LTFmNDYtNDU0OS1iMTY4LWVmNmIyZDc2NDA1Yg==\">去交会让你开心的朋友，去爱不会让你流泪的人，去向自己想去的方向，去完成不论大小的梦想，生活应该是美好而又温柔的，你也是。</span></p>\n</blockquote>\n<p>大概是以前太贪玩了，亦或者是自己内心的世界太丰富多彩了吧，不会孤独，在自己的小天地里就仿佛拥有了整个世界。—— 宅着真爽♥️</p>\n<p>有时候我觉得就这样宅着过一辈子也许也不错吧。</p>\n<p>但其实，生活还有很多美好等着我去发现，早上的一杯热茶，一缕阳光，午后的一阵微风，幸福感就在我们身边左右徘徊等着我们去发现。</p>\n<blockquote>\n<p>大人才考虑傻不傻，小孩子只考虑能不能做</p>\n</blockquote>\n<p>不要觉得自己的做法很傻，只要做这件事能让自己开心，就放心去做吧，没有那么多机会在等待，没有那么多人原地徘徊。—— 希望我们永远都能做孩子💝</p>\n<blockquote>\n<p>一个人旅行，遇见更好的自己</p>\n</blockquote>\n<p>不知道你们有没有试过自己一个人去旅行，一个人解决吃饭，住宿。在这段时间我真正去一个人的旅行，婉言拒绝了朋友的陪同，想自己去走走，感受生活，也是为了更好的自己。</p>\n<blockquote>\n<p>人是群居动物，总是抱团取暖</p>\n</blockquote>\n<p>人们总是聚在一起，互相关心，以填补精神世界上的空洞；正是因为这些链接把我们串起来；让我们对彼此有了眷恋和感情。</p>\n<blockquote>\n<p>多出去走走，多看看自己</p>\n</blockquote>\n<p>以后的自己看到此文一定会觉得自己很傻吧，但是每一次觉得自己很傻的时刻，就代表了自己的进步吧！</p>\n<hr>\n<p>—— 此文 记于 2021 年 1 月 25 日 12:01:06  在昨天和朋友玩了一整天后🙂.</p>\n",
            "tags": [
                "生活"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/01/19/%E3%80%8AHELLO%20WORLD%20%E3%80%8B%E5%BD%B1%E8%AF%84/",
            "url": "https://www.fasty97.top/2021/01/19/%E3%80%8AHELLO%20WORLD%20%E3%80%8B%E5%BD%B1%E8%AF%84/",
            "title": "《HELLO WORLD 》影评",
            "date_published": "2021-01-19T01:30:57.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>相信作为一个程序员面对 <code>Helloworld</code>  应该不会陌生吧！</p>\n<p>不论我们学习神门语言，第一段程序就是输出一段 <code>HelloWorld</code></p>\n<p>向世界问好～</p>\n<pre><code>print(&quot;HelloWorld&quot;);\nConsole.log(&quot;HelloWorld&quot;);\nConsole.WriteLine(&quot;HelloWorld&quot;);\ncout &lt;&lt; &quot;HelloWorld&quot; &lt;&lt; endl;\n</code></pre>\n<p>🔸一看到这个特别的名字，我就被深深的吸引了，想着难不成是讲编程的故事吧<img data-src=\"http://pic.fasty97.top/NotePad/20210119093235.png\" alt=\"2027\"></p>\n<center>2027 京都</center>\n<blockquote>\n<p>看了一段，我才发现这是一部爱情故事，男主为了找回女主的存在跨越时间空间去挽救，像极了《命运石之门》里面的世界线桥段。</p>\n</blockquote>\n<h2 id=\"数据世界\"><a class=\"markdownIt-Anchor\" href=\"#数据世界\">#</a> 数据世界</h2>\n<p>在未来的世界，科技无限的发展，任何事物都可以用数据来存储通过所谓的量子计算和无限存储来保存世界。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"http://pic.fasty97.top/NotePad/20210119145734.jpg\" alt=\"数据世界\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145752.jpg\" alt=\"数据世界\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145801.jpg\" alt=\"等车\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145813.jpg\" alt=\"读书\"></p>\n<p>男主在未来的自己的指导下，手把手教撩妹？🙂</p>\n<h2 id=\"真实世界\"><a class=\"markdownIt-Anchor\" href=\"#真实世界\">#</a> 真实世界？</h2>\n<p>在男主成功追到妹子后，突然世界变了，原来未来的自己是为了拯救真实世界的自己，打算用数据世界的女主的数据来修复真实世界的女主的大脑。——— 反转😏</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"http://pic.fasty97.top/NotePad/20210119145823.jpg\" alt=\"真实世界？\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145835.jpg\" alt=\"真实世界？\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145846.jpg\" alt=\"真实世界？\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145858.jpg\" alt=\"真实世界？\"></p>\n<p>其中有一个桥段还是很感人的，现实世界的男主为了让女主苏醒，费尽心力，甚至让自己落下了肢体麻痹的毛病，在女主苏醒的时候，现实世界的男主紧紧抱住女主，喜悦无法言表。但女主感觉的出来，眼前的人并不是往日的男主，尽管男主按照未来自己的步骤去实施其印象却是不同的。</p>\n<p>虽然如此，在最后男主带她回家时，她还是给了未来的男主一个拥抱。并说出了 <code>你一定爱着我吧</code> 这样的话。</p>\n<blockquote>\n<p>确实啊，能被人爱着是多么幸福的一件事，她给不了他什么，也不可能留下来，但对爱着自己的人说 <code>谢谢</code> 是对他最大的认可吧💖。</p>\n</blockquote>\n<h2 id=\"新世界\"><a class=\"markdownIt-Anchor\" href=\"#新世界\">#</a> 新世界</h2>\n<p>最后，一个转场，看到的是未来的女主在守候着男主。原来这一切都是男主客服的困难，从沉睡中苏醒的故事。</p>\n<p>—— 反转😏</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"http://pic.fasty97.top/NotePad/20210119145911.jpg\" alt=\"新世界\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210119145920.jpg\" alt=\"新世界\"></p>\n<p>未来他们已经在月球了吧，蔚蓝的地球在远方，究竟这个世界又是不是一个虚拟的数据世界呢，</p>\n<p>这都不重要了，未来的生活总是充满期待！</p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这是一部蛮创新的动漫电影，名字创新，剧情反转，立意深刻。</p>\n<p>其中提到的内存地址冲突，系统排异，像极了我们的编程系统。</p>\n<blockquote>\n<p>要好好管理内存地址鸭😄</p>\n</blockquote>\n",
            "tags": [
                "动漫"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/01/18/2020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "url": "https://www.fasty97.top/2021/01/18/2020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/",
            "title": "2020年终总结",
            "date_published": "2021-01-18T03:44:37.000Z",
            "content_html": "<blockquote>\n<p>不知道写点什么，就想着写点东西放博客上，希望以后的自己可以感谢现在的自己吧😄。</p>\n</blockquote>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>不知不觉 2020 年就过去了，感觉这一年时间过得飞快！（[破音] 不要啊，不想长大！）</p>\n<p>这是糟糕的一年，不论是对于我还是对于大家想必都是吧😅。</p>\n<p>用一句话总结一下：</p>\n<blockquote>\n<p>计划赶不上变化，生活总想让我低头</p>\n</blockquote>\n<p>从图片你就可以看出 2020 我超级摸鱼的。</p>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210118131259.png\" alt=\"超级摸鱼\" style=\"zoom: 50%;\" />\n<h2 id=\"暑假中\"><a class=\"markdownIt-Anchor\" href=\"#暑假中\">#</a> 暑假中</h2>\n<blockquote>\n<p>🛰我从来没想到会放这样一个长假，大概一生也就这么一次了吧</p>\n</blockquote>\n<p>在假期中我每周都制定了计划，主要针对了 <code>C++</code>  和 <code>Shader</code>  进行学习。（不得不说 C++ 牛逼）</p>\n<h3 id=\"自设框架\"><a class=\"markdownIt-Anchor\" href=\"#自设框架\">#</a> 自设框架</h3>\n<blockquote>\n<p>Final framework —— 希望它成为最终的框架</p>\n</blockquote>\n<p>其框架现在已经包含以下功能：</p>\n<ol>\n<li>资源加载\n<ol>\n<li>Resource 加载</li>\n<li>AB 包加载</li>\n<li>Addressable 加载</li>\n</ol>\n</li>\n<li>单例\n<ol>\n<li>非 Mono 单例</li>\n<li>Mono 单例</li>\n</ol>\n</li>\n<li>全局 Mono</li>\n<li>对象池</li>\n<li>音效管理器</li>\n<li>输入管理器</li>\n<li>UI 管理器</li>\n<li>FSM 有限状态机</li>\n<li>事件中心</li>\n<li>对话系统</li>\n<li>简易协程行为树</li>\n<li>天赋树系统</li>\n<li>背包系统</li>\n<li>Astar 寻路</li>\n<li>存储系统</li>\n</ol>\n<p><strong>有空会开一篇文章专门介绍。</strong></p>\n<h3 id=\"简易项目\"><a class=\"markdownIt-Anchor\" href=\"#简易项目\">#</a> 简易项目</h3>\n<p>在暑假里，和 <code>小觉</code> ， <code>刺客</code> 一同制作了一个简易的 2D 横版解密过关游戏。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>担任</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>小宇 / Fasty</td>\n<td>Programming</td>\n</tr>\n<tr>\n<td>小觉</td>\n<td>Programming</td>\n</tr>\n<tr>\n<td>刺客</td>\n<td>Design</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210118140327.gif\" alt=\"效果预览\"></p>\n<h2 id=\"暑假后开学\"><a class=\"markdownIt-Anchor\" href=\"#暑假后开学\">#</a> 暑假后开学</h2>\n<p>暑假后开学，在学校的生活还是非常好的，每天上一下少得可怜的课程。当然如期上了我们学校的 `《游戏设计》课程，果不其然，并不是什么正经的游戏设计课程。简单说来就是使用 python 的 pygame 库；自己组队完成一款简单的 2D 游戏。其目的大概是强化一下我们的 python 的熟练程度吧。</p>\n<h3 id=\"光之子\"><a class=\"markdownIt-Anchor\" href=\"#光之子\">#</a> 光之子</h3>\n<p>对于这个名字我也不好评定，刚好那段时间育碧在免费送 <code>光之子</code> ，这个游戏也承载了我的很多回忆。大概是高中时候吧，那时候第一次看到这个游戏就被这个游戏的画风和剧情所深深吸引。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210118123146.jpeg\" alt=\"光之子\"></p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"http://pic.fasty97.top/NotePad/20210118122142.jpeg\" alt=\"举剑\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210118122627.jpeg\" alt=\"对话\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210118123342.jpeg\" alt=\"空中的房间\"><br>\n<img data-src=\"http://pic.fasty97.top/NotePad/20210118123735.jpeg\" alt=\"宫殿\"></p>\n<h3 id=\"我们的光之子\"><a class=\"markdownIt-Anchor\" href=\"#我们的光之子\">#</a> 我们的光之子</h3>\n<blockquote>\n<p>因为疫情的关系，老师希望我们的作品能够跟疫情挂钩。</p>\n</blockquote>\n<p>我用 <code>pygame</code>  试了一下，pygame 效率很低，跑一个简单的 2D 场景，放置了几个精灵。凭借着我的 2600cpu  rx580gpu 16g 2933，只能跑一百多。（可能 pygame 压根就没法调用 GPU 吧，CPU 的效率也很低，果然 pygame 就只能写点小玩意玩玩 💔）<br>\n🏹而且 pygame 对效率很敏感，在加载资源和精灵渲染部分消耗极高。如果资源重复加载将造成帧率的大幅下降！</p>\n<div class=\"note primary\">\n<p>So</p>\n</div>\n<p>我们定下了，简单的 <code>泡泡堂</code> 游戏形式使用 <code>炸弹</code> 消灭地图中游荡的 <code>病毒</code> 。</p>\n<p>➡️与之不同的是，我们加入了剧情和对话。</p>\n<p>整个开发过程还是比较快乐的，吐槽一下 pygame，聊聊天，大概一周的时间吧，我们的作品完成了！</p>\n<p>最终《游戏设计》这门课程，老师给了我 100 分，给了自己一份满意的答卷。</p>\n<h2 id=\"今年的新书\"><a class=\"markdownIt-Anchor\" href=\"#今年的新书\">#</a> 今年的新书</h2>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"http://pic.fasty97.top/NotePad/20210118140916.png\" alt=\"游戏优化\"></p>\n<h2 id=\"实习\"><a class=\"markdownIt-Anchor\" href=\"#实习\">#</a> 实习</h2>\n<p>​\t在今年十月份的时候，收到朋友邀请，我开始了实习生涯，在一家开发公司做 web 相关的开发。（本来打算自己找一家游戏开发公司的，结果学校催得紧，自己也没太多准备，又是朋友介绍，真香定律。）</p>\n<p>老实说，这并不是我第一次实习了，在两年前，老师推荐下，我去了一家医疗系统开发的公司，讲道理公司非常坑😰，所以我的第一次实习经历并不是很好。不过不能一棍子打死，直到现在我依然待在这里实习，这里的员工有很多都是我的同学和朋友，虽然工资不高，生活却还舒适。该干活时干活，该玩时玩，以至于时间过得飞快。</p>\n<h2 id=\"跨年\"><a class=\"markdownIt-Anchor\" href=\"#跨年\">#</a> 跨年</h2>\n<p>喊着几个朋友跨年，感受新年的到来，看着时钟滴答滴答，看着时针，分针，秒针在辛苦忙碌了一天后的团聚，感觉生活真的需要仪式感🎴。</p>\n<p>长这么大，我第一次发现，自己居然有射飞镖的天赋，10 镖 7 中，赢了个小奖品。</p>\n<p>权当是收到的新年礼物吧🎁!</p>\n<h2 id=\"新年祈愿\"><a class=\"markdownIt-Anchor\" href=\"#新年祈愿\">#</a> 🚄新年祈愿</h2>\n<p>在最后的最后，希望新的一年里，自己可以变得更好，发现更多生活的美！</p>\n<p>永远积极向上，永远热爱编程，永远年轻！</p>\n",
            "tags": [
                "生活",
                "年终总结"
            ]
        },
        {
            "id": "https://www.fasty97.top/2021/01/14/NetCore%20WebAPI%E5%85%A5%E9%97%A8/",
            "url": "https://www.fasty97.top/2021/01/14/NetCore%20WebAPI%E5%85%A5%E9%97%A8/",
            "title": "NetCore WebAPI入门",
            "date_published": "2021-01-14T08:56:44.000Z",
            "content_html": "<blockquote>\n<p>IDE: vs2019</p>\n<p>Core 版本：.NET Core3.1</p>\n</blockquote>\n<h3 id=\"调整启动方式\"><a class=\"markdownIt-Anchor\" href=\"#调整启动方式\">#</a> 调整启动方式</h3>\n<blockquote>\n<p>在进行开发 webapi 项目时，我们为了方便监听程序日志，我们可以选择一控制台方式启动。</p>\n</blockquote>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210114170346.png\" alt=\"image-20210114170339647\"></p>\n<h3 id=\"配置启动主页\"><a class=\"markdownIt-Anchor\" href=\"#配置启动主页\">#</a> 配置启动主页</h3>\n<p>在 <code>launchSetting.json</code>  里我们对启动项进行详细设置。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"WebCore\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token property\">\"commandName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Project\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token property\">\"launchBrowser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"launchUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 启动时的 Url</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"environmentVariables\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"ASPNETCORE_ENVIRONMENT\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Development\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">\"applicationUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:5000\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"启用静态资源\"><a class=\"markdownIt-Anchor\" href=\"#启用静态资源\">#</a> 启用静态资源</h3>\n<p>在项目根目录创建一个名为 <code>wwwroot</code>  的文件夹用于存放静态资源。</p>\n<p>在 <code>Startup.cs</code>  中， <code> public void Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>  方法中添加:</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseStaticFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"启用跨域\"><a class=\"markdownIt-Anchor\" href=\"#启用跨域\">#</a> 启用跨域</h3>\n<p>在 <code>ConfigureServices</code>  设置跨域</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 跨域</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            services<span class=\"token punctuation\">.</span><span class=\"token function\">AddCors</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                m <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span><span class=\"token function\">AddPolicy</span><span class=\"token punctuation\">(</span>Any<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span><span class=\"token function\">SetIsOriginAllowed</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token function\">AllowAnyMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token function\">AllowAnyHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token function\">AllowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 <code>Configure</code>  设置启用跨域</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseCors</span><span class=\"token punctuation\">(</span>Any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 Controller 中启动跨域</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">EnableCors</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Any\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"启用session和cookie\"><a class=\"markdownIt-Anchor\" href=\"#启用session和cookie\">#</a> 启用 Session 和 Cookie</h3>\n<h4 id=\"基础配置\"><a class=\"markdownIt-Anchor\" href=\"#基础配置\">#</a> 基础配置</h4>\n<p>在 <code>ConfigureServices</code>  中</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 启用 Session</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            services<span class=\"token punctuation\">.</span><span class=\"token function\">AddSession</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                options<span class=\"token punctuation\">.</span>Cookie<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\".WebCore.Session\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                options<span class=\"token punctuation\">.</span>IdleTimeout <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>TimeSpan<span class=\"token punctuation\">.</span><span class=\"token function\">FromSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置 session 的过期时间</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                options<span class=\"token punctuation\">.</span>Cookie<span class=\"token punctuation\">.</span>HttpOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置在浏览器不能通过 js 获得该 cookie 的值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 <code>Configure</code>  中</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//UseSession 配置在 UseMvc 之前</span></pre></td></tr></table></figure><h4 id=\"session-帮助类\"><a class=\"markdownIt-Anchor\" href=\"#session-帮助类\">#</a> Session 帮助类</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Http</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">WebCore<span class=\"token punctuation\">.</span>Tool</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// Session 帮助类</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SessionHelper</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">IHttpContextAccessor</span> _accessor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">ISession</span> _session<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">IRequestCookieCollection</span> _requestCookie<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">IResponseCookies</span> _responseCookie<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">SessionHelper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpContext</span> context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            _session <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            _requestCookie <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Cookies<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            _responseCookie <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Cookies<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">/// 设置 session 值</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"session\">&lt;/param></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"key\"> 键 & lt;/param></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"value\"> 值 & lt;/param></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SetSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> bytes <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            _session<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">/// 获取 Session 值</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"key\">&lt;/param></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> bytes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            _session<span class=\"token punctuation\">.</span><span class=\"token function\">TryGetValue</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bytes <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> <span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span>Empty<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>❤️  要使用 Session 和 Cookie，可以使用 <code>IHttpContextAccessor</code>  来设置。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 存储 Cookie</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>accessor<span class=\"token punctuation\">.</span>HttpContext<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">,</span> res2<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 取得 Cookie</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> userId <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span>Empty<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> accessor<span class=\"token punctuation\">.</span>HttpContext<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">TryGetValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"依赖注入\"><a class=\"markdownIt-Anchor\" href=\"#依赖注入\">#</a> 依赖注入</h3>\n<p>在 <code>startup.cs</code>  中 <code>ConfigureServices.cs</code>  的方法中注入：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用泛型注入一类对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddTransient</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>WebCore<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span>OrderService<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在需要使用的地方的构造函数中注入：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">OrderService</span> orderService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token function\">OrderController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OrderService</span> order<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>orderService <span class=\"token operator\">=</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"ef连接数据库\"><a class=\"markdownIt-Anchor\" href=\"#ef连接数据库\">#</a> EF 连接数据库</h3>\n<h4 id=\"连接mysql\"><a class=\"markdownIt-Anchor\" href=\"#连接mysql\">#</a> 连接 Mysql</h4>\n<p>▶️首先需要安装对应的依赖，包括：</p>\n<p>😃记得和 netcore 的版本号对应，此文 netcore 版本号为 3.1</p>\n<ul>\n<li>EntityFrameworkCore 3.1.8</li>\n<li>EntityFrameworkCore.Tools 3.0.1</li>\n<li>Pomelo.EntityFrameworkCore.MySql 3.2.0</li>\n</ul>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/20210115094751.png\" alt=\"image-20210115094744022\"></p>\n<h5 id=\"配置mysql-连接字符串\"><a class=\"markdownIt-Anchor\" href=\"#配置mysql-连接字符串\">#</a> 配置 Mysql 连接字符串</h5>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"><span>appsetting.json</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"ConnectionStrings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"MysqlConnection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Data Source=localhost;Database=coreDb;User ID=root;Password=;pooling=true;port=3306;sslmode=none;CharSet=utf8;\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h5 id=\"注册连接\"><a class=\"markdownIt-Anchor\" href=\"#注册连接\">#</a> 注册连接</h5>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>Startup.cs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 连接数据库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> connection <span class=\"token operator\">=</span> Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MysqlConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddDbContext</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CoreDbContext<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">UseMySql</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"ef连接类\"><a class=\"markdownIt-Anchor\" href=\"#ef连接类\">#</a> EF 连接类</h5>\n<p>在 EF 中我们需要创建一个数据库上下文对象的类，这个类需要继承自 <code>DbContext</code> 。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>EntityFrameworkCore</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">WebCore<span class=\"token punctuation\">.</span>Models</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// 核心数据库上下文对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CoreDbContext</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">DbContext</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> Users <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>Flower<span class=\"token punctuation\">></span></span> Flowers <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>Order<span class=\"token punctuation\">></span></span> Orders <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>Cart<span class=\"token punctuation\">></span></span> Carts <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>Address<span class=\"token punctuation\">></span></span> Addresses <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>LeaveWord<span class=\"token punctuation\">></span></span> LeaveWords <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>FlowerOrder<span class=\"token punctuation\">></span></span> FlowerOrders <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>FlowerPicture<span class=\"token punctuation\">></span></span> FlowerPictures <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">CoreDbContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptions<span class=\"token punctuation\">&lt;</span>CoreDbContext<span class=\"token punctuation\">></span></span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnModelCreating</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ModelBuilder</span> modelBuilder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnModelCreating</span><span class=\"token punctuation\">(</span>modelBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConfiguring</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptionsBuilder</span> optionsBuilder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnConfiguring</span><span class=\"token punctuation\">(</span>optionsBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"ef迁移指令\"><a class=\"markdownIt-Anchor\" href=\"#ef迁移指令\">#</a> EF 迁移指令</h4>\n<p>☑️我们可以使用一下指令来操作 EF 迁移。</p>\n<blockquote>\n<p>每次使用 EF 迁移后都会生成一个迁移类，并在数据库中存储迁移的相关信息，可以很方便的使用数据回滚。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">指令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Add-Migration  xxx</td>\n<td>添加一次迁移 迁移名称为 xxx</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Update-Database</td>\n<td>将当前迁移更新于数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"搭建model\"><a class=\"markdownIt-Anchor\" href=\"#搭建model\">#</a> 搭建 Model</h3>\n<p>▶️ 我们可以构建一个基础实体类方便管理共有属性。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>BaseEntity.cs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">WebCore<span class=\"token punctuation\">.</span>Models</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseEntity</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Key</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DatabaseGenerated</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>DatabaseGeneratedOption<span class=\"token punctuation\">.</span>Identity<span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> CreateTime <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> UpdateTime <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"特性注解\"><a class=\"markdownIt-Anchor\" href=\"#特性注解\">#</a> 特性注解</h4>\n<table>\n<thead>\n<tr>\n<th>特性名称</th>\n<th>特性作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[Key]</td>\n<td>用于标注实体模型中的主键</td>\n</tr>\n<tr>\n<td>[DatabaseGenerated(DatabaseGeneratedOption.Identity)]</td>\n<td>用于标注 Id 自增</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>🙂待更新…</p>\n</blockquote>\n<h4 id=\"一对一\"><a class=\"markdownIt-Anchor\" href=\"#一对一\">#</a> 一对一</h4>\n<h4 id=\"一对多\"><a class=\"markdownIt-Anchor\" href=\"#一对多\">#</a> 一对多</h4>\n<h4 id=\"多对多\"><a class=\"markdownIt-Anchor\" href=\"#多对多\">#</a> 多对多</h4>\n<h3 id=\"搭建dal\"><a class=\"markdownIt-Anchor\" href=\"#搭建dal\">#</a> 搭建 DAL</h3>\n<p>▶️我们可以搭建一个通用的 DAL 层来进行数据访问。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"><span>BaseService.cs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>EntityFrameworkCore</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq<span class=\"token punctuation\">.</span>Expressions</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">WebCore<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">WebCore<span class=\"token punctuation\">.</span>DAL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseService<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IDisposable</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">BaseEntity</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">CoreDbContext</span> coreDb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">BaseService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CoreDbContext</span> coreDb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>coreDb <span class=\"token operator\">=</span> coreDb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            coreDb<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">/// 创建</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"t\">&lt;/param></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">CreateAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">await</span> coreDb<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">return</span> coreDb<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChangesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Result<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">/// 编辑</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"t\">&lt;/param></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">EditAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            coreDb<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Set</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> coreDb<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChangesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">/// 删除</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"t\">&lt;/param></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            coreDb<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Remove</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token keyword\">await</span> coreDb<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChangesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\">/// 获得所有</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> asc<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>asc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token keyword\">return</span> coreDb<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Set</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AsNoTracking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">OrderBy</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">=></span>m<span class=\"token punctuation\">.</span>CreateTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">return</span> coreDb<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Set</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AsNoTracking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token comment\">/// 获得所有</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"expression\"> 指定条件 & lt;/param></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> expression<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> asc<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span>asc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\">/// 获得所有并分页</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"expression\"> 条件 & lt;/param></span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pageSize\"> 数量 & lt;/param></span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pageIndex\"> 页码 & lt;/param></span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"asc\"> 排序 & lt;/param></span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetAllPage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> expression<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pageIndex <span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pageSize<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> asc <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span>asc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Skip</span><span class=\"token punctuation\">(</span>pageSize<span class=\"token operator\">*</span>pageIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Take</span><span class=\"token punctuation\">(</span>pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\">/// 获得一个通过 id</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"id\">&lt;/param></span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">T</span> <span class=\"token function\">GetOne</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token comment\">/// 获得一个通过条件</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"expression\">&lt;/param></span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\">T</span> <span class=\"token function\">GetOne</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> expression<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"搭建services\"><a class=\"markdownIt-Anchor\" href=\"#搭建services\">#</a> 搭建 Services</h3>\n<h3 id=\"搭建dto\"><a class=\"markdownIt-Anchor\" href=\"#搭建dto\">#</a> 搭建 Dto</h3>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2021/01/07/html%E5%8C%85%E5%90%AB/",
            "url": "https://www.fasty97.top/2021/01/07/html%E5%8C%85%E5%90%AB/",
            "title": "html包含",
            "date_published": "2021-01-07T02:46:49.000Z",
            "content_html": "<p>在编写 html 文件时，我们想把一些相同的部分比如头部和底部的共用部分编写在一个文件中，这样的话就可以保持网站风格一致性。</p>\n<p>⚔️在 spring 中我们可以使用模板引擎 <code>thymeleaf</code></p>\n<p>🎯在.net 中我们可以使用 <code>Razor</code></p>\n<p>🔽在不依靠任何模板引擎的情况下，我们可以使用 <code>object标签</code> 来实现模板作用</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>包含</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>object</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>0px</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/x-scriptlet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>100%</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>auto</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"http://pic.fasty97.top/NotePad/20210107111314.png\" alt=\"image-20210107111127238\"></p>\n<center>效果</center>",
            "tags": [
                "前端小技巧"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/12/29/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2020/12/29/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/",
            "title": "享元模式",
            "date_published": "2020-12-29T09:17:22.000Z",
            "content_html": "<blockquote>\n<p>享元模式 (FlyweightPattern)：使用共享以高效地支持大量的细粒度对象。</p>\n</blockquote>\n<p>FlyweightPattern 的目的是  <code>提高效率，节省内存空间</code> 。</p>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/12/25/%E6%96%B0%E5%8D%9A%E5%AE%A2%E5%90%AF%E5%8A%A8%E5%95%A6/",
            "url": "https://www.fasty97.top/2020/12/25/%E6%96%B0%E5%8D%9A%E5%AE%A2%E5%90%AF%E5%8A%A8%E5%95%A6/",
            "title": "新博客启动啦",
            "date_published": "2020-12-25T06:35:40.000Z",
            "content_html": "<blockquote>\n<p>​\t新博客启动咯！</p>\n</blockquote>\n<p><span class=\"label success\">✔️success</span> 祝贺自己的新博客搭建完成！</p>\n<hr>\n<h2 id=\"博客历程\"><a class=\"markdownIt-Anchor\" href=\"#博客历程\">#</a> 博客历程</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"2019\">\n<ul>\n<li>2019.6 萌生了搭建自己博客的想法</li>\n<li>2019.10 购买了阿里云服务器和域名</li>\n<li>2019.11 通过备案</li>\n<li>2019.11 通过 WordPress 搭建了自己的第一个博客</li>\n<li>2019.12 改用七牛云 CDN 加速和图床</li>\n<li>💝 之后一直使用 WordPress 编写文章</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"2020\">\n<ul>\n<li>📌</li>\n<li>2020.12.25 在圣诞节本博客诞生啦\n<ul>\n<li>从服务器博客转战静态页面博客</li>\n<li>全 MD 文件管理</li>\n<li>挂靠 github</li>\n</ul>\n</li>\n</ul>\n</div>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2020/09/11/Unity%E7%83%AD%E6%9B%B4%E6%96%B0%E5%88%9D%E6%AD%A5/",
            "url": "https://www.fasty97.top/2020/09/11/Unity%E7%83%AD%E6%9B%B4%E6%96%B0%E5%88%9D%E6%AD%A5/",
            "title": "Unity热更新初步",
            "date_published": "2020-09-11T04:21:41.000Z",
            "content_html": "<blockquote>\n<p>此文为热更新学习笔记记录</p>\n</blockquote>\n<h3 id=\"ab包\"><a class=\"markdownIt-Anchor\" href=\"#ab包\">#</a> AB 包</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200911/aMXVGwgBYNkX.png\" alt=\"AB包浏览器\"><br>\n<img data-src=\"https://pic.fasty97.top/blog/20200911/8uaUFBUnpFsG.png\" alt=\"AB包配置\"></p>\n<ul>\n<li>LZ4 比标准压缩程度小，但对于内存的占用相对较小，在使用时无需全部解压（<strong>推荐使用</strong>）</li>\n<li>ETI 在资源包中不包含资源的类型信息</li>\n<li>FR 重新打包时需要重新构建包和 ClearFolders 不同，它不会删除不存在的包。</li>\n<li>ITTC 增量构建检查时，忽略类型数的更改</li>\n<li>Append Hash 将文件哈希值附加到资源包名上</li>\n<li>SM 严格模式，如果打包出错，则打包直接失败</li>\n<li>DRB 运行时构建</li>\n</ul>\n<h4 id=\"打包\"><a class=\"markdownIt-Anchor\" href=\"#打包\">#</a> 打包</h4>\n<p>进过 AB 打包后，我们发现生成了如下的文件：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200911/OOvX2aB3ieJj.png\" alt=\"打包生成文件\"><br>\n其中包含我们的<strong>主包文件</strong> PC 和我们的资源包文件 model。<br>\n打包完成的资源包以<strong>二进制存储</strong><br>\n manifest 文件为对应资源的配置文件。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200911/2xEeB6noUX5c.png\" alt=\"AB包资源浏览\"></p>\n<h3 id=\"加载资源\"><a class=\"markdownIt-Anchor\" href=\"#加载资源\">#</a> 加载资源</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 加载 AB 包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ab<span class=\"token operator\">=</span> AssetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">LoadFromFile</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>streamingAssetsPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/model\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 加载资源</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> asset<span class=\"token operator\">=</span> ab<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAsset</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>asset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 注意 Ab 包不能重复加载（否则会出错）</span></pre></td></tr></table></figure><h4 id=\"异步加载资源\"><a class=\"markdownIt-Anchor\" href=\"#异步加载资源\">#</a> 异步加载资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 异步加载资源</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"abName\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"resName\">&lt;/param></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"callBack\">&lt;/param></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token generic-method\"><span class=\"token function\">LoadAbResAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> abName<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> resName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">UnityAction<span class=\"token punctuation\">&lt;</span>AssetBundleRequest<span class=\"token punctuation\">></span></span> callBack<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ab <span class=\"token operator\">=</span> AssetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">LoadFromFileAsync</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>streamingAssetsPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/model\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> ab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> res <span class=\"token operator\">=</span> ab<span class=\"token punctuation\">.</span>assetBundle<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>resName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tcallBack<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 卸载单个 ab 包</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tab<span class=\"token punctuation\">.</span>assetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">Unload</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 卸载所有 Ab 包，选 true 会删除场景上通过 ab 包加载的资源</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tAssetBundle<span class=\"token punctuation\">.</span><span class=\"token function\">UnloadAllAssetBundles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 异步加载</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token generic-method\"><span class=\"token function\">LoadAbResAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"model\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"资源加载完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>asset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"资源依赖\"><a class=\"markdownIt-Anchor\" href=\"#资源依赖\">#</a> 资源依赖</h3>\n<p>如果一个资源被打包为 ab 包，那么这个资源使用的其他资源依赖会被默认打入资源包。</p>\n",
            "tags": [
                "unity",
                "热更新"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/07/04/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/",
            "url": "https://www.fasty97.top/2020/07/04/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/",
            "title": "命令模式",
            "date_published": "2020-07-04T08:36:31.000Z",
            "content_html": "<blockquote>\n<p>游戏编程模式算是一本比较著名的书了，全书针对游戏编程中的问题介绍了多种设计模式。学习设计模式可以加强我们的程序架构能力，写出更加强大和优雅的程序。</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90cnkuZG90Lm5ldC8=\">在线 C#</span></p>\n<h3 id=\"写在前面\"><a class=\"markdownIt-Anchor\" href=\"#写在前面\">#</a> 写在前面</h3>\n<p>其实针对 <code>设计模式</code> ，之前我就学习过《大话设计模式》自己也随书将二十多种设计模式实现了一遍；但我在学习游戏开发的过程中发现，标准的设计模式并非对游戏编程支持良好，故而有了专门看一看游戏设计模式的打算，加上寒假学习 cpp，让我有了拿起这本书的想法。<br>\n此文仅为学习记录，欢迎指正。</p>\n<p><code>设计模式并不是刻意为之的东西，是前辈经验的总结，也许你在不知不觉中就已经使用了某种设计模式。</code></p>\n<h3 id=\"命令模式\"><a class=\"markdownIt-Anchor\" href=\"#命令模式\">#</a> 命令模式</h3>\n<blockquote>\n<p>将一个请求封装成一个对象，从而允许你使用不同的请求、队列和日志将将客户端参数化，支持请求的撤销与恢复。</p>\n</blockquote>\n<p>从上述的描述中我们可以找到几个关键点： <code>请求队列</code> ， <code>日志</code> ， <code>撤销与恢复</code> 。<br>\n如果你需要这些特性，此事不妨试试命令模式吧。</p>\n<h4 id=\"适用场景\"><a class=\"markdownIt-Anchor\" href=\"#适用场景\">#</a> 适用场景</h4>\n<ol>\n<li>试想一下，我们在游戏中需要监听用户的输入，以让我们控制的角色响应玩家发布的 <code>命令</code> ，这个命令可能是移动，攻击，也可能是打开菜单，退出游戏。在需要复杂的输入检测时，你可能需要将玩家输入进行组合，如在恰当的时机按下某几个键位就可以使用特殊技能。</li>\n<li>在网络游戏中，我们操控我们的角色需要在所有连接的客户端中同步，其中有一种同步方式称为 <code>状态同步</code> ，及玩家操作角色时，客户端会向所有服务器执行相同的命令，以同步角色的状态信息。这样的情况，多少也使用了命令模式在里面。</li>\n<li>如果你需要撤销和重做，如一款回合制策略游戏，你可能需要撤销之前的动作，让玩家更专注于策略本身。</li>\n</ol>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<p>根据上述描述，我们可以建立一个最基础的命令模式模板。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pl<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> moveC<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MoveCommand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    moveC<span class=\"token punctuation\">.</span><span class=\"token function\">Excute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    moveC<span class=\"token punctuation\">.</span><span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token function\">Player</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"玩家pos:[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">y</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Command</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Excute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MoveCommand</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">Command</span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Player</span> player<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token function\">MoveCommand</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span><span class=\"token class-name\">Player</span> pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player<span class=\"token operator\">=</span>pl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Excute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move Excute!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move To &#123;0&#125;,&#123;1&#125;\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    player<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    player<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+=</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move Undo!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    player<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    player<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-=</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如上所示就是一个命令模式的基本使用，在某些情况下我们应该将所有操作用命令管理，尽管这样比较麻烦，但一旦建立起一个统一的管理模式后，你会发现一切都是值得的。</p>\n<h3 id=\"存在的问题\"><a class=\"markdownIt-Anchor\" href=\"#存在的问题\">#</a> 存在的问题</h3>\n<p>仔细观察你会发现，我们每次我们使用一个命令都会创建一个命令对象，如果我们频繁的使用命令我们就会不断的创建对象，而这些对象其实我们只使用了一次。怎么解决这个问题呢？下一章的 <code>享元模式</code> 让我们一起来解决吧。</p>\n",
            "tags": [
                "读书笔记",
                "设计模式"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/07/02/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E7%A7%92%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/07/02/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E7%A7%92%E7%94%A8/",
            "title": "位运算的秒用",
            "date_published": "2020-07-02T11:31:24.000Z",
            "content_html": "<p>位运算符想必大家都听说过，那如何正确使用位运算呢？</p>\n<blockquote>\n<p>今天，让我们来解决这样一个问题，用一个参数传递一组配置？</p>\n</blockquote>\n<p>这并非是一个难题，学习过最基本的编程知识，我相信你会用 n 种方法来解决这个问题。</p>\n<h3 id=\"你可能的做法\"><a class=\"markdownIt-Anchor\" href=\"#你可能的做法\">#</a> 你可能的做法</h3>\n<p><code>配置项枚举类</code></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 配置项枚举</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Config</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Item1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Item2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Item3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 显示配置信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"configs\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShowConfigInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Config<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> configs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token keyword\">in</span> configs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面的做法可能是大多数人的做法，通过传递一组数据，进行数据配置的传递。</p>\n<h3 id=\"使用位运算的做法\"><a class=\"markdownIt-Anchor\" href=\"#使用位运算的做法\">#</a> 使用位运算的做法</h3>\n<p>首先我们需要修改枚举类以适应我们的位运算。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Config</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Item1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//1 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Item2 <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Item3 <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span> <span class=\"token comment\">//4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>修改 showConfigInfo 方法如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> ShowConfigInfo <span class=\"token punctuation\">(</span><span class=\"token class-name\">Config</span> configs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>configs <span class=\"token operator\">&amp;</span> Config<span class=\"token punctuation\">.</span>Item1<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span>WriteLine <span class=\"token punctuation\">(</span><span class=\"token string\">\"configs 包含 &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> Config<span class=\"token punctuation\">.</span>Item1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>configs <span class=\"token operator\">&amp;</span> Config<span class=\"token punctuation\">.</span>Item2<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span>WriteLine <span class=\"token punctuation\">(</span><span class=\"token string\">\"configs 包含 &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> Config<span class=\"token punctuation\">.</span>Item2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>configs <span class=\"token operator\">&amp;</span> Config<span class=\"token punctuation\">.</span>Item3<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        System<span class=\"token punctuation\">.</span>Console<span class=\"token punctuation\">.</span>WriteLine <span class=\"token punctuation\">(</span><span class=\"token string\">\"configs 包含 &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> Config<span class=\"token punctuation\">.</span>Item3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>调用时，只需要使用 <code>|</code>  运算符即可传递一组配置</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ShowConfigInfo <span class=\"token punctuation\">(</span>Config<span class=\"token punctuation\">.</span>Item1 <span class=\"token operator\">|</span> Config<span class=\"token punctuation\">.</span>Item3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>如上输入时输出：<br>\n <code>configs 包含 Item1 configs 包含 Item3</code></p>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h3>\n<p>首先我们先来看一下二进制码</p>\n<table>\n<thead>\n<tr>\n<th>十进制</th>\n<th>二进制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>001</td>\n</tr>\n<tr>\n<td>2</td>\n<td>010</td>\n</tr>\n<tr>\n<td>3</td>\n<td>011</td>\n</tr>\n<tr>\n<td>4</td>\n<td>100</td>\n</tr>\n</tbody>\n</table>\n<p>观察上表我们可以发现， <code>2的次方代表的数字，在二进制中总是只有一个1</code> 。<br>\n然后我们再来看一下上面用到的几个位运算。</p>\n<h4 id=\"按位或运算\"><a class=\"markdownIt-Anchor\" href=\"#按位或运算\">#</a> 按位或运算 |</h4>\n<p><code>|</code>  运算表示将两个操作数的二进制码进行按位或运算， <code>一真则真</code> 。<br>\n例如：</p>\n<ul>\n<li>我们计算 1|2 就是计算 001|010，结果为：011 也就是十进制 3。</li>\n<li>计算 2|3 就是计算 010|011，结果为：011 也是 3。</li>\n<li>计算 2|4 就是计算 010|100，结果为：110 十进制为 6</li>\n</ul>\n<p><code>通过上面你应该可以发现，当我们将2个2的次方数进行|运算，其实就是将2者特有的标志位1 整合到一起。</code> 这是 2 的次方数所特有的，使用这一特性我们就可以使用二进制位来存储配置。</p>\n<h4 id=\"按位或运算-2\"><a class=\"markdownIt-Anchor\" href=\"#按位或运算-2\">#</a> 按位或运算 &amp;</h4>\n<p><code>&amp;</code>  运算表示将两个操作符的二进制进行按位与运算， <code>同真才为真，一假则假</code> <br>\n例如：</p>\n<ul>\n<li>我们计算 1&amp;2 就是计算 001&amp;010，结果为： 000 也就是 0</li>\n<li>计算 2&amp;3 就是计算 010&amp;011, 结果为： 010 也就是 2</li>\n<li>计算 2&amp;4 就是计算 010&amp;100，结果为：000 也就是 0</li>\n</ul>\n<p><code>我们发现，当我们将2个2的次方数进行&amp;运算，其实就是将2者所特有的标志位1 全部置为0</code> <br>\n 使用这一特性我们就可以判断数据中是否存在某一指定位为 1。</p>\n<h3 id=\"使用组合数据解析数据\"><a class=\"markdownIt-Anchor\" href=\"#使用组合数据解析数据\">#</a> 使用 | 组合数据 &amp; 解析数据</h3>\n<p>通过 | 我们可以将指定位置 1<br>\n 通过 &amp; 我们可以判断是否包含指定位 1</p>\n<h3 id=\"其他的位操作\"><a class=\"markdownIt-Anchor\" href=\"#其他的位操作\">#</a> 其他的位操作</h3>\n<p>除了 | 和 &amp; 还有其他位操作，比如用于加密的异或 ^, 用于补码的～，用于移位的 &lt;&lt;和&gt;&gt; 等。<br>\n使用这些位操作还能实现其他非常有趣的功能。本文重点介绍 | 和 &amp;，其他位运算不做详细说明。</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>使用 | 和 &amp; 能够很好的按位存储和解析数据，运算效率高，能避免重复配置项，非常巧妙也十分有用！</p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2020/05/23/%E8%88%92%E6%9C%8D%E7%9A%842D%E7%9B%B8%E6%9C%BA-Cinemachine/",
            "url": "https://www.fasty97.top/2020/05/23/%E8%88%92%E6%9C%8D%E7%9A%842D%E7%9B%B8%E6%9C%BA-Cinemachine/",
            "title": "舒服的2D相机-Cinemachine",
            "date_published": "2020-05-23T03:13:14.000Z",
            "content_html": "<blockquote>\n<p>上周我利用一周的时间完成了一个解密竞速小游戏，这也是没空更新的一个原因吧</p>\n</blockquote>\n<p>因为时间比较短，就选择了 2D 项目来练练手，在人物角色控制写完了之后，就想着写个摄像机来控制视野，索性就想到了 <code>Cinemachine</code> ，记得之前好像看到 Cinemachine 有一套比较好用的摄像机系统，就拿来试试了。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/qb1Kss4Mw96k.gif\" alt=\"效果预览\"></p>\n<p>可以看到其效果包含以下几个方面</p>\n<ul>\n<li>跟随玩家角色的移动</li>\n<li>在小范围内移动不会触发摄像机位置的改变</li>\n<li>摄像机缓动</li>\n<li>摄像机视野不会超出地图范围</li>\n</ul>\n<p>这几个效果自己手写还是挺麻烦，让我们来看看 <code>Cinemachine</code>  怎么做。</p>\n<h3 id=\"如何使用\"><a class=\"markdownIt-Anchor\" href=\"#如何使用\">#</a> 如何使用</h3>\n<ol>\n<li>创建一个 2D 虚拟相机：</li>\n</ol>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/AVXP8rVMR5N9.png\" alt=\"\"><br>\n2. 为虚拟相机指定 Flow<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/KJPSbevHst01.png\" alt=\"\"><br>\n3. 设置活死区和插值<br>\n <code>此时已经可以实现摄像机跟随了，但是此时摄像机可能会照到非地图区域</code> <br>\n 4. 设定地图碰撞区域<br>\n创建一个空物体并挂载多边形碰撞器（目前只支持这种类型的碰撞器） <code>记得设置为触发器</code> <br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/mjeXKALIvuha.png\" alt=\"\"><br>\n为虚拟相机添加如下组件，将碰撞设置进去<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200523/E1mVRf835ude.png\" alt=\"\"><br>\n此时你可以实现上述的所有功能了。</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/05/10/A%E6%98%9F%E7%AE%97%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6%E5%92%8C%E5%BA%94%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/05/10/A%E6%98%9F%E7%AE%97%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6%E5%92%8C%E5%BA%94%E7%94%A8/",
            "title": "A*算法的研究和应用",
            "date_published": "2020-05-10T13:40:45.000Z",
            "content_html": "<blockquote>\n<p>对 A * 算法早有耳闻，但一直未细致去分析过，最近重新看到这个概念，来尝试分析一波</p>\n</blockquote>\n<h3 id=\"算法定义\"><a class=\"markdownIt-Anchor\" href=\"#算法定义\">#</a> 算法定义</h3>\n<p>A* 算法常被表示为 f (n)=g (n)+h (n)</p>\n<p>**f (n)** 表示从状态 n 到达目标状态的花费的预测值<br>\n **g (n)** 表示从初始状态到达状态 n 的花费<br>\n **h (n)** 表示从状态 n 到达目标状态的花费预测值（最佳路径）</p>\n<p>拖了蛮久了，差点我都忘记了我还有个博客等着我每周一更呢。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200523/1Ark1TqLH5gG.gif\" alt=\"效果预览\"></p>\n<hr>\n<h3 id=\"a-格子数据\"><a class=\"markdownIt-Anchor\" href=\"#a-格子数据\">#</a> A* 格子数据</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Astar</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 格子类型</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">NodeType</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        Walk<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">/// 障碍物</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Obstacle</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// A * 格子</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AstarNode</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">NodeType</span> Type <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">/// 总花费</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> F <span class=\"token operator\">=></span> G <span class=\"token operator\">+</span> H<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">/// 从起点到当前格子的花费</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> G <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span>  <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// 从当前格子到终点的花费</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> H <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">/// 父节点</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">AstarNode</span> Father <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> X <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Y <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">AstarNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\">NodeType</span> type<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            X <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            Y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            Type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"a寻路\"><a class=\"markdownIt-Anchor\" href=\"#a寻路\">#</a> A * 寻路</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Singleton</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Astar</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Vec2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> X <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Y <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token function\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            X <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            Y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 运算符重载</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Vec2 <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec2</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Vec2 <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec2</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>X <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/// A 星寻路管理器</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AstarManager</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>AstarManager<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">AstarNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> map<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span> openList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span> closeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">/// 初始化地图信息</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"w\">&lt;/param></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"h\">&lt;/param></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitMapInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> w<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            mapW <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            mapH <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AstarNode</span><span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> w<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token comment\">// 随机阻挡</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AstarNode</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> Random<span class=\"token punctuation\">.</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">?</span> NodeType<span class=\"token punctuation\">.</span>Obstacle <span class=\"token punctuation\">:</span> NodeType<span class=\"token punctuation\">.</span>Walk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\">/// 寻路</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"start\">&lt;/param></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"end\">&lt;/param></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span> <span class=\"token function\">FindWay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> start<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec2</span> end<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">// Debug.Log ($\"开始点 (&#123;start.X&#125;,&#123;start.Y&#125;) 结束点（&#123;end.X&#125;,&#123;end.Y&#125;）\");</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token comment\">//1. 是否在地图范围内</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A* 寻路 起点或终点不在地图范围内\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token comment\">//2. 可达</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> s <span class=\"token operator\">=</span> map<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> e <span class=\"token operator\">=</span> map<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> NodeType<span class=\"token punctuation\">.</span>Obstacle <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> NodeType<span class=\"token punctuation\">.</span>Obstacle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A* 寻路起点或 终点不可达\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token comment\">// 清空关闭和开启列表</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            openList<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>AstarNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token comment\">//3. 计算</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            s<span class=\"token punctuation\">.</span>Father <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            s<span class=\"token punctuation\">.</span>G <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            s<span class=\"token punctuation\">.</span>H <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 开始点放入</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                <span class=\"token comment\">// 开始写入</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左上</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 上</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 右上</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 右</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 左下</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 下</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token number\">1.4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                <span class=\"token comment\">// 不存在任何路径</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openList<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A* 死路\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cc <span class=\"token keyword\">in</span> closeList<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> cc<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                <span class=\"token comment\">// 选择消耗最小的点 (根据 F）</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                openList<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>F <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>F <span class=\"token operator\">==</span> b<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>                <span class=\"token comment\">// 放入关闭</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>openList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>                <span class=\"token comment\">// 设置新起点，继续下一次寻路</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                s <span class=\"token operator\">=</span> openList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>                start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>                openList<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>            <span class=\"token comment\">// 回溯路径</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            path<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Father <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                path<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Father<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token comment\">// 翻转 path</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            path<span class=\"token punctuation\">.</span><span class=\"token function\">Reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>            <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        <span class=\"token comment\">/// 是否在地图中</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>X <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> pos<span class=\"token punctuation\">.</span>X <span class=\"token operator\">>=</span> mapW <span class=\"token operator\">||</span> pos<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> pos<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">>=</span> mapH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token comment\">/// 取得 node</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">AstarNode</span> <span class=\"token function\">GetNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsInMap</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token comment\">/// 将周围点数据计算并写入 openList</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"pos\"> 当前位置 & lt;/param></span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"father\"> 父对象 & lt;/param></span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"end\"> 终点 & lt;/param></span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"g\"> 离上一个点的距离（移动花费）&lt;/param></span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">WriteNear2OpenList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vec2</span> pos<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AstarNode</span> father<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AstarNode</span> end<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> g <span class=\"token operator\">=</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> node <span class=\"token operator\">=</span> <span class=\"token function\">GetNode</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">==</span> NodeType<span class=\"token punctuation\">.</span>Obstacle <span class=\"token operator\">||</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> closeList<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>            node<span class=\"token punctuation\">.</span>Father <span class=\"token operator\">=</span> father<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>            node<span class=\"token punctuation\">.</span>H <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">.</span>X <span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>            node<span class=\"token punctuation\">.</span>G <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>G <span class=\"token operator\">+</span> g<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>            openList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"寻路测试\"><a class=\"markdownIt-Anchor\" href=\"#寻路测试\">#</a> 寻路测试</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Astar</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">FastyTools<span class=\"token punctuation\">.</span>Test</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AStarTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> beginX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> beginY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2</span> offset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> mapH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> prefab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span>GameObject<span class=\"token punctuation\">></span></span> dictionary<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> GameObject<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2</span> start <span class=\"token operator\">=</span> Vector2<span class=\"token punctuation\">.</span>right <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector2</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            start <span class=\"token operator\">=</span> Vector2<span class=\"token punctuation\">.</span>right <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">InitMapInfo</span><span class=\"token punctuation\">(</span>mapW<span class=\"token punctuation\">,</span>mapH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mapW<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> mapH<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go<span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>prefab<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>beginX <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>beginY<span class=\"token operator\">+</span>offset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    go<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">SetParent</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    go<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Type<span class=\"token operator\">==</span>NodeType<span class=\"token punctuation\">.</span>Obstacle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    dictionary<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">FindWay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                    <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token keyword\">in</span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>X<span class=\"token operator\">+</span><span class=\"token string\">\"  \"</span><span class=\"token operator\">+</span>c<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ray<span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenPointToRay</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span>mousePosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token class-name\">RaycastHit</span> hit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Physics<span class=\"token punctuation\">.</span><span class=\"token function\">Raycast</span><span class=\"token punctuation\">(</span>ray<span class=\"token punctuation\">,</span><span class=\"token keyword\">out</span> hit<span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span>collider<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> xy <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token string character\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token comment\">// 开始终点</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">==</span>Vector2<span class=\"token punctuation\">.</span>right<span class=\"token operator\">*</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                        c<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>yellow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                        start<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end<span class=\"token operator\">==</span>Vector2<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                        <span class=\"token comment\">// 终点</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                        c<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                            end<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>xy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始寻路\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                        <span class=\"token comment\">// 寻路</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> AstarManager<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">FindWay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> start<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                            <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> end<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cc <span class=\"token keyword\">in</span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">.</span>X<span class=\"token operator\">+</span><span class=\"token string\">\"  \"</span><span class=\"token operator\">+</span>cc<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                            dictionary<span class=\"token punctuation\">[</span>cc<span class=\"token punctuation\">.</span>X<span class=\"token operator\">+</span><span class=\"token string\">\"_\"</span><span class=\"token operator\">+</span>cc<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshRenderer<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>Color<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"相关阅读\"><a class=\"markdownIt-Anchor\" href=\"#相关阅读\">#</a> 相关阅读</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDUxMDQ0NA==\">路径规划之 A* 算法</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0twcm9ncmFtL2FydGljbGUvZGV0YWlscy84MTIyNTE3Ng==\">迪杰斯特拉算法</span><br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3FpYW8uZ2l0aHViLmlvL1BhdGhGaW5kaW5nLmpzL3Zpc3VhbC8=\"> A * 算法在线演示</span></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2020/04/28/Ink%E5%89%A7%E6%83%85%E7%BC%96%E6%8E%92/",
            "url": "https://www.fasty97.top/2020/04/28/Ink%E5%89%A7%E6%83%85%E7%BC%96%E6%8E%92/",
            "title": "Ink剧情编排",
            "date_published": "2020-04-28T13:54:55.000Z",
            "content_html": "<h3 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h3>\n<ol>\n<li>下载 inky 编辑器</li>\n<li>编写 ink 文件</li>\n<li>下载安装 unity 支持</li>\n<li>找到 ink 示例，将对应的 ink 生成的 json 导入运行游戏即可。</li>\n</ol>\n<h3 id=\"unity使用流程\"><a class=\"markdownIt-Anchor\" href=\"#unity使用流程\">#</a> unity 使用流程</h3>\n<p>在 unity 中，我们需要通过代码来驱动我们的剧情的进行。</p>\n<ol>\n<li>\n<p>首先我们需要 <code>创建至少2种Prefab</code> ，一种表示文字，一种表示按钮。</p>\n</li>\n<li>\n<p>然后我们需要创建一个 story 对象，载入对应的 json 文件<br>\n <code>story = new Story (inkJSONAsset.text);</code></p>\n</li>\n<li>\n<p>判断 story 能否继续，若能继续使用代码创建对应的游戏对象</p>\n</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>canContinue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Continue gets the next line of the story</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text <span class=\"token operator\">=</span> story<span class=\"token punctuation\">.</span>Continue <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// This removes any white space from the text.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">Trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Display the text on screen!</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">CreateContentView</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// Display all the choices, if there are any!</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>currentChoices<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> story<span class=\"token punctuation\">.</span>currentChoices<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">Choice</span> choice <span class=\"token operator\">=</span> story<span class=\"token punctuation\">.</span>currentChoices <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token class-name\">Button</span> button <span class=\"token operator\">=</span> CreateChoiceView <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>Trim <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token comment\">// Tell the button what to do when we press it</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tbutton<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span>AddListener <span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tOnClickChoiceButton <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// If we've read all the content and there's no choices, the story is finished!</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token class-name\">Button</span> choice <span class=\"token operator\">=</span> <span class=\"token function\">CreateChoiceView</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End of story.\\nRestart?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tchoice<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">StartStory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> CreateContentView <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">Text</span> storyText <span class=\"token operator\">=</span> Instantiate <span class=\"token punctuation\">(</span>textPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tstoryText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tstoryText<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>SetParent <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Creates a button showing the choice text</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token return-type class-name\">Button</span> CreateChoiceView <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// Creates the button from a prefab</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token class-name\">Button</span> choice <span class=\"token operator\">=</span> Instantiate <span class=\"token punctuation\">(</span>buttonPrefab<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Button</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tchoice<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>SetParent <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// Gets the text from the button prefab</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token class-name\">Text</span> choiceText <span class=\"token operator\">=</span> choice<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Text<span class=\"token punctuation\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tchoiceText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// Make the button expand to fit the text</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token class-name\">HorizontalLayoutGroup</span> layoutGroup <span class=\"token operator\">=</span> choice<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span> <span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>HorizontalLayoutGroup<span class=\"token punctuation\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tlayoutGroup<span class=\"token punctuation\">.</span>childForceExpandHeight <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> choice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>要记得每次显示时清除上一次的显示结果</li>\n</ol>\n<h2 id=\"书写规则\"><a class=\"markdownIt-Anchor\" href=\"#书写规则\">#</a> 书写规则</h2>\n<blockquote>\n<p>ink 有一套自己的书写格式，不符合规范时无法编译。</p>\n</blockquote>\n<ul>\n<li>选项 + xx 在选择后会重复 选项</li>\n<li>选项 + [xx] 在选择后不会重复 选项</li>\n<li>…</li>\n</ul>\n<h2 id=\"unity支持\"><a class=\"markdownIt-Anchor\" href=\"#unity支持\">#</a> Unity 支持</h2>\n<p>更新时间：2022 年 12 月 8 日 16:39:09</p>\n<blockquote>\n<p>INk 提供了 Unity 插件来支持。我们可以在 github 或者是 AssterStore 中获取。</p>\n</blockquote>\n<p>在 Unity 导入 <code>.ink</code>  文件可以在右侧检视图看到如下界面：</p>\n<p>在这个界面可以对整个故事流程进行概览。</p>\n<p>同时每次修改 <code>.ink</code>  文件后，都会自动生成一个 <code>json</code>  文件。我们要使用的就是生成的 Json 文件。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202212151532228.png\" alt=\"image-20221215153223990\"></p>\n<h3 id=\"常用功能\"><a class=\"markdownIt-Anchor\" href=\"#常用功能\">#</a> 常用功能</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 设置变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Ink<span class=\"token punctuation\">.</span>variablesState<span class=\"token punctuation\">[</span><span class=\"token string\">\"hp\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 游戏端函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Ink<span class=\"token punctuation\">.</span><span class=\"token function\">BindExternalFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> info<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日志：\"</span> <span class=\"token operator\">+</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 保存</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> savedJson <span class=\"token operator\">=</span> _inkStory<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">ToJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 读取</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>_inkStory<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">LoadJson</span><span class=\"token punctuation\">(</span>savedJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 从节点获取元数据</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tags<span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">TagsForContentAtPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DATA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>tags<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tag|\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>2023 年 6 月 14 日 09:58:30 更新</p>\n</blockquote>\n<h3 id=\"text-animator-for-unity\"><a class=\"markdownIt-Anchor\" href=\"#text-animator-for-unity\">#</a> Text Animator for Unity</h3>\n<blockquote>\n<p>这里推荐一个插件用于字符动画的播放 <code>Text Animator for Unity</code></p>\n</blockquote>\n<p>只需在 Text 上挂上相关组件即可以使用来实现文字的动画效果。</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202306140946043.png\" alt=\"Text Animator\"></p>\n<p>同时插件提供了很多内置的效果：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202306140949470.png\" alt=\"image-20230614094916425\"></p>\n<p>使用 ink 和 textAnimator 配合实现的对话效果预览：</p>\n<p><img data-src=\"http://pic.fasty97.top/NotePad/202306140956218.gif\" alt=\"效果预览\"></p>\n<center>效果预览</center>\n<h3 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5rbGVzdHVkaW9zLmNvbS9pbmsv\">inkle 官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lua2xlL2lua3kvcmVsZWFzZXMvdGFnLzAuMTEuMA==\">inky 编辑器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbmRpZW5vdmEuY29tL3UvYmxpbmR2b2xmL2Jsb2dyZWFkLzIzMjQ5\">相关教程参考 - 基础</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbmRpZW5vdmEuY29tL3UvYmxpbmR2b2xmL2Jsb2dyZWFkLzIzMjU3\">相关教程参考 - 高级</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lua2xlL2luay9ibG9iL21hc3Rlci9Eb2N1bWVudGF0aW9uL1J1bm5pbmdZb3VySW5rLm1k\">ink/RunningYourInk.md at master · inkle/ink (github.com)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNTAwNjExL2FydGljbGUvZGV0YWlscy8xMDkwMzM0MTQ=\">Ink 脚本语言学习笔记（一）_嘉神川优衣的博客 - CSDN 博客_unity ink 使用</span></li>\n</ul>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/27/YarnSpinner%E5%89%A7%E6%83%85%E7%BC%96%E8%BE%91/",
            "url": "https://www.fasty97.top/2020/04/27/YarnSpinner%E5%89%A7%E6%83%85%E7%BC%96%E8%BE%91/",
            "title": "YarnSpinner剧情编辑",
            "date_published": "2020-04-27T14:49:45.000Z",
            "content_html": "<p>本来说好的每周一更又鸽了…<br>\n 今天来水一期，介绍一款很棒的剧情编排应用  <code>YarnSpinner</code> 。</p>\n<h3 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<p><code>YarnSpinner</code>  是一款开源免费的剧情编排应用（或者说是一种用于剧情编排的标记语言）。<br>\n试想我们在开发游戏时，剧情有分支选择，有各种条件检查，如果我们全在代码中去判断和检查不仅繁杂而且非常麻烦，策划学习成本高，耦合性过强。你可能自己想出一套标记语言来表述剧情流程，但自己的力量毕竟是有限的，难免出现一些 bug 和坑。此时，不妨试试这款免费开源，多人共同维护的应用吧。</p>\n<h3 id=\"快速食用\"><a class=\"markdownIt-Anchor\" href=\"#快速食用\">#</a> 快速食用</h3>\n<h4 id=\"代码式编辑\"><a class=\"markdownIt-Anchor\" href=\"#代码式编辑\">#</a> 代码式编辑</h4>\n<p>这里我使用 vscode 作为编辑器，下载一下插件：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200427/a07bJtR8tRDh.png\" alt=\"扩展\"></p>\n<p>我们先创建一个 <code>.yarn</code>  格式的文件，并写入以下内容：</p>\n<pre><code>title: cc\ntags:\ncolorID: 0\nposition: 1,-22\n---\nFasty97: Hi\nPC: 你好？！\nFasty97: 我又回来了！\nPC: 是忘了什么东西吗？\n===\n\n</code></pre>\n<p>这是一段剧本最基本的格式（一个 yarn 文件至少包含一段剧本）：</p>\n<pre><code>title: cc\ntags:\ncolorID: 0\nposition: 1,-22\n</code></pre>\n<p>以上被称为一个剧本头，表示一段剧本，这些是一些剧本段的基本信息，其中<font color=\"red\">title 必填，position 必填</font>.position 为剧本段的标识符类似于 ID 一样的东西，不要重复。</p>\n<h4 id=\"在unity中使用\"><a class=\"markdownIt-Anchor\" href=\"#在unity中使用\">#</a> 在 unity 中使用</h4>\n<ol>\n<li>下载相关的 unity 支持包（官网有）</li>\n<li>在场景中放入一个 Dialogue 预制体，预制体包含一个默认的设置示例。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200427/AgJFSizXO2LE.png\" alt=\"\"></li>\n<li>创建一个脚本</li>\n<li>设定好相关的资源和引用</li>\n<li>运行游戏尝试按下空格键吧</li>\n</ol>\n<h4 id=\"脚本设定\"><a class=\"markdownIt-Anchor\" href=\"#脚本设定\">#</a> 脚本设定</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditorInternal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Yarn<span class=\"token punctuation\">.</span>Unity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">Yarn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">YarnTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DialogueRunner</span> dr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">YarnProgram</span> scriptToLoad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 注入对话资源</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        dr<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>scriptToLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始对话\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 开始一个对话</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            dr<span class=\"token punctuation\">.</span><span class=\"token function\">StartDialogue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/blog/20200427/XkItpdgndrM8.gif\" alt=\"默认\"></p>\n<h3 id=\"使用自定义方法\"><a class=\"markdownIt-Anchor\" href=\"#使用自定义方法\">#</a> 使用自定义方法</h3>\n<p>我现在希望我第一次与角色交流时输出前 2 句，之后每次与角色交流只输出最后 2 句，这是一个游戏中常用的机制。但现在我们的对话只是按照流程依次执行，我们希望这个流程应该是能够动态控制的。<br>\n我们修改上面的 yarn 为：</p>\n<pre><code>title: cc\ntags: \ncolorID: 0\nposition: 1,-22\n---\n&lt;&lt;if visited(&quot;cc&quot;) is false&gt;&gt;\n    Fasty97: Hi\n    PC: 你好？！\n&lt;&lt;else&gt;&gt;\n    Fasty97: 我又回来了！\n    PC: 是忘了什么东西吗？\n&lt;&lt;endif&gt;&gt;\n===\n</code></pre>\n<p>可以看到这次我们使用 类似 if 语句的东西？ 这是 yarn 中提供的一种语法模式，在这里我们会执行一个自定义的方法 visted 并将 &quot;cc&quot; 传入方法中，如果返回的结果是 false 就执行下面的语句块。</p>\n<h4 id=\"处理自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#处理自定义事件\">#</a> 处理自定义事件</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> visitedNodes<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 已使用节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 注入对话资源</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dr<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>scriptToLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 注入处理方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    dr<span class=\"token punctuation\">.</span><span class=\"token function\">AddFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"visited\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Value<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> parameters<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> nodeName <span class=\"token operator\">=</span> parameters<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> visitedNodes<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>nodeName<span class=\"token punctuation\">.</span>AsString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 绑定事件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dr<span class=\"token punctuation\">.</span>onNodeComplete<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> visitedNodes<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建一个 HashSet 集合用于存放所有已经被使用过的 node，绑定一个 onNodeComplete 事件，这个事件有系统自动调用，在实现中为集合加入元素。<br>\n然后注入一个方法，第一个参数指定方法名（在 yarn 文件下的名称），第二个参数指定参数个数，第三个参数就是写入一个方法了，在方法中我们检查集合是否已经包含该值返回结果，一个自定义不可重复方法就处理好了。</p>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200427/zqkvGNEMJPMw.gif\" alt=\"visited效果\"></p>\n<p>使用相同的方法你还可以创建各种各样的方法在 yarn 中使用。<br>\n值得注意的是：<br>\n通过源代码我们可以知道，yarn 只支持以下几种数据类型。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Number<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>NumberValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>StringValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Bool<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>BoolValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">case</span> Value<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">.</span>Null<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"相关链接\"><a class=\"markdownIt-Anchor\" href=\"#相关链接\">#</a> 相关链接</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJuc3Bpbm5lci5kZXYv\">YarnSpinner 官网</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly95YXJuc3Bpbm5lcnRvb2wuZ2l0aHViLmlvL1lhcm5FZGl0b3Iv\"> YarnSpinner 在线编辑器</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lhcm5TcGlubmVyVG9vbC9ZYXJuU3Bpbm5lcg==\"> YarnSpinner github</span></p>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/15/Cinemachine%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/04/15/Cinemachine%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Cinemachine的基本使用",
            "date_published": "2020-04-15T10:02:16.000Z",
            "content_html": "<p>Unity 版本：<font color=green>2019.3.6f1</font></p>\n<p><font color=red>长文警告！！！</font></p>\n<blockquote>\n  是否为摄像机脚本困扰？是否为镜头动画烦恼？ Cinemachine 超强插件解决你的问题！\n</blockquote>\n<h3>安装Cinemachine</h3>\n<p>现在 Cinemachine 作者已经投靠 unity 官方了，所以 Cinemachine 也成为了 Unity 的官方插件，我们可以直接在 PackageManager 中下载：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/DBHDdslXchVa.png\" alt=\"\"></p>\n<h3>各类相机简述</h3>\n<p>安装之后我们可以在顶部菜单栏，看到如下的选项：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/gd1H7MDqJgJs.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n  <th>选项</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Virtual Camera</td>\n  <td>虚拟摄像机</td>\n</tr>\n<tr>\n  <td>FreeLook Camera</td>\n  <td>自由相机，可以保证镜头内出现头和身体，及相机的活动范围在目标周围圆柱（曲面的）表面，一般用于第三人称控制器</td>\n</tr>\n<tr>\n  <td>State-driven Camera</td>\n  <td>状态驱动相机。添加虚拟相机列表，可以在不同的相机直接直接实现平滑切换，同时其子相机列表如果没有设置LookAt对象等，会直接使用这个父相机的对象。</td>\n</tr>\n<tr>\n  <td>ClearShot Camera</td>\n  <td>干净镜头相机。类似上一个相机，区别在于这个相机可以通过判断子相机的CinemachineCollider（如果有），看是否相机被场景物体阻碍，切换相机。具体可看其源码注释。</td>\n</tr>\n<tr>\n  <td>Dolly Camera with Track</td>\n  <td>可推拉的轨道相机。通过结合轨道路径，就可以模拟像拍电影般镜头轨道移动。</td>\n</tr>\n<tr>\n  <td>Group Target Camera</td>\n  <td>多目标相机。可以同时设置多个目标。</td>\n</tr>\n</tbody>\n</table>\n<h4>Cinemachine Brain</h4>\n<p>在我们创建任意虚拟相机后，插件会为我们的摄像机添加此组件，此组件是我们虚拟相机的大脑，控制着真实相机的行为。（不可或缺）<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/4LQud3dfJPHP.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n  <th>变量名</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Live Camera</td>\n  <td>当前选择的虚拟相机。</td>\n</tr>\n<tr>\n  <td>Live Blend</td>\n  <td>当前的镜头转换名称。</td>\n</tr>\n<tr>\n  <td>Show Debug Text</td>\n  <td>在游戏画面左上角显示调试信息。</td>\n</tr>\n<tr>\n  <td>Show Camera Frustum</td>\n  <td>显示相机的视锥体，相比原来自带的边框，这个会裁切掉不在显示范围内的边线。</td>\n</tr>\n<tr>\n  <td>World Up Override</td>\n  <td>重载世界的向上方向（y轴），虚拟相机是通过这个来判断世界环境。</td>\n</tr>\n<tr>\n  <td>Default Blend</td>\n  <td>默认相机切换模式。</td>\n</tr>\n<tr>\n  <td>Custom Blends</td>\n  <td>自定义相机切换模式。</td>\n</tr>\n<tr>\n  <td>Camera Cut Event</td>\n  <td>相机立即切换时事件。</td>\n</tr>\n<tr>\n  <td>Camera Activated Event</td>\n  <td>相机混合（就是有切换变化，不是Cut时）切换时第一帧事件。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"virtual-camera\"><a class=\"markdownIt-Anchor\" href=\"#virtual-camera\">#</a> Virtual Camera</h3>\n<p>Cinemacine Virtual Camera 是 Cinemachine 最基本的相机，<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/oOMGlgOGXRpo.png\" alt=\"Cinemacine Virtual Camera\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Status</td>\n<td style=\"text-align:left\">状态，Live 为正在使用，Standby 为准备使用（没在用，但如果上一级停用了，可能会切换到当前虚拟相机），Disable 为不能用。按 Solo 按钮会让相机切换到这个虚拟相机（包括 Disable）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Game Window Guides</td>\n<td style=\"text-align:left\">是否在 game 窗口显示辅助</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Save During Play</td>\n<td style=\"text-align:left\">保存游戏中的改变</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">priority</td>\n<td style=\"text-align:left\">虚拟相机的优先级，如果同时有多个虚拟相机，使用优先级最高的。如果多个同等级的，应该是按 Hierarchy 顺序找到第一个虚拟相机。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Lens</td>\n<td style=\"text-align:left\">镜头常用配置。视角区域，最近最远裁切平面， 镜头旋转角度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Body</td>\n<td style=\"text-align:left\">相机本身。四种：Hard constraint，固定距离，相当于第一人称。 Orbital Transposer：轨迹转换器？似乎是模拟第三人称。 Tracked Dolly，轨道推拉，相机只能在轨道上移动（即使设置了 Follow 对象），需要轨道路径 CinemachinePath。 Transposer，普通的镜头转换。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Aim</td>\n<td style=\"text-align:left\">瞄准设置，有三种：Hard constraint，固定距离，没有任何平滑效果。Composer，有平滑效果的瞄准目标。Group Composer，同时瞄准多个目标。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Noise</td>\n<td style=\"text-align:left\">噪音，用于相机抖动，预设有多种效果，也可以自己建立新效果。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Extension</td>\n<td style=\"text-align:left\">扩展，可以添加诸如相机碰撞器，相机变焦器等</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"timeline\"><a class=\"markdownIt-Anchor\" href=\"#timeline\">#</a> TimeLine</h4>\n<p>在 TimeLine 中实现 2 个镜头间的切换非常容易。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/cfRA1u2z5SND.png\" alt=\"\"><br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/D0m6KY0DjAHH.gif\" alt=\"\"></p>\n<h3 id=\"freelook\"><a class=\"markdownIt-Anchor\" href=\"#freelook\">#</a> FreeLook</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/uFWo9v918gKw.png\" alt=\"FreeLook 相机视野\"><br>\n FreeLook 相机是一个自由相机，类似于第三人称游戏中的相机，可以使用鼠标控制相机的朝向多方向的观察角色；其相机视野像是一个圆柱体，如上图所示。（相机始终会在这个圆柱体的轨道上运动。）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/EMNEzmU0LM9r.gif\" alt=\"FreeLook\"><br>\n 大多数参数与 Virtual Camera 相似，值得注意的是：<br>\n<font color=\"red\">在 FreeLook 相机中需要绑定 顶部，中间，底部三个位置，这三个位置将决定相机的最大视野。</font></p>\n<h3 id=\"blendlist\"><a class=\"markdownIt-Anchor\" href=\"#blendlist\">#</a> BlendList</h3>\n<p>如名字一样他管理的是一个 camera 列表，并将列表内的 camera 做混合到达射线机之间更自然的切换效果。<br>\n<strong>我们可以控制摄像机切换的 缓动函数</strong>。<br>\n值得注意的是：当 BlendList 启用时，其下的摄像机会依次使用最后停留在最后一个摄像机里。</p>\n<h3 id=\"cinemachinestatedrivencamera\"><a class=\"markdownIt-Anchor\" href=\"#cinemachinestatedrivencamera\">#</a> CinemachineStateDrivenCamera</h3>\n<p>这是被动画状态所驱动的虚拟相机管理器，能够在觉得切换动画时，快速的切换该动画应该使用的相机。【注意设置层级和绑定动画控制器】<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/OnntsqFJoil7.png\" alt=\"CinemachineStateDrivenCamera\"></p>\n<h3 id=\"clearshoot\"><a class=\"markdownIt-Anchor\" href=\"#clearshoot\">#</a> ClearShoot</h3>\n<p>ClearShoot 也是一个管理器，负责管理一组 camera，他的效果是时刻选择最优的摄像机。在复杂的场景中，我们的角色可能被环境所遮挡，我们需要多个摄像机来处理这种情况。<br>\n如下图所示，我设置了 2 个摄像机，一个在顶部，一个在后方，在角色移动到墙壁后面时，后方的摄像机被遮挡，此时会自动启动顶部摄像机。在角色回到墙壁后面时，顶部摄像机被遮挡，只能切换到后面的摄像机。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/lDRTT3hjBhtH.gif\" alt=\"ClearShoot\"></p>\n<h3 id=\"targetgroup\"><a class=\"markdownIt-Anchor\" href=\"#targetgroup\">#</a> TargetGroup</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/ws4uSH9Nvs2O.png\" alt=\"TargetGroup\"><br>\n 目标组管理器，可以让位于目标组管理器中的目标 <code>尽可能</code> 的位于屏幕中。<br>\n在使用目标组管理器时，务必为摄像机设置目标组类型：<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/rN7xlXVSamTd.png\" alt=\"\"></p>\n<h3 id=\"mixing\"><a class=\"markdownIt-Anchor\" href=\"#mixing\">#</a> Mixing</h3>\n<p>Mixing 摄像机混合管理器，可以将多个摄像机的信息进行混合按照权重，得到最终的显示画面。<br>\n（通过多相机的焦点处建立坐标系按权重分配偏移）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/mJ0BILNkgXu1.png\" alt=\"Mixing\"></p>\n<h3 id=\"活区和死区\"><a class=\"markdownIt-Anchor\" href=\"#活区和死区\">#</a> 活区和死区</h3>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200415/L2dUgC4hSHQs.png\" alt=\"活区和死区\"></p>\n<ul>\n<li>A 区域为死区（Dead Zone），对象在死区内任意移动 <code>不会改变</code> 摄像机的位置。</li>\n<li>B 区域为活区（Soft Zone），对象在活区时会触发摄像机 <code>缓动</code> ，最终将对象固定在死区。</li>\n<li>C 区域为界外区，对象在界外区活动时，摄像机会 <code>立即</code> 改变位置时，使对象位于活区。</li>\n</ul>\n<h3>本文参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NTUyODg2L2FydGljbGUvZGV0YWlscy83OTM4ODUyNw==\">[1] Unity Cinemachine 插件学习笔记</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tpcml0b1YvYXJ0aWNsZS9kZXRhaWxzLzk2Nzc5NDk3\">[2] 个人笔记】Unity 插件 “Cinemachine”—— 实现尼尔机械纪元运镜设计</span></p>\n<h3 id=\"dolly轨道\"><a class=\"markdownIt-Anchor\" href=\"#dolly轨道\">#</a> Dolly 轨道</h3>\n<p>我们可以创建一个自定义的轨道，将摄像机限制在该轨道上。<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/5JS6PFq2vAWt.png\" alt=\"\"><br>\n如图所示我创建了一个圆形轨道，摄像机只能在轨道上运动。</p>\n<h3 id=\"dolly-with-cart轨道\"><a class=\"markdownIt-Anchor\" href=\"#dolly-with-cart轨道\">#</a> Dolly with Cart 轨道</h3>\n<p>让物体沿着轨道运动<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/O7FvKn3fSIff.gif\" alt=\"Dolly with Cart轨道\">（这是一个很强大的功能，其实我们不止能用在摄像机上，可以用在任何游戏对象上，让这个对象，或 ui 只能沿着这个轨道运动，并实时设置要达到哪个点，简言之这是一个曲线编辑器。）<br>\n<img data-src=\"https://pic.fasty97.top/blog/20200415/iGxYjFgflcq3.png\" alt=\"\"></p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>Cinemachine 是一款非常棒的智能摄像机插件，非常的方便易用。解决大部分的摄像机问题，甚至无需编写代码。当然我们也可以使用代码来控制摄像机，更灵活的处理摄像机与角色之间的关系。</p>\n",
            "tags": [
                "unity",
                "Cinemachine"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/13/unity%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%B1%A0/",
            "url": "https://www.fasty97.top/2020/04/13/unity%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%B1%A0/",
            "title": "unity的对象池",
            "date_published": "2020-04-13T05:23:55.000Z",
            "content_html": "<blockquote>\n<p>对象池：在对象销毁时将对象放入池中，在使用对象时从池中取出对象，避免对象初始化和销毁时的昂贵代价。</p>\n</blockquote>\n<p>在游戏中我们需要很多的对象，这些对象可能是动态变化的，例如射击游戏中的子弹，是不断计数的，游戏中的特效也是随着游戏不断增加的。如果我们每次在使用时创建在消失时销毁，务必会造成很大的开销，使用对象池的概念我们可以初始化一定数量的对象在使用对象时使用池中的对象，在消失时把对象归还给对象池，实现对象的复用。</p>\n<h3 id=\"单例模板\"><a class=\"markdownIt-Anchor\" href=\"#单例模板\">#</a> 单例模板</h3>\n<p>一般来说，对于全局的对象池我们需要一个全局的对象池管理器单例来管理所有的对象池。<br>\n在 unity 中我们会用到 2 种单例，一种是非 mono 单例，一种是 mono 单例。</p>\n<h4 id=\"非mono单例\"><a class=\"markdownIt-Anchor\" href=\"#非mono单例\">#</a> 非 mono 单例</h4>\n<p>纯粹的单例模式，添加了线程锁。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonManager<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">T</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    Monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Enter</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">finally</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    Monitor<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"mono单例\"><a class=\"markdownIt-Anchor\" href=\"#mono单例\">#</a> mono 单例</h4>\n<p>mono 单例用于挂载在游戏对象上。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 通用单例模式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;typeparam name=\"T\">&lt;/typeparam></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span> <span class=\"token keyword\">where</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">T</span> Instance <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Instance<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                Instance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"对象池单例\"><a class=\"markdownIt-Anchor\" href=\"#对象池单例\">#</a> 对象池单例</h3>\n<p>这里我以 mono 单例为例，其实现代码如下：<br>\n关键在于对象池的容量自动扩充，继承单例模板即可。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// 对象池</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectPool</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Singleton<span class=\"token punctuation\">&lt;</span>ObjectPool<span class=\"token punctuation\">></span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span> freeObjects<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自由对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">></span></span> useObjects<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 正在被使用的对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> objectPrefab<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> maxCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> addCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token function\">InitPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// 获得对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">GameObject</span> <span class=\"token function\">GetItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>freeObjects<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token operator\">=</span> freeObjects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                useObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                item<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// 扩充容量</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            maxCount <span class=\"token operator\">+=</span> addCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> addCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">InitObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item2 <span class=\"token operator\">=</span> freeObjects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>item2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            useObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>item2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">return</span> item2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\">/// 释放对象</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"t\">&lt;/param></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">FreeItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            useObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            t<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maxCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                freeObjects<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">InitObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">GameObject</span> <span class=\"token function\">InitObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> go <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>objectPrefab<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            go<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">return</span> go<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"对象池的使用\"><a class=\"markdownIt-Anchor\" href=\"#对象池的使用\">#</a> 对象池的使用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ObjectPool</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectPoolTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                go<span class=\"token operator\">=</span> ObjectPool<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">GetItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                ObjectPool<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span><span class=\"token function\">FreeItem</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.fasty97.top/blog/20200413/OKbR5Jr1cYUP.gif\" alt=\"\"></p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B/",
            "url": "https://www.fasty97.top/2020/04/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B/",
            "title": "深入理解协程",
            "date_published": "2020-04-12T02:43:20.000Z",
            "content_html": "<blockquote>\n<p>在很多编程语言中都支持协程，例如在我们之前提到的 lua 中，协程是一个虚拟的线程技术。</p>\n</blockquote>\n<h3 id=\"简述\"><a class=\"markdownIt-Anchor\" href=\"#简述\">#</a> 简述</h3>\n<p>想一想我们平时购买电脑提及的，cpu 是四核八线程，其实 cpu 原先只能处理处理一件事，也就是说 cpu 默认是一个核心对应一条线程的，但是如果我们需要同时处理多个任务，而我们并没有那么多的线程数量。<br>\n然后前人们就提出了虚拟线程的概念，将 cpu 的单个线程，虚拟出多条线程，也就有了我们四核八线程，八核十六线程等的概念；在应用程序这边也有了线程和进程的概念，在把进程再细分，虚拟化软件的线程就得到了协程的概念。</p>\n<blockquote>\n<p>至此你知道，协程就是对线程的再细分，是线程的再虚拟化即可。</p>\n</blockquote>\n<h3 id=\"unity的协程\"><a class=\"markdownIt-Anchor\" href=\"#unity的协程\">#</a> unity 的协程</h3>\n<p>虽然说协程的概念并不新颖，但在现在大趋势的互联网开发领域可能很少涉及到 <code>协程</code> 这个词汇。<br>\n协程就是协力去完成一件事，这很容易想到多线程的概念，例如我们进行一次网络请求我们需要等待 response 之后才能下一步操作，此时我们就会用到 <code>互斥锁</code> 、 <code>线程安全</code> 等概念。<br>\n在 unity 中或者说在游戏引擎中，由于受到游戏主循环线程的制约，所以不能确保多线程的安全性，此时在同一线程下继续使用协程来承担多线程的工作就显得尤为重要。<br>\n（unity 也退出了以性能优先的 ECS 模式，摒弃 Mono 框架，实现了可多线程协助开发的开发模式）<br>\n下面我们就主要以 unity 的协程详细介绍。</p>\n<h3 id=\"unity协程示例\"><a class=\"markdownIt-Anchor\" href=\"#unity协程示例\">#</a> unity 协程示例</h3>\n<p>看这个例子：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建协程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Cor1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2s到了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 启动协程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">Cor1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这是一个简单示例，可以看到协程需要返回一个 <code>IEnumerator</code>  可迭代对象，这本来是 Csharp 中的迭代器模式的实现，在 unity 中 unity 以此为原型实现了协程。</p>\n<h3 id=\"协程的参数\"><a class=\"markdownIt-Anchor\" href=\"#协程的参数\">#</a> 协程的参数</h3>\n<p>在上面我们使用了  <code>new WaitForSeconds()</code> ，这表示等待指定的时间。【注意 WaitForSeconds 与 Time.Scale 相关】<br>\n在上面使用的 WaitForSeconds 之外还有许多的参数，这些参数要么需要花费时间，要么返回 bool，总之就是需要确定一个 moveNext。</p>\n<h3 id=\"协程的使用情况\"><a class=\"markdownIt-Anchor\" href=\"#协程的使用情况\">#</a> 协程的使用情况</h3>\n<ol>\n<li>用于不确定的时长情况（例如：网络请求，读写文件）</li>\n<li>用于延迟执行</li>\n<li>可当做简易计时器使用（例如：生产一批敌人）</li>\n</ol>\n<h3 id=\"协程的嵌套\"><a class=\"markdownIt-Anchor\" href=\"#协程的嵌套\">#</a> 协程的嵌套</h3>\n<p>协程支持嵌套，如下是一个利用协程实现的巡逻的简单实现。<br>\n<strong>注：在 unity 中，协程返回 0 或 null 表示等待下一帧。</strong></p>\n<p><img data-src=\"https://pic.fasty97.top/blog/20200412/c1jAFxkeWJve.gif\" alt=\"\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Coroutines</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 协程测试</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CoroutTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Transform<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> wayPoints<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isLoop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            isLoop <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">StartLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">StartLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> point <span class=\"token keyword\">in</span> wayPoints<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">MoveTarget</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>isLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">MoveTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token operator\">!=</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">MoveTowards</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"让协程动起来\"><a class=\"markdownIt-Anchor\" href=\"#让协程动起来\">#</a> 让协程动起来</h3>\n<ul>\n<li>\n<p>StartCoroutine(nameof(StartLoop));<br>\n 以字符串形式启动协程，能够在外部停止协程，无法传递参数。</p>\n</li>\n<li>\n<p>StartCoroutine(StartLoop);<br>\n 以迭代器形式启动协程，能够传递参数，无法在外部使用 stop 停止协程。</p>\n</li>\n</ul>\n<h3 id=\"让协程停下来\"><a class=\"markdownIt-Anchor\" href=\"#让协程停下来\">#</a> 让协程停下来</h3>\n<p>协程本质是一个迭代器，当 moveNext 为 false 时即认为协程中所有的项目都已经执行完毕。<br>\n在 unity 中有以下几种方式停止协程：</p>\n<ol>\n<li>StopCoroutine ()  注意此方式只能停止以字符串形式启动的协程 【在协程外部使用】</li>\n<li>yield break   跳出协程【在协程内部使用】</li>\n<li>通过逻辑来停止 【使其协程执行条件不满足】</li>\n<li>设置物体不激活 【再次激活协程也不会恢复】</li>\n<li>StopAllCoroutine () 终止所有协程</li>\n</ol>\n<p>如上面协程嵌套的例子中，如果我们想要协程停止：</p>\n<ol>\n<li>设置 isLoop=false；让其在执行一次后不满足条件自动停下</li>\n<li>在协程内部 break</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token operator\">==</span>wayPoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在协程外部 stop</li>\n</ol>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">StopCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>StartLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"协程的设计思想\"><a class=\"markdownIt-Anchor\" href=\"#协程的设计思想\">#</a> 协程的设计思想</h3>\n<h4 id=\"协程是否取代update\"><a class=\"markdownIt-Anchor\" href=\"#协程是否取代update\">#</a> 协程是否取代 update？</h4>\n<p>通过上面的例子，你大可发现，协程其实是对 update 的另一种实现，我们甚至可以只使用协程而不使用任何 update 和 fixedUpdate 完成程序的编写。<br>\n但我们如果这样做不是本末倒置了吗？协程是 unity 推出的延迟执行的一种范式，其还是基于 update 为原理的上层实现。</p>\n<h4 id=\"使用协程会大大提升程序效率吗\"><a class=\"markdownIt-Anchor\" href=\"#使用协程会大大提升程序效率吗\">#</a> 使用协程会大大提升程序效率吗？</h4>\n<p>不会，协程本质上还是在一条线程上，尽管可以多条协程并行，但这些协程始终还是运行在一条线程上，速度和效率并不会得到很大的提升。反而开辟多条线程并行，线程需要多多协程的状态保持监听，在协程大量结束时会触发大量 GC 回收，可能会降低程序的运行效率。</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>协程是运行在线程上的线程，其运作方式任然基于单线程，并不会因为使用协程提高程序的运行效率，但协程方便的书写方式，强大的功能能够提高我们作为开发者的开发效率。<br>\n从某种意义上来讲，协程更像是一个精美的语法糖</p>\n",
            "tags": [
                "协程",
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/04/07/%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E8%A7%92%E8%89%B2%E6%91%84%E5%83%8F%E6%9C%BA%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/",
            "url": "https://www.fasty97.top/2020/04/07/%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E8%A7%92%E8%89%B2%E6%91%84%E5%83%8F%E6%9C%BA%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/",
            "title": "第三人称角色摄像机案例分析",
            "date_published": "2020-04-07T14:17:28.000Z",
            "content_html": "<blockquote>\n<p>很多第三人称角色扮演游戏都有一个很棒的角色摄像机</p>\n</blockquote>\n<h3 id=\"预览\"><a class=\"markdownIt-Anchor\" href=\"#预览\">#</a> 预览</h3>\n<p>实现后的效果如下：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200407/DdMsrT65K52J.gif\" alt=\"自由摄像机\"><br>\n使用鼠标即可以移动摄像机，摄像机能智能的检测到碰撞体，并自动修正位置。</p>\n<h4 id=\"备注\"><a class=\"markdownIt-Anchor\" href=\"#备注\">#</a> 备注</h4>\n<p>Camera.fieldOfView 属性可以获取到摄像机的焦距，修改该值，可以实现拉进拉远效果。</p>\n<h3 id=\"核心参考\"><a class=\"markdownIt-Anchor\" href=\"#核心参考\">#</a> 核心参考</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mouseX <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mouse X\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mouseY <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mouse Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localRotation <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localRotation <span class=\"token operator\">*</span>Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>mouseY<span class=\"token punctuation\">,</span> mouseX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>以上代码是将鼠标移动和摄像机位置关联起来的关键代码，首先我们取得鼠标的 x 和 y 轴上的 axis 值，然后将摄像机的旋转量 *(-mouseY, mouseX, 0) 构成的四元数。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span>vector3<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>可以将一个 3 维向量转换为一个四元数。</p>\n<h3 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\">#</a> 完整代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">NaughtyAttributes</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">_Scripts</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 摄像机控制器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CameraController</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩家\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Transform</span> player<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"平滑速度\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> smooth <span class=\"token operator\">=</span> <span class=\"token number\">10f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"h轴偏转速度\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> hSpeed <span class=\"token operator\">=</span> <span class=\"token number\">6f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"v轴偏转速度\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> vSpeed <span class=\"token operator\">=</span> <span class=\"token number\">6f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"相机位置偏移\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"锚点位置偏移\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> pivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MinMaxSlider</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SerializeField</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"偏转角范围\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector2</span> minMaxVAngle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> targetFov<span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// 目标 Fov</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> targetPivotOffset<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 目标锚点 offset</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> targetCamOffset<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 目标相机 offset</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Transform</span> cam<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Camera</span> myCamera<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> smoothPivotOffset<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 当前锚点插值</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3</span> smoothCamOffset<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 当前相机位置插值</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> defaultFov<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 默认 fov</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> relCameraPosMag<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 射线检测长度</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> angleH<span class=\"token punctuation\">,</span> angleV<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            cam <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            myCamera <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Camera<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            defaultFov <span class=\"token operator\">=</span> myCamera<span class=\"token punctuation\">.</span>fieldOfView<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// 设置相机默认位置</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> Quaternion<span class=\"token punctuation\">.</span>identity <span class=\"token operator\">*</span> pivotOffset <span class=\"token operator\">+</span> Quaternion<span class=\"token punctuation\">.</span>identity <span class=\"token operator\">*</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            smoothPivotOffset <span class=\"token operator\">=</span> pivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            smoothCamOffset <span class=\"token operator\">=</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            angleH <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>eulerAngles<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\">// 射线检测</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            relCameraPosMag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> player<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>magnitude <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">// 重置属性</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            ResetTargetOffsets <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            ResetFov <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            angleH <span class=\"token operator\">+=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Mouse X\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> hSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            angleV <span class=\"token operator\">+=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Mouse Y\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> vSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token comment\">// 限制偏转</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            angleV <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>angleV<span class=\"token punctuation\">,</span> minMaxVAngle<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> minMaxVAngle<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> aimRotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>angleV<span class=\"token punctuation\">,</span> angleH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>angleV<span class=\"token punctuation\">,</span> angleH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token comment\">//y 旋转</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> camYRotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> angleH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">// 焦距</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            myCamera<span class=\"token punctuation\">.</span>fieldOfView <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>myCamera<span class=\"token punctuation\">.</span>fieldOfView<span class=\"token punctuation\">,</span> targetFov<span class=\"token punctuation\">,</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token comment\">// 射线检测动态修正位置</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> baseTempPosition <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> camYRotation <span class=\"token operator\">*</span> targetPivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> noCollisionOffset <span class=\"token operator\">=</span> targetCamOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> zOffset <span class=\"token operator\">=</span> targetCamOffset<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span> zOffset <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> zOffset<span class=\"token operator\">+=</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                noCollisionOffset<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> zOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">PosCheck</span><span class=\"token punctuation\">(</span>baseTempPosition<span class=\"token operator\">+</span>aimRotation<span class=\"token operator\">*</span>noCollisionOffset<span class=\"token punctuation\">,</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>zOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token comment\">// 碰撞修正相机位置</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            smoothPivotOffset <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>smoothPivotOffset<span class=\"token punctuation\">,</span> targetPivotOffset<span class=\"token punctuation\">,</span> smooth <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            smoothCamOffset <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">Lerp</span><span class=\"token punctuation\">(</span>smoothCamOffset<span class=\"token punctuation\">,</span> noCollisionOffset<span class=\"token punctuation\">,</span> smooth <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            cam<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> camYRotation <span class=\"token operator\">*</span> smoothPivotOffset <span class=\"token operator\">+</span> aimRotation <span class=\"token operator\">*</span> smoothCamOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token comment\">/// 重置 offset</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ResetTargetOffsets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            targetPivotOffset <span class=\"token operator\">=</span> pivotOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            targetCamOffset <span class=\"token operator\">=</span> camOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token comment\">/// 重置 FOV</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ResetFov</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            targetFov <span class=\"token operator\">=</span> defaultFov<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token comment\">/// 检查摄像机位置</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"checkPos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"offset\">&lt;/param></span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">PosCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> checkPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token comment\">// 获得碰撞器高度</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> playerH<span class=\"token operator\">=</span>player<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CapsuleCollider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.75f</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                <span class=\"token punctuation\">?</span> player<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CapsuleCollider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.75f</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                <span class=\"token punctuation\">:</span> player<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CharacterController<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">ViewPosCheck</span><span class=\"token punctuation\">(</span>checkPos<span class=\"token punctuation\">,</span> playerH<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ReverseViewPosCheck</span><span class=\"token punctuation\">(</span>checkPos<span class=\"token punctuation\">,</span>playerH<span class=\"token punctuation\">,</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token comment\">/// 碰撞检查</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"checkPos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"playerH\">&lt;/param></span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">ViewPosCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> checkPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> playerH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> target <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> playerH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Physics<span class=\"token punctuation\">.</span><span class=\"token function\">SphereCast</span><span class=\"token punctuation\">(</span>checkPos<span class=\"token punctuation\">,</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span>target<span class=\"token operator\">-</span>checkPos<span class=\"token punctuation\">,</span><span class=\"token keyword\">out</span>  <span class=\"token class-name\">RaycastHit</span> hit<span class=\"token punctuation\">,</span>relCameraPosMag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hit<span class=\"token punctuation\">.</span>transform<span class=\"token operator\">!=</span>player<span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span>hit<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Collider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isTrigger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token comment\">/// 反向碰撞检测</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"checkPos\">&lt;/param></span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"playerH\">&lt;/param></span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token comment\">/// &lt;param name=\"maxDistance\">&lt;/param></span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">ReverseViewPosCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> checkPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> playerH<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maxDistance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token comment\">// Cast origin.</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> origin <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up <span class=\"token operator\">*</span> playerH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Physics<span class=\"token punctuation\">.</span><span class=\"token function\">SphereCast</span><span class=\"token punctuation\">(</span>origin<span class=\"token punctuation\">,</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> checkPos <span class=\"token operator\">-</span> origin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> <span class=\"token class-name\">RaycastHit</span> hit<span class=\"token punctuation\">,</span> maxDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hit<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">!=</span> player <span class=\"token operator\">&amp;&amp;</span> hit<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">!=</span> transform <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>hit<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Collider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isTrigger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/27/%E5%8A%A8%E7%94%BB%E8%A1%A5%E9%97%B4DOTween/",
            "url": "https://www.fasty97.top/2020/03/27/%E5%8A%A8%E7%94%BB%E8%A1%A5%E9%97%B4DOTween/",
            "title": "动画补间DOTween",
            "date_published": "2020-03-27T07:52:35.000Z",
            "content_html": "<blockquote>\n<p>在游戏中，我们可能需要这样的效果，将一个物体放大 2 倍，在 2s 之内完成；或者在点击 UI 时将 UI 逐渐消失。这样需要多作用效果进行逐步展示的效果被称之为补间。</p>\n</blockquote>\n<p>为了引出我们今天的主角 <code>DOTween</code> , 我们先来看看用 unity 的 animation 系统制作一个帧动画序列。</p>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/QQOrLw0fzaM2.gif\" alt=\"示例效果\"></p>\n<h3 id=\"普通的动画\"><a class=\"markdownIt-Anchor\" href=\"#普通的动画\">#</a> 普通的动画</h3>\n<p>我们需要以下几个步骤：</p>\n<ol>\n<li>创建并录制动画</li>\n<li>在 Animator 中设置</li>\n<li>绑定按钮事件</li>\n</ol>\n<p>代码部分：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Play <span class=\"token operator\">=</span> Animator<span class=\"token punctuation\">.</span><span class=\"token function\">StringToHash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartAni</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ui<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Animator<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTrigger</span><span class=\"token punctuation\">(</span>Play<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"播放动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们需要既需要创建资源，有需要绑定设置，操作过程略微麻烦。</p>\n<h3 id=\"dotween动画\"><a class=\"markdownIt-Anchor\" href=\"#dotween动画\">#</a> DoTween 动画</h3>\n<p>在 DoTween 中我们仅仅需要绑定好按钮事件即可，不要创建动画资源，设置动画播发器等麻烦事。<br>\n这在轻度使用补间动画里是非常不错的。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">StartAni</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> rec <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>RectTransform<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>RectTransform 组件，这是 ui 所特有的描述 transform 的组件，第二行代码我们使用扩展方法<br>\n让我们来分析一下这 2 行代码，第一行 我们找到 UI 的 RectTransform 组件，这是 ui 所特有的描述 transform 的组件，第二行代码我们使用扩展方法 DOLocalMoveX 对组件位置进行补间，目的地位置为 0（此时也就是锚点的位置，我这里以中心作为锚点），第二个参数是完成动画的时间我选择 2。也就是说在 2s 内让这个 UI 从飞到他 x 轴的锚点位置。</p>\n<h4 id=\"通用方法\"><a class=\"markdownIt-Anchor\" href=\"#通用方法\">#</a> 通用方法</h4>\n<p>上面的扩展方法我们也可以使用如下的通用方法来替代。</p>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/pQepanWBOJ70.png\" alt=\"通用方法\"></p>\n<h4 id=\"from动画\"><a class=\"markdownIt-Anchor\" href=\"#from动画\">#</a> From 动画</h4>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/DlX2YONOLHtW.gif\" alt=\"From动画\"></p>\n<p>不论是我们使用扩展方法创建的动画还是通用方法创建的动画，我们都可以添加 <code>.Form()</code>  来设定为逆动画。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> rec <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>RectTransform<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">From</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"知识速记扩展方法\"><a class=\"markdownIt-Anchor\" href=\"#知识速记扩展方法\">#</a> 知识速记（扩展方法）</h3>\n<blockquote>\n<p>扩展方法使您能够向现有类型 “添加” 方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型</p>\n</blockquote>\n<p>如果之前的代码较多，在考虑重构时，扩展方法可比接口好用哦。</p>\n<h3 id=\"小案例-打字机效果\"><a class=\"markdownIt-Anchor\" href=\"#小案例-打字机效果\">#</a> 小案例 - 打字机效果</h3>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200327/JSYE1SHQEGNg.gif\" alt=\"打字机效果\"></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Text</span> info<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ResizableTextArea</span></span><span class=\"token punctuation\">]</span><span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> infoData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span>infoData<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"dotween的约定\"><a class=\"markdownIt-Anchor\" href=\"#dotween的约定\">#</a> DoTween 的约定</h3>\n<p>在详细讲解 DoTween 之前，我们先来了解一下 dotween 的设计原理和约定。<br>\n0. dotween 使用 tween（补间）来描述一段动画或缓动：<br>\n <code>rec.DOLocalMoveX(0, 2).From()</code>  就是一个 tween。<br>\n使用 Sequence（序列）来表述一组 tween，在下面介绍 Sequence。</p>\n<ol>\n<li>和我们平时使用 unity 一样，动态变化的部分防止在 update 或 fiexedUpdate 中，dotween 也是这样的，在游戏启动时他会将所有的 tween 的放置在一个容器中（使用了 <code>对象池</code> ）。</li>\n<li>不论是 tween 或者是 Sequence 默认都将在执行完成后自动杀死。</li>\n<li>tween 默认使用 timescale（也就是说我们常用的 timescale=0 暂停游戏也将暂停 tween）</li>\n</ol>\n<h3 id=\"on事件监听\"><a class=\"markdownIt-Anchor\" href=\"#on事件监听\">#</a> On 事件监听</h3>\n<p>我们可以对一个序列或者一个补间注册事件监听状态。<br>\n以下是一些事件：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onComplete</td>\n<td>注册完成委托</td>\n</tr>\n<tr>\n<td>onKill</td>\n<td>注册杀死委托</td>\n</tr>\n<tr>\n<td>onPlaye</td>\n<td>注册开始委托</td>\n</tr>\n<tr>\n<td>onPause</td>\n<td>注册暂停委托</td>\n</tr>\n<tr>\n<td>onUpdate</td>\n<td>注册更新委托</td>\n</tr>\n<tr>\n<td>onRewind</td>\n<td>注册倒带委托</td>\n</tr>\n<tr>\n<td>OnStepComplete</td>\n<td>每次循环完成时</td>\n</tr>\n</tbody>\n</table>\n<p><strong>每个委托都有对应的方法类型可使用。</strong></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onKill <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"set设定\"><a class=\"markdownIt-Anchor\" href=\"#set设定\">#</a> Set 设定</h3>\n<p>我们可以对一个序列或者一个补间设定细节。</p>\n<h4 id=\"setloop设定循环\"><a class=\"markdownIt-Anchor\" href=\"#setloop设定循环\">#</a> setLoop 设定循环</h4>\n<ul>\n<li>参数一： 循环次数（设定为 - 1 为无限循环）</li>\n<li>参数二： 循环类型</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetLoops</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> LoopType<span class=\"token punctuation\">.</span>Incremental<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>循环类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Incremental</td>\n<td>递增，每次播放结束 star 和 end 都会加入到差异值中</td>\n</tr>\n<tr>\n<td>Restart</td>\n<td>重来，播放结束时从起点重新播放</td>\n</tr>\n<tr>\n<td>Yoyo</td>\n<td>摇摆播放</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"setease设定曲线\"><a class=\"markdownIt-Anchor\" href=\"#setease设定曲线\">#</a> SetEase 设定曲线</h4>\n<p><img data-src=\"https://img-blog.csdn.net/20151022164141659\" alt=\"\"></p>\n<h4 id=\"其他常用方法\"><a class=\"markdownIt-Anchor\" href=\"#其他常用方法\">#</a> 其他常用方法</h4>\n<ol>\n<li>setLink(Gameobject) :<br>\n 将 tween 链接到游戏物体，在物体被销毁时自动销毁对象（在序列中无效）</li>\n<li>setId(object):<br>\n 设定 tween 的 id，用于找到 tween，使用数字时效率最高，字符串次之</li>\n<li>SetAutoKill（bool）：<br>\n设定 tween 执行完是否自动杀死，复用 twenn 设为 false</li>\n<li>SetDelay（float）:<br>\n 设定开始播放前的延迟</li>\n<li>SetUpdate(UpdateType):<br>\n 设定更新模式</li>\n<li>SetAs(tween)：<br>\n使用其他 tween 的设定模板</li>\n</ol>\n<h3 id=\"sequence序列\"><a class=\"markdownIt-Anchor\" href=\"#sequence序列\">#</a> Sequence 序列</h3>\n<p>将很多 tween 放在一起称为一个序列 Sequence。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mySeq <span class=\"token operator\">=</span> DOTween<span class=\"token punctuation\">.</span><span class=\"token function\">Sequence</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span>infoData<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">// 在所有补间执行完时回调</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">AppendCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画播放完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">// 插入</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">/* 在给定的时间位置插入给定的补间，从而使您可以重叠补间，而不仅仅是将它们一个接一个地放置。*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOScaleX</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\">// 给定时间插入回调</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">InsertCallback</span><span class=\"token punctuation\">(</span><span class=\"token number\">2f</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动动画结束了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 在序列开头插入补间</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Prepend</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在开头插入的补间。。。\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">PrependCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开头插入开始/动画开始播放\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 序列开始延迟</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">PrependInterval</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 暂停序列</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// mySeq.Pause();</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 可以写在一起</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>             mySeq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                 <span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">DOText</span><span class=\"token punctuation\">(</span>infoData<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                 <span class=\"token punctuation\">.</span><span class=\"token function\">AppendCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画播放完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"dotween和协程\"><a class=\"markdownIt-Anchor\" href=\"#dotween和协程\">#</a> DoTween 和协程</h3>\n<p>看个例子：协程在完成动画之后执行</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tt <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">DOMoveX</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> tt<span class=\"token punctuation\">.</span><span class=\"token function\">WaitForCompletion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WaitForElapsedLoops（int）</td>\n<td>在循环指定次数或 tween 被杀死后</td>\n</tr>\n<tr>\n<td>WaitForKill</td>\n<td>在 tween 被杀死后</td>\n</tr>\n<tr>\n<td>WaitForPosition</td>\n<td>到达给定位置或被杀死</td>\n</tr>\n<tr>\n<td>WaitForRewind</td>\n<td>被杀死或重新播放</td>\n</tr>\n<tr>\n<td>WaitForStart</td>\n<td>开始播放</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"全局设定\"><a class=\"markdownIt-Anchor\" href=\"#全局设定\">#</a> 全局设定</h3>\n<p>我们可以使用 <code>DoTween</code>  类的静态字段来设置对应的默认行为。<br>\n如设定是否自动播放，是否自动销毁，对象池大小，默认曲线方式，所有的 tween 和 Sequence 序列在没有设定参数时默认取全局设定的值。<br>\n在 Pro 版本我们也可以在可视化面板中设置这些参数。</p>\n<p>在运行游戏后我们可以发现场景中多了一个 twenn 的对象，上面可以在游戏中实时查看 tween 的信息。</p>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200328/3TwHh67DgDOd.png\" alt=\"\"></p>\n<h3 id=\"复用动画\"><a class=\"markdownIt-Anchor\" href=\"#复用动画\">#</a> 复用动画</h3>\n<blockquote>\n<p>2021 年 12 月 9 日 18:37:03 更新</p>\n</blockquote>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个序列</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Sequence</span> seq<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 设置序列</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tseq <span class=\"token operator\">=</span> DOTween<span class=\"token punctuation\">.</span><span class=\"token function\">Sequence</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tseq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>titleTxt<span class=\"token punctuation\">.</span>rectTransform<span class=\"token punctuation\">.</span><span class=\"token function\">DOLocalMoveX</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">From</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tseq<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>titleTxt<span class=\"token punctuation\">.</span><span class=\"token function\">DOFade</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tseq<span class=\"token punctuation\">.</span><span class=\"token function\">SetLink</span><span class=\"token punctuation\">(</span>titleTxt<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AppendCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> endBtn<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">PrependCallback</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> endBtn<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">.</span><span class=\"token function\">SetActive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetAutoKill</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 第二次启用时需要这个</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>seq<span class=\"token punctuation\">.</span><span class=\"token function\">Restart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/25/unity%20ScriptableObject%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/03/25/unity%20ScriptableObject%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "unity ScriptableObject的使用",
            "date_published": "2020-03-25T06:41:22.000Z",
            "content_html": "<h3 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h3>\n<p>ScriptableObject 是 unity 提出的针对数据存储资源的解决方案，能够将数据配置项 <code>可视化</code> 的展示在 unityd 属性面板中，并且极易于 json 进行数据交互。<br>\n个人使用过后觉得，其操作方式和继承非常类似，感觉像是对继承进一步封装使其更符合 unity 开发需要，让数据实体化，具现化的展示，通过拖拽式即可像拆装零件一般自由组合数据。（总而言之是对继承和多态的封装）</p>\n<h3 id=\"使用场景\"><a class=\"markdownIt-Anchor\" href=\"#使用场景\">#</a> 使用场景</h3>\n<p>用于 ScriptableObject 是针对 unity 的，在 unity 使用时比传统的数据格式如 json，xml 更加方便快捷。而且在面对诸如策划，美工等不了解程序的人员来说，上手更加快捷。<br>\n实质上，ScriptableObject 主要还是对数据进行存储和处理，只要是使用数据的地方都可以使用 ScriptableObject 进行配置式管理，这样相比直接继承式的数据传递，耦合性更低。<br>\n更符合 <code>多组合少继承</code> 的设计理念。</p>\n<h3 id=\"基本使用\"><a class=\"markdownIt-Anchor\" href=\"#基本使用\">#</a> 基本使用</h3>\n<p>遵循步骤：</p>\n<ol>\n<li>创建资源脚本，继承自 <code>UnityEngine.ScriptableObject</code></li>\n<li>创建资源对象</li>\n<li>在其他脚本中以组件形式指定资源对象</li>\n</ol>\n<p>我们可以将一些诸如敌人的血量，攻击，防御等数值存储在 ScriptableObject 中。</p>\n<h4 id=\"创建资源脚本\"><a class=\"markdownIt-Anchor\" href=\"#创建资源脚本\">#</a> 创建资源脚本</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create ItemAssets\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemAssets</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> price<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"title:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">title</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">  price:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">price</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"指定资源使用\"><a class=\"markdownIt-Anchor\" href=\"#指定资源使用\">#</a> 指定资源使用</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ScriptableObject</span> itemAsset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>itemAsset<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>itemAsset<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"单例资源脚本\"><a class=\"markdownIt-Anchor\" href=\"#单例资源脚本\">#</a> 单例资源脚本</h3>\n<p>在平时我们一般使用 GameManager 实现单例模式并设置在切换场景时不销毁来达到全局数据的管理。<br>\n在 ScriptableObject 中，我们同样可以达到这个效果，由于 ScriptableObject 是一个资源可直接存储在磁盘，不需要设置不销毁也能存储全局数据，管理同步。</p>\n<h4 id=\"创建单例资源\"><a class=\"markdownIt-Anchor\" href=\"#创建单例资源\">#</a> 创建单例资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Assets</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create GameStateAssets\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameStateAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> level<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">GameStateAsset</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">GameStateAsset</span> Instance <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    _instance<span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameStateAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                   _instance<span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameStateAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                   _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>DontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"level:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">level</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">  score:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">score</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用单例资源\"><a class=\"markdownIt-Anchor\" href=\"#使用单例资源\">#</a> 使用单例资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>level <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>GameStateAsset<span class=\"token punctuation\">.</span>Instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"临时资源\"><a class=\"markdownIt-Anchor\" href=\"#临时资源\">#</a> 临时资源</h3>\n<p>有时我们需要动态的生成一些对象，这些对象的数据可能并不是静态的设置好的，并且只是临时的使用这些数据，我们可以直接创建临时的 ScriptableObject 来处理这种情况。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> item <span class=\"token operator\">=</span> ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ItemAssets<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>item<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">\"测试物品\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>item<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"插槽式资源\"><a class=\"markdownIt-Anchor\" href=\"#插槽式资源\">#</a> 插槽式资源</h3>\n<p>有时数据是需要被再加工的，加工的过程不应该影响到数据的使用，对于使用数据的一方，不必知晓数据的具体加工过程，这些过程就好像一个个插槽，就等待着期望的数据进入即可。<br>\n从这里我们也可以看出，在 ScriptableObject 中是可以包含 <code>方法</code> 的。</p>\n<h4 id=\"创建资源\"><a class=\"markdownIt-Anchor\" href=\"#创建资源\">#</a> 创建资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PowerUpAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create HealthUpAsset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HealthUpAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">PowerUpAsset</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        go<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Health<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currHealth <span class=\"token operator\">+=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用资源\"><a class=\"markdownIt-Anchor\" href=\"#使用资源\">#</a> 使用资源</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemHpUp</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HealthUpAsset</span> hpAsset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnTriggerEnter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collider</span> other<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span><span class=\"token function\">CompareTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Player\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            hpAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"与json交互\"><a class=\"markdownIt-Anchor\" href=\"#与json交互\">#</a> 与 Json 交互</h3>\n<p>ScriptableObject 和 json 有很高的亲和性（ScriptableObject 就是基于类的延伸）<br>\n在某些情况下，我们可能需要将 json 数据存入 ScriptableObject 或将 ScriptableObject 写入 json 来实现一些如游戏存档等的功能。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>Serialization</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Assets<span class=\"token punctuation\">.</span>TalkJson</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"My Assets/Create GameFileAsset\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GameFileAsset</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Serializable</span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Archive</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DateTime <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Level <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">GameFileAsset</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">GameFileAsset</span> Instance</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">get</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    _instance <span class=\"token operator\">=</span> Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">FindObjectsOfTypeAll</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token function\">InitializeFromDefault</span><span class=\"token punctuation\">(</span>UnityEditor<span class=\"token punctuation\">.</span>AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">LoadAssetAtPath</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Test game file.asset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">return</span> _instance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Archive<span class=\"token punctuation\">></span></span> archives<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Archive</span> currArchive<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeFromDefault</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GameFileAsset</span> file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            _instance <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>HideAndDontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>       <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LoadFromJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_instance<span class=\"token punctuation\">)</span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>_instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>           _instance <span class=\"token operator\">=</span> ScriptableObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateInstance</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameFileAsset<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>           JsonUtility<span class=\"token punctuation\">.</span><span class=\"token function\">FromJsonOverwrite</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>           _instance<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>HideAndDontSave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>       <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SaveToJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>           Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Saving game file to &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>           System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">WriteAllText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> JsonUtility<span class=\"token punctuation\">.</span><span class=\"token function\">ToJson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"个人理解\"><a class=\"markdownIt-Anchor\" href=\"#个人理解\">#</a> 个人理解</h3>\n<p>ScriptableObject 其实就是对类的特殊处理，在 unity 中将这里的类脚本特异性的识别让其数据可视化，并在内部实现了实例化处理，让其可以直接在脚本中使用而无需实例化对象。</p>\n<p>[toc]</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/22/HDRP%E4%BD%93%E9%AA%8C2B%E5%B0%8F%E5%A7%90%E5%A7%90/",
            "url": "https://www.fasty97.top/2020/03/22/HDRP%E4%BD%93%E9%AA%8C2B%E5%B0%8F%E5%A7%90%E5%A7%90/",
            "title": "HDRP体验2B小姐姐",
            "date_published": "2020-03-22T06:59:19.000Z",
            "content_html": "<p>在上一个文章<a href=\"https://www.fasty97.top/lwrp%e4%b8%8bshadergraph%e7%9a%84%e4%bd%bf%e7%94%a8/\" title=\"LWRP\"> LWRP</a> 中我们介绍了 LWRP 的基本使用方法，并使用 ShaderGraph 写了两个小例子。<br>\n这次我们就来尝试一下 HDRP，效果上要比 LWRP 或者普通渲染管线好多少。</p>\n<h3 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\">#</a> 效果预览</h3>\n<p><video src=\"https://pic.fasty97.top/blog/blog-nierHDRP.mp4\" autoplay loop style=\"width:100%\"></video><br>\n可以看到在 HDRP 中的效果还是比较不错的，各种光影的质量都还不错。</p>\n<h3 id=\"hdrp-入门\"><a class=\"markdownIt-Anchor\" href=\"#hdrp-入门\">#</a> HDRP 入门</h3>\n<ol>\n<li>下载安装以下依赖:<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200322/kl15u7a5e2GF.png\" alt=\"\"></li>\n<li>创建 HDRP 资源并设置（这个和 LWRP 差不多）</li>\n<li>设置颜色空间为 <code>Linner</code>  (这个设置很重要)</li>\n<li>创建全局 Volm 管理环境</li>\n</ol>\n<p>以上就是主要的步骤，下面我详细说一下一些细节的地方。</p>\n<h3 id=\"如何使用天空盒\"><a class=\"markdownIt-Anchor\" href=\"#如何使用天空盒\">#</a> 如何使用天空盒</h3>\n<p>在 HDRP 中有多种天空类型： <code>颜色渐变天空</code> ， <code>纯色天空</code> ， <code>HDRI天空</code> ， <code>物理天空</code> 等。<br>\n大家可以看到我的天空是有一些云朵的一个天空盒，在 HDRP 中默认是纯色的黑天空，我们可以添加一个 Volume 对象或者在游戏物体上挂载一个 Volume 脚本来对默认设置进行重写。<br>\n如我这样我可视化环境组件，用于设置天空类型，这里我将其设置为 HDRI，再添加一个 HDRI Sky 组件用于详细设置，在 Hdri Sky 项目中设置导入的天空盒 cubemap。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200322/WnOvO7pHMlnr.png\" alt=\"\"><br>\n添加一个：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/i4UgANuYjKXk.png\" alt=\"\"><br>\n在设置中设置：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/5MV2zF3dOEoE.png\" alt=\"\"><br>\n此时就算是把天空盒光线环境搭好了，快放入模型试试吧。</p>\n<h3 id=\"金属感和平滑度\"><a class=\"markdownIt-Anchor\" href=\"#金属感和平滑度\">#</a> 金属感和平滑度</h3>\n<p>在这个模型中，2B 所持的剑是金属制品，但之前的之前的视频展示并没有去做这方面的处理。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/PjUJNsJzTJ6j.png\" alt=\"\"><br>\n这里我将金属度设置为 1，给一个很强的金属感，平滑度给个 0.6。（如我们现实世界一样，一般来说金属度高的东西，平滑度也会高一些，反射光线的能力强一些。）<br>\n设置金属和平滑度一部分可以补足金属器物的质感和光泽。<br>\n调整金属和平滑度后：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200323/wHbsjytdodBJ.png\" alt=\"\"><br>\n视频预览：<br>\n<video src=\"https://pic.fasty97.top/blog/nierHDRP2.mp4\" autoplay loop style=\"width:100%\"></video></p>\n<p>[toc]</p>\n",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/21/LWRP%E4%B8%8BShaderGraph%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/03/21/LWRP%E4%B8%8BShaderGraph%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "LWRP下ShaderGraph的使用",
            "date_published": "2020-03-21T09:03:57.000Z",
            "content_html": "<p><strong>丢失了好多文章，故更新一波，开一个新坑 CG</strong></p>\n<blockquote>\n<p>不论是 LWRP 还是 ShaderGraph 都已经不是什么新技术了</p>\n</blockquote>\n<h3 id=\"cg杂谈\"><a class=\"markdownIt-Anchor\" href=\"#cg杂谈\">#</a> CG 杂谈</h3>\n<p>计算机图形学（ComputGraph）简称 <code>CG</code> ，是一门研究计算机图形图像处理的学科，将符号或电子信号可视化是一门比较晦涩难懂的东西，比如 <code>傅里叶变换</code> 用于研究声音和波的关系，让波得以表示。众所周知，建模时我们总是使用三角面来构成一个模型，以三角面的数量来衡量一个模型的精细程度。从三维物体坐标系到二维的屏幕坐标系，深度如何表示？遮挡关系如何计算？这就是 CG 所研究的东西，计算机图形学也被称为程序员的浪漫，这就是这个系列要说的东西。</p>\n<h3 id=\"lwrp\"><a class=\"markdownIt-Anchor\" href=\"#lwrp\">#</a> LWRP</h3>\n<p><code>LWRP</code>  (轻度渲染管线) 是 unity 推出的可自定义的渲染管线，其初衷是为了移动平台和轻度主机平台。在轻度渲染管线下，我们可以对渲染管线做更多的设置和处理，并且可以使用 shaderGraph 可视化的 shader 编辑器像连连看一样完成 shader 的编写。<br>\n通过 shader 我们可以实现许多视觉效果，如飘动的红旗，水面的倒影，卡通人物渲染等；有些可以使用模型来解决但使用 shader 不仅高效还能处理许多模型无法解决的东西。</p>\n<p><em>不知道你是否看过游戏的模型，或者说取解包过游戏，很多游戏，模型可能并没有游戏中那么<strong>漂亮</strong>！</em><br>\n但是通过 shader，光照，后处理等，玩家看到的就是非常赞的效果了！（就好像是美颜滤镜一样）</p>\n<h3 id=\"hdrp\"><a class=\"markdownIt-Anchor\" href=\"#hdrp\">#</a> HDRP</h3>\n<p><code>HDRP</code>  (高清渲染管线) 如名字所言，是专门在对画面质量要求较高的主机或 PC 端开发游戏所使用的。（但 unity 开发大型游戏真的够呛，目前在我看来 ue4 可能更适合）<br>\n使用 HDRP 我们可以更高程度的自定义我们的渲染系统，要知道在游戏引擎中，渲染占据了很大的一块。</p>\n<h3 id=\"shader的基础认知\"><a class=\"markdownIt-Anchor\" href=\"#shader的基础认知\">#</a> Shader 的基础认知？</h3>\n<p>关于 shader 的基础认知，我在之前曾写过一篇文章（虽然没写完），我会抽空把那篇文章写完的。<br>\n如果有兴趣不妨去看看：<a href=\"http://www.fasty97.top/unity%e5%9b%be%e5%bd%a2%e5%ad%a6-%e6%b8%b2%e6%9f%93%e6%b5%81%e7%a8%8b/\" title=\"[传送门]unity图形学 渲染流程\">[传送门] unity 图形学 渲染流程</a></p>\n<h3 id=\"lwrp下shadergraph的搭建\"><a class=\"markdownIt-Anchor\" href=\"#lwrp下shadergraph的搭建\">#</a> LWRP 下 Shadergraph 的搭建</h3>\n<p><code>Unity版本 2019.3.0f6</code> <br>\n 听了这么多，也许你还是比较懵吧，没事。让我们来揭开 shader 的神秘面纱吧</p>\n<ol>\n<li>\n<p>首先安装如下依赖包：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/IHRSz6lfegXD.png\" alt=\"\"><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/BLWb4IR9U5wt.png\" alt=\"\"></p>\n</li>\n<li>\n<p>创建渲染管线资源并设置：<br>\n值得一提的是，在 unity2019.3 中已经将 LWRP 更名为 UWRP 了，unity 想在之后让 LWRP 变成通用的渲染管线取代原先的 Stand 渲染管线；所以我们需要创建一个 UWRP 的资源。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/TR1o545kQ1Nz.png\" alt=\"\"></p>\n</li>\n<li>\n<p>使用 UWRP<br>\n 首先我们创建一个 Cube，一个材质，一个 PBRGraph（基于物理的 shader）。</p>\n</li>\n</ol>\n<h4 id=\"pbrgraph\"><a class=\"markdownIt-Anchor\" href=\"#pbrgraph\">#</a> PBRGraph?</h4>\n<p>这里补充一点小知识，所谓 PBR 就是基于物理的渲染，什么叫做基于物理的渲染呢？简单的说就是原先的模型在绘制贴图时，贴图师就会直接在贴图上绘制好高光，粗糙度，磨损等，这是基于经验的固定化的处理。而基于物理的渲染则是通过复杂的计算和光照模型的影响，动态的计算出模型的细节，让模型处于不同的环境中能够有不同的表现，是基于环境影响的。</p>\n<p>打开 PBRGraph：<br>\n创建如下结点并连接<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/KC6HrUGWV9pC.png\" alt=\"PBRGraph\"><br>\n 然后将 shader 指定到对应材质，将材质指定到我们的 Cube，尝试调整数值吧。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/PkIawTx0mOAc.gif\" alt=\"\"><br>\n到这里我们已经知道如何基本的使用 shaderGraph 了呢，但你可能会说，这不是自带 shader 就拥有的功能吗？</p>\n<h3 id=\"做一个边缘发光效果\"><a class=\"markdownIt-Anchor\" href=\"#做一个边缘发光效果\">#</a> 做一个边缘发光效果</h3>\n<p>下面我们使用菲涅尔效应做一个简单的边缘自发光，其 shadergraph 如图所示，通过菲涅尔结点指定一个发光颜色和强度来实现。（非常简单吧）<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/pmNHEXl7Y02o.png\" alt=\"\"><br>\n<strong>效果图：</strong><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/dQdztRRmd7pH.gif\" alt=\"边缘发光效果\"></p>\n<h3 id=\"做一个顶点动画\"><a class=\"markdownIt-Anchor\" href=\"#做一个顶点动画\">#</a> 做一个顶点动画</h3>\n<p>通过顶点偏移我们可以实现一个波浪或是，旗帜飘动的效果：<br>\n主要是使用顶点偏移通过 sin 正弦方式。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/oKWCf4A3lDxM.png\" alt=\"\"></p>\n<p>效果如图：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200321/5yqXJieqbu2x.gif\" alt=\"\"></p>\n",
            "tags": [
                "shaderGraph"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/03/20/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%9C%8B%E6%BC%AB%E7%94%BB/",
            "url": "https://www.fasty97.top/2020/03/20/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%9C%8B%E6%BC%AB%E7%94%BB/",
            "title": "如何优雅的看漫画",
            "date_published": "2020-03-20T05:10:45.000Z",
            "content_html": "<blockquote>\n<p>最近挺迷漫画的，但如何正确优雅的看漫画却是一大难题</p>\n</blockquote>\n<h3 id=\"pc端\"><a class=\"markdownIt-Anchor\" href=\"#pc端\">#</a> PC 端</h3>\n<p>在 Pc 端看漫画还是蛮爽的，屏幕比较大，看的字迹也会清楚一些。</p>\n<h4 id=\"漫画阅读器\"><a class=\"markdownIt-Anchor\" href=\"#漫画阅读器\">#</a> 漫画阅读器</h4>\n<ul>\n<li>\n<p>Cover<br>\ncover 可以直接在 win10 商店下载，免费版可以同时管理 25 本漫画书，并且可以搭载云服务器同步您的漫画库，操作起来非常顺手，缺点是打开页数较多的漫画时，可能加载会较慢。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200316/6s1teEz5I3JI.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Eriri<br>\nEriri 是 <code>蝉时雨</code> 大佬的开源项目，能够无限制的管理漫画书，操作简洁，加载漫画迅速，但在一些小方面仍需改进，如缺少漫画分类库，缺少日漫的从右至左的阅读方式等。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200316/YSuhMUmh2t5Q.png\" alt=\"\"><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NoYW5zaGl5dWN4L2VyaXJp\">github</span></p>\n</li>\n</ul>\n<h3 id=\"移动端\"><a class=\"markdownIt-Anchor\" href=\"#移动端\">#</a> 移动端</h3>\n<p>在移动端可以方便的随时随地看漫画，当然移动端的软件可不必 PC 端差哦。</p>\n<h4 id=\"tachiyomi\"><a class=\"markdownIt-Anchor\" href=\"#tachiyomi\">#</a> tachiyomi</h4>\n<p>我强烈安利 tachiyomi,tachiyomi 完全开源免费，由全世界的动漫爱好者一同维护和迭代，现在的版本已经非常稳定和方便了，可以通过添加插件的方式，方便的查看和下载国内外的漫画，并且可绑定云存储容器实现漫画库的实时同步，使用原生 android 开发，流畅度极佳！<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200320/9hulbq79NiLw.png\" alt=\"\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lub3JpY2hpL3RhY2hpeW9taQ==\">github</span></p>\n<h4 id=\"exview\"><a class=\"markdownIt-Anchor\" href=\"#exview\">#</a> Exview</h4>\n<p>Exview 不仅仅是一个漫画阅读器，更像是一个二次元圈子，通过各种各样的插件和扩展，不仅能使用 Exview 来看漫画，更可以看小说，看动漫，看 coser 等等；但整体软件非 android 原生开发，且优化极差，导致经常卡死，此软件也有电脑版，但依然存在这些问题。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200320/cWFnI8KVrldf.png\" alt=\"\"></p>\n<h3 id=\"下载漫画\"><a class=\"markdownIt-Anchor\" href=\"#下载漫画\">#</a> 下载漫画</h3>\n<p>下载漫画我推荐使用 漫画控，买个授权也挺便宜的。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200316/NCm32ijzDtjY.png\" alt=\"\"></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2020/02/16/Gitbook%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://www.fasty97.top/2020/02/16/Gitbook%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "Gitbook初体验",
            "date_published": "2020-02-16T04:40:30.000Z",
            "content_html": "<blockquote>\n  有没有想过整理一下自己杂乱的学习笔记呢？有没有想自己写本书呢？\n</blockquote>\n<p>如果你有以上的想法，那么 gitbook 将是非常适合你的东西。</p>\n<h3>前置准备工作</h3>\n<p>安装并配置好<code>node.js</code>即可。</p>\n<h3>安装gitbook</h3>\n<pre><code class=\"language-bash line-numbers\">$ npm install gitbook-cli -g\n</code></pre>\n<p>安装可能会比较耗时，若情况特殊请开启科学上网。<br>\n在安装完成后可以查看是否安装成功：</p>\n<pre><code class=\"language-bash line-numbers\">$ gitbook -V\n</code></pre>\n<h3>使用gitbook</h3>\n<p>在你想建立 gitbook 的文件下，输入<code>gitbook init</code>可以在此文件夹建立 gitbook。<br>\n<img data-src=\"http://pic.fasty97.top/note/20200216/0lPmKdMw8l0v.png\" alt=\"\"><br>\n你可以在文件中中发现这两个文件：（第一次可能有点慢）<br>\n<img data-src=\"http://pic.fasty97.top/note/20200216/CPTnLXSDjhBW.png\" alt=\"\"><br>\n其中<code><span class=\"exturl\" data-url=\"aHR0cDovL1NVTU1BUlkubWQ=\">SUMMARY.md</span></code>是本书的目录，我们可以编辑目录后再次使用<code>gitbook init</code>来更新书本。</p>\n<pre><code class=\"language-markdown line-numbers\"># Summary\n\n* [Introduction](README.md)\n\n* [笔记](note1/笔记.md)\n\n</code></pre>\n<p>我们可以在 SUMMARY 下追加一个目录如上，其中<a class=\"wp-editor-md-post-content-link\" href=\"指向的文件地址\">在目录中显示的名字</a>，gitbook 会自动生成目录和文件。<br>\n然后我们更新书本。</p>\n<h3>启动本地预览</h3>\n<pre><code class=\"language-bash line-numbers\">gitbook serve\n</code></pre>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200216/ya5J8QhAWmmk.png\" alt=\"本地预览\"><br>\n完成后我们就可以在 4000 端口访问了。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200216/p1IYlSMUaJDd.png\" alt=\"\"></p>\n<h3>使用vscode编辑MD</h3>\n<p>主要需要安装 2 个插件：<br>\n!{}(<span class=\"exturl\" data-url=\"aHR0cDovL3BpYy5mYXN0eTk3LnRvcC9ibG9nLzIwMjAwMjE2LzUxa0lRZHBhMVgzZC5wbmc=\">http://pic.fasty97.top/blog/20200216/51kIQdpa1X3d.png</span>)<br>\n!{}(<span class=\"exturl\" data-url=\"aHR0cDovL3BpYy5mYXN0eTk3LnRvcC9ibG9nLzIwMjAwMjE2L0lqR3N2TzM3R1MxVy5wbmc=\">http://pic.fasty97.top/blog/20200216/IjGsvO37GS1W.png</span>)</p>\n<p>安装完这两个插件就可以愉快的写 md 了，可以使用<code>alt+shirt+f</code>快速格式化代码。<br>\n在这里还推荐大家一个插件用于记录文件的更新时间:<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200216/Kq43IQrCOP4P.png\" alt=\"\"><br>\n 效果如图：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200216/jBHBzThH1Rof.png\" alt=\"\"></p>\n",
            "tags": [
                "好物推荐"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/10/Timeline%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "https://www.fasty97.top/2020/02/10/Timeline%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Timeline的基本使用",
            "date_published": "2020-02-10T05:53:35.000Z",
            "content_html": "<p>Unity 版本号：<font color=green>2019.3.0f6</font></p>\n<hr />\n<p>TimeLine 是 unity2017 推出的新功能，其采用时间线的形式组合场景资源， 可以用于编排游戏剧情，过场动画，斩杀镜头，人物特写等效果。</p>\n<h3>创建TimeLine</h3>\n<p>用于播放 TimeLine 的物体必须有这个组件：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/CUXzMDxo2tsx.png\" alt=\"组件\"></p>\n<table>\n<thead>\n<tr>\n  <th align=\"center\">参数名</th>\n  <th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td align=\"center\">Playable</td>\n  <td align=\"center\">Playable资源（TimeLine资源）</td>\n</tr>\n<tr>\n  <td align=\"center\">Update Method</td>\n  <td align=\"center\">更新模式</td>\n</tr>\n<tr>\n  <td align=\"center\">Play On Awake</td>\n  <td align=\"center\">是否启动时自动播放</td>\n</tr>\n<tr>\n  <td align=\"center\">Wrap Mode</td>\n  <td align=\"center\">结束模式，None播放完回到原先属性，Loop循环播放，Hood播放完维持改变</td>\n</tr>\n<tr>\n  <td align=\"center\">Initial Time</td>\n  <td align=\"center\">延迟时间</td>\n</tr>\n</tbody>\n</table>\n<h3>轨道面板</h3>\n<p><img data-src=\"http://pic.fasty97.top/blog/20200210/0l1DQytDcsA2.png\" alt=\"轨道面板\"><br>\n点击左侧的＋，可以添加轨道，这是一个类似视频剪辑的界面，我们可以方便的对轨道进行移动和剪辑。</p>\n<h4>Activation</h4>\n<p>Activation 用于表示物体的激活状态：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/vIzC588mJlSO.gif\" alt=\"Activation\"></p>\n<h4>Animation</h4>\n<p>Animation 用于播放动画，既可以播放已有的动画，也可以自己录制帧动画来使用。<br>\n<strong>注意：使用此轨道的物体会被创建一个 Animator Controller，这个组件不能被删除。</strong><br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/gizvroAPPTAo.gif\" alt=\"Animation\"></p>\n<h4>Audio</h4>\n<p>Audio 轨道用于播放音效，如果不指定 AudioSource 就无法细致调节效果。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/zEYKWKgDJrlk.png\" alt=\"Audio\"><br>\n 每个轨道在属性面板都有不同的属性，Audio 面板如下：<br>\n!{Audio 属性}(<span class=\"exturl\" data-url=\"aHR0cDovL3BpYy5mYXN0eTk3LnRvcC9ibG9nLzIwMjAwMjEwL0dvRURiN3FiZFNIUi5wbmc=\">http://pic.fasty97.top/blog/20200210/GoEDb7qbdSHR.png</span>)</p>\n<h4>Control</h4>\n<p>Control 轨道和 Activation 轨道有点相似，但不同的是 Control 轨道可以同时控制多个物体的激活状态。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/y5G5Rhig2kPn.png\" alt=\"Control\"></p>\n<h4>Signal-任意轨道</h4>\n<p>Signal 是非常重要的轨道，在使用 TimeLine 时，你可能会有这样的想法，能不能在时间线上，调用我们自定义的方法呢，在 2019 之前可以通过剪辑间接的完成事件的调用；但现在有了 Signal 轨道的加持，我们可以非常方便的在任意时刻调用方法了。<br>\n创建一个简单的测试脚本，并将脚本挂载在游戏物体上。</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SignalTest</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Signal!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>右键单击任意轨道：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/SAiR90ho2iVi.gif\" alt=\"\"><br>\n此时在属性面板中，可以看到：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/rkIgMqVhBiI3.png\" alt=\"\"><br>\n为了监听这个事件，unity 提示我们缺少一个监听器，点击 Add 添加一个。<br>\n添加好监听器，我们需要创建一个监听实例，这个实例是可以复用的。<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/fbn8zd2A3rD3.png\" alt=\"\"></p>\n<p>完成以上步骤我们发现原先有警告的小白标变成了<font color=red>白色</font>。这说明我们设置正确了，然后我们需要绑定事件给实例：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/YYCEgJkFVtkl.png\" alt=\"\"><br>\n尝试运行（播放游戏）一下发现在时间轴运行到小白标时会自动调用我们绑定的方法。</p>\n<h3>Signal-指定轨道</h3>\n<p>上面实现的 Signal 是针对于任意轨道来说的，如果我们需要很多的 Signal 处理起来可能会发生混乱，所以官方提供了专门的 Signal 轨道。<br>\n先给我们的物体添加：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/07nzVWaY41Yw.png\" alt=\"\"><br>\n在属性面板中我们可以对事件实例绑定多个方法，统一管理：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/IvGBUJotShrO.png\" alt=\"\"></p>\n<h3>小技巧</h3>\n<p>在轨道左侧可以点击三点，然后选择 Mute（静音）对指定轨道进行屏蔽。<br>\n在右侧轨道面板中，可以通过重叠区块实现 2 个区块之间的过渡效果。<br>\n可设置轨道的淡入淡出效果：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/TKt9DScaWgab.png\" alt=\"\"></p>\n<h3>驱动摄像机</h3>\n<p>做了一个超级丑的摄像机变换效果：<br>\n<img data-src=\"http://pic.fasty97.top/blog/20200210/UVEeBVXqcg7D.gif\" alt=\"\"></p>\n<h3>代码驱动TimeLine</h3>\n<p>有时候我们可能需要通过代码动态的启动 TimeLine，这也很容易实现：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Signal</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PlayableDirector</span> playDir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Fac</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fac..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            playDir<span class=\"token punctuation\">.</span><span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "unity"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/10/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/",
            "url": "https://www.fasty97.top/2020/02/10/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/",
            "title": "使用七牛云作为图床",
            "date_published": "2020-02-09T16:43:29.000Z",
            "content_html": "<blockquote>\n  之前一直使用的SM.MS的图床个人感觉也蛮好的，直到前几天突然被墙了（虽然现在又好了），但以此作为教训，还是弄个稳定的图床好了。\n</blockquote>\n<h3>快速开始</h3>\n<p>首先你需要一个已经<font color=blue>备案</font>的域名。其次你需要创建一个七牛云账号并绑定一个<font color=blue>加速域名</font>。</p>\n<h4>创建加速域名</h4>\n<p>创建好一个空间，点击绑定加速域名，输入一个二级地址。<br>\n<img data-src=\"http://pic.fasty97.top/2020-02-10-11-57-04.png\" alt=\"创建加速域名\"></p>\n<h4>在域名服务商处开启CAME</h4>\n<p>创建完成后，复制对应的 CAME 值：<br>\n如我创建的加速域名为<code>cdn.fasty97.top</code><br>\n<img data-src=\"http://pic.fasty97.top/2020-02-10-12-00-10.png\" alt=\"CAME\"></p>\n<p>在域名解析里添加一条记录：<br>\n<img data-src=\"http://pic.fasty97.top/2020-02-10-12-04-56.png\" alt=\"\"><br>\n然后你可以在七牛云里面看到：<br>\n<img data-src=\"http://pic.fasty97.top/2020-02-10-12-07-38.png\" alt=\"\"></p>\n<h3>处理</h3>\n<p>为了方便大家上传图片，我这里使用 2 种不同的方案，大家<font color=red>选择其一</font>即可。</p>\n<h4>下载MPic</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21waWMubHpoYW9mdS5jbi8=\">MPic</span></p>\n<h4>下载MarkdownPicPicker</h4>\n<p>MarkdownPicPicker 是一个 md 写作工具，用于上传图片。<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tpbmduYW1lL01hcmtkb3duUGljUGlja2VyL3JlbGVhc2VzL2Rvd25sb2FkL3YxLjAuMC9NYXJrZG93blBpY1BpY2tlcl92MS4wLjAuemlw\">下载程式</span><br>\n下载后创建一个 config 文件夹，并将 config.ini 配置好再放进去。</p>\n<p>config.ini 示例：</p>\n<pre><code class=\"line-numbers\">[basic]\npicture_folder = pic #必需，用来在本地保存图片的副本，名字任意\npicture_suffix = png #必需，图片后缀名，请使用png\n# 图片上传插件的文件名，不带\".py\"\npicture_host = QiniuUploader\n\n[QiniuUploader]\naccess_key = Q6sS422O0fasfsassadasdfahqasdftqvyQasdf5Zvzw\nsecret_key = 6QtA121TxoSxZadffsdfasdfaaffasCmoOaB2aLObM\ncontainer_name = picturebed\nurl = http://7sbpmp.com1.z0.glb.clouddn.com/&#123;&#125;\n</code></pre>\n<p>注意：在实际使用中，请将上面的注释部分去掉，避免出现不必要的问题。</p>\n<p>如果你希望只将图片的 url 复制到剪贴板中，而不是复制<code><img data-src=\"%E5%9B%BE%E7%89%87url\" alt=\"\"></code>， 你可以为 markdownpicpicker.exe 添加上 -linkonly 参数。在 markdownpicpicker.exe 所在目录打开 cmd, 输入:</p>\n<pre><code class=\"line-numbers\">markdownpicpicker.exe -linkonly\n</code></pre>\n<p>建议大家使用 AutoHotKey 来启动程序。这样可以把整个流程缩短到 2 秒钟。AutoHotKey 的配置示例：</p>\n<pre><code class=\"line-numbers\">#n::Run D:\\Program Files\\MarkdownPicPicker_v1.0.0\\MarkdownPicPicker_v1.0.0\\MarkdownPicPicker.exe -linkonly\n</code></pre>\n<p>需要首先使用 QQ 截图或者其他截图工具将图片保存到剪贴板中，然后按下设定好的快捷键即可。Markdown 格式的图片链接就已经保存到剪贴板中了。在需要使用的地方直接粘贴。<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2Foa2NuLnNvdXJjZWZvcmdlLm5ldC9kb2NzL1R1dG9yaWFsLmh0bQ==\">AutoHotKey 的中文文档</span></p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2020/02/07/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B9%9D%EF%BC%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "url": "https://www.fasty97.top/2020/02/07/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B9%9D%EF%BC%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "title": "Lua-基础（九）面向对象",
            "date_published": "2020-02-07T08:20:13.000Z",
            "content_html": "<blockquote>\n  lua虽然没有面向对象的概念，但我们实现面向对象并不困难\n</blockquote>\n<p>一下内容我参考了多处 lua 教程，很多教程讲解模糊晦涩，我整理了以下以简明的说明方式完成 lua 面向对象这部分的内容，希望大家喜欢。</p>\n<h3>面向对象OOP</h3>\n<p>学习过 Java，C#，Ruby 等的同学可能不会对面向对象陌生，如果你是第一次接触面向对象？<br>\n那么我总结一下就是:<code>将事物抽象成类，将特征抽象为字段和属性。</code><br>\n在 Lua 中，最强大的就是 table 这种数据结构了，来看下面这个例子：</p>\n<pre><code class=\"line-numbers\">Cat=&#123;name=\"defalut\",color=\"白色\"&#125;\nfunction Cat.say()\n    print(Cat.name..'  '..Cat.color..':','喵喵喵~')\nend\nCat.name='小白'\nCat.say()\n</code></pre>\n<p>运行结果为:<code>小白  白色：喵喵喵～</code></p>\n<p>在例子中，我们创建了一张表，并在表中提供 2 个字段和一个函数，并通过表名。字段名调用字段和方法，这像不像 一个<code>静态类</code>呢？<br>\n以下是 Csharp 的一个类似的静态类：</p>\n<pre><code class=\"language-csharp line-numbers\">class Program\n&#123;\n    static void Main(string[] args)\n    &#123;\n        Cat.name = \"小白\";\n        Cat.color = \"白色\";\n        Cat.Show();\n    &#125;\n&#125;\n\nstatic class Cat\n&#123;\n    public static string name;\n    public static string color;\n\n    public static void Show()\n    &#123;\n        System.Console.WriteLine(\"&#123;0&#125;  &#123;1&#125;   喵喵喵~\", name, color);\n    &#125;\n&#125;\n</code></pre>\n<p>分析一下：之所以是静态类是因为我们只在创建表的时候创建了一个对象，后面无论我们进行操作我们都没有创建一个新对象！</p>\n<h3>创建对象</h3>\n<pre><code class=\"line-numbers\">function Cat:new()\n    local o=&#123;&#125;\n    setmetatable(o,self)\n    self.__index=self\n    return o\nend\n\nfunction Cat:say()\n    print(self.name..'  '..self.color..':','喵喵喵~')\nend\n\nlocal ca=Cat:new()\nca:say()\n</code></pre>\n<p>在上面的例子中，我们首先添加了一个 Cat：new 的函数，这类似于我们 Csharp 中的构造函数，<br>\n在构造函数中，我们主要做以下几件事：</p>\n<ul>\n<li>创建空表对象</li>\n<li>设置空表的元表</li>\n<li>设置_index</li>\n<li>返回空表对象</li>\n</ul>\n<p>在每次创建对象时，我们都通过:new 函数来创建。<br>\n在这里我们使用到了：<code>setmetatable(o,self)</code>这句话的意思是设置 o 的元表为自己（也就是 Cat 对象），<code>self.__index=self</code>是设置元方法索引为 Cat 对象，这 2 句话总体就是让对象 o 具有 Cat 对象的属性和函数。<br>\n当然元表，元方法的作用还有很多，也远比这要复杂，感兴趣可以自己去了解～</p>\n<h3>继承和多态</h3>\n<p>让我们来看这个例子：</p>\n<pre><code class=\"line-numbers\">-- 基础类\nHuman=&#123;name='defaultName',age=0&#125;\nfunction Human:new()\n    local o=&#123;&#125;\n    self.__index=self\n    setmetatable(o,self)\n    return o\nend\n\nfunction Human:show()\n    print('Base:','Name:',self.name,'Age:',self.age)\nend\n\nlocal myhum=Human:new()\nmyhum.name=\"小蓝\"\nmyhum.age=20\nmyhum:show()\n\n-- 派生类\nChinese=Human:new()\nfunction Chinese:new()\n    local o=&#123;&#125;\n    setmetatable(o,self)\n    self.__index=self\n    return o\nend\nfunction Chinese:show()\n    print('Chinese:','Name:',self.name,'Age:',self.age)\nend\n\nlocal ch=Chinese:new()\nch.name=\"小红\"\nch.age=15\nch:show()\n\nmyhum:show()\n\nch:show()\n\nlocal ch2=Chinese:new()\n\nch2:show()\n\n\nEnglish=Human:new()\n\nfunction English:show()\n    print('English:','Name:',self.name,'Age:',self.age)\nend\n\nlocal eg=English:new()\neg.name=\"Fasty\";eg.age=22\neg:show()\n</code></pre>\n<p>!{运行结果}(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDIvMDcvMk5FUE9TQ0RYdHVaWUx5LnBuZw==\">https://i.loli.net/2020/02/07/2NEPOSCDXtuZYLy.png</span>)</p>\n<p>在 lua 中基于弱类型的优势，对于函数重写，只需要重新定义一遍函数即可。</p>\n<p>至此面向对象的封装，继承，多态都实现咯～</p>\n<p>[toc]</p>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/06/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AB%EF%BC%89%E4%B8%87%E7%94%A8table%E6%9E%84%E5%BB%BA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",
            "url": "https://www.fasty97.top/2020/02/06/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AB%EF%BC%89%E4%B8%87%E7%94%A8table%E6%9E%84%E5%BB%BA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",
            "title": "Lua-基础（八）万用table构建数据结构",
            "date_published": "2020-02-06T11:55:55.000Z",
            "content_html": "<p>平时我们在其他语言中，经常会用到如数组，矩阵，队列和栈等一些数据结构，而 lua 似乎并没有这些数据类型，lua 只提供了 table 类型，但是通过 table 类型我们几乎可以实现所有常用的数据类型。</p>\n<h3>数组</h3>\n<p>数组的实现非常简单，table 的数据类型类似与 C# 中的字典，存储 kv 对，我们只取 value 即可。</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> arr<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3>矩阵</h3>\n<p>矩阵也被称为多维数组，我们只需要嵌套一个 table 即可。</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> mt<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        mt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3>链表</h3>\n<p>对于像链表这样的数据结构，我们可以方便的通过一个指针域实现。</p>\n<pre><code class=\"language-lua line-numbers\">-- 链表\nlocal l=nil\nlocal l2=&#123;next=nil,value=10&#125;\nl=&#123;next=l2,value=200&#125;\n\nwhile l do\n    print(l.value)\n    l=l.next\nend\n</code></pre>\n<h3>队列和栈</h3>\n<p>下面以队列为例，栈也是类似的构造：</p>\n<pre><code class=\"language-lua line-numbers\">-- 队列和栈\nQueue=&#123;&#125;\nfunction Queue.new()\n    return&#123;first=0,last=-1&#125;\nend\nfunction Queue.push(queue,value)\n    local first=queue.first-1\n    queue.first=first\n    queue[first]=value\nend\n\nfunction Queue.pop(queue)\n    local last=queue.last\n    if queue.last>last then\n        error(\"queue 为空\")\n    end\n    local value=queue[last]\n    queue[last]=nil\n    queue.last=last-1\n    return value\nend\n\nlocal qq=Queue.new()\nQueue.push(qq,5)\nQueue.push(qq,8)\n</code></pre>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/05/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%83%EF%BC%89%E7%A8%8B%E5%BA%8F%E5%8D%8F%E5%90%8C/",
            "url": "https://www.fasty97.top/2020/02/05/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%83%EF%BC%89%E7%A8%8B%E5%BA%8F%E5%8D%8F%E5%90%8C/",
            "title": "Lua-基础（七）程序协同",
            "date_published": "2020-02-05T12:06:51.000Z",
            "content_html": "<blockquote>\n  使用协同程序可以更加高效的处理数据或执行任务\n</blockquote>\n<h3>协同的基础</h3>\n<h4>创建协同程序</h4>\n<img data-src=\"https://i.loli.net/2020/02/05/QFZCUHvoqLlxs8W.png\" alt=\"image.png\" />\n<pre><code class=\"language-lua line-numbers\">local co=coroutine.create(function ()\n    print('Hi')\nend)\n</code></pre>\n<h4>协程的状态</h4>\n<img data-src=\"https://i.loli.net/2020/02/05/jgQadC17IR5UKzs.png\" alt=\"image.png\" />\n协同有三个状态：<code>挂起态</code>、<code>运行态</code>、<code>停止态</code>。当我们创建一个协同程序时他开始的状态为挂起态，也就是说我们创建协同程序的时候不会自动运行，可以使用 status 函数检查协同的状态：\n<pre><code class=\"language-lua line-numbers\">print(coroutine.status(co))\n</code></pre>\n<h4>启动协程</h4>\n<p>使用<code>coroutine.resume()</code>可以启动协程<br>\n<img data-src=\"https://i.loli.net/2020/02/05/hfGsy8jZpeYXJK7.png\" alt=\"image.png\" /><br>\n例如：<br>\n<code>coroutine.resume(co)</code><br>\n启动协程后，会立即执行协程方法中的内容。</p>\n<h4>挂起协程</h4>\n<p>如有需要<code>coroutine.yield()</code>可以挂起协程。<br>\n让我们来看下面这个例子，创建一个协程，在协程函数中构建一个循环，并在打印后挂起当前协程，我们不断的去调用协程。</p>\n<pre><code class=\"line-numbers\">local th=coroutine.create(function ()\n    for i = 1, 3 do\n        print(\"th=\",i)\n        coroutine.yield()\n    end\nend)\ncoroutine.resume(th)\ncoroutine.resume(th)\ncoroutine.resume(th)\ncoroutine.resume(th)\nprint(coroutine.resume(th)) -- 程序结束返回false\n</code></pre>\n<p>其运行结果如下图所示:<br>\n<img data-src=\"https://i.loli.net/2020/02/05/nbsoW7vOMuGApD4.png\" alt=\"image.png\" /><br>\n我们发现，<strong>在协程死亡时，coroutine.resume 就返回 false，并返回错误消息</strong>。</p>\n<p><strong>Ps</strong>:resume 运行在保护模式下，因此如果协同内部存在错误 Lua 并不会抛出错误而是将错误返回给 resume 函数.</p>\n<h4>在resume和yield间交换数据</h4>\n<p>有没有办法在协程挂起时，返回一些数据呢？或在每次启动协程时，发送一些数据？<br>\n在 lua 中我们可以在 resume 和 yield 间交换数据。</p>\n<p>传递参数：</p>\n<pre><code class=\"line-numbers\">-- 传递参数\nlocal th2=coroutine.create(function (a,b,c)\n    print(\"th2\",a,b,c)\nend)\n\ncoroutine.resume(th2,1,2,3)\n</code></pre>\n<p>当然我们也可以传递协程结果：</p>\n<pre><code class=\"line-numbers\">local th3=coroutine.create(function ()\n    return 6,7\nend)\nprint(coroutine.resume(th3))\n</code></pre>\n<p><strong>Ps</strong>:<br>\nLua 提供的这种协同我们称为不对称的协同，就是说挂起一个正在执行的协同的函数与使一个被挂起的协同再次执行的函数是不同的，有些语言提供对称的协同，这种情况下，由执行到挂起之间状态转换的函数是相同的。</p>\n<h3>管道和过滤器</h3>\n<p>这个课题有点难，啃书中。。。<br>\n待更新</p>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/04/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AD%EF%BC%89%E5%8A%A0%E8%BD%BD%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96Lua%E7%9A%84%E5%87%BD%E6%95%B0/",
            "url": "https://www.fasty97.top/2020/02/04/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AD%EF%BC%89%E5%8A%A0%E8%BD%BD%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96Lua%E7%9A%84%E5%87%BD%E6%95%B0/",
            "title": "Lua-基础（六）加载使用其他Lua的函数",
            "date_published": "2020-02-04T13:08:52.000Z",
            "content_html": "<blockquote>\n  lua的特点之一就是方便的调用chunk（代码块）\n</blockquote>\n<p>通过这种特性，我们可以在 a.lua 中调用 b.lua 的内容，甚至可以从字符串文本中调用 lua 当做函数执行～</p>\n<h3>load</h3>\n<p>让我们先来看一下 load 函数的定义：<br>\n!{load 函数}(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDIvMDQvRFlHVjJDU1dvUGNMNDl2LnBuZw==\">https://i.loli.net/2020/02/04/DYGV2CSWoPcL49v.png</span>)<br>\n 通过定义我们可以知道 load 函数可以加载文本和二进制类型代码块，来让我们尝试一下：</p>\n<pre><code class=\"line-numbers\">local f=load('I=I+1')\nI=0\nf()\nprint('I='..I)\nf()\nprint('I2='..I)\n</code></pre>\n<p>在这个例子中，我们使用 load 加载了<code>’I=I+1’</code>这一串字符串，并把加载结果存储在 f 中。通过使用<code>f()</code>来调用函数。</p>\n<h3>loadFile</h3>\n<p><img data-src=\"https://i.loli.net/2020/02/04/vNUObGS7D4EczrV.png\" alt=\"loadFile\"><br>\n 和 load 类似的还有 loadfile，但 loadfile 加载的是文件而非字符串。</p>\n<p>我们在 funTest.lua 文件中写一句输出：<code>print(‘Test’)</code><br>\n然后在其他文件中调用：</p>\n<pre><code class=\"line-numbers\">local fun=loadfile('funTest.lua',\"t\")\nfun()\n</code></pre>\n<p>通过这种形式我们就可以吧 funTest.lua 的内容当做一个函数来使用，以上使用后会输出 Test。</p>\n<h3>dofile</h3>\n<p><img data-src=\"https://i.loli.net/2020/02/04/PxjaiqrlKJ6S41e.png\" alt=\"dofile\"><br>\ndofile 与 loadfile 最大的不同就是，loadfile 只是加载函数，需要我们手动去调用，而 dofile 不但加载函数而且直接调用。</p>\n<pre><code class=\"line-numbers\">dofile('funTest.lua')\n</code></pre>\n<h3>require</h3>\n<p>require 是包含的意思，与 load 系列不同的是，require 会检查被加载的文件是否已经被加载过，防止重复加载。<br>\n另外使用 require 加载可以单独调用加载的文件中的函数，而不是把文件内容当做一个函数来使用，所以 require 加载时比较理想的加载形式。</p>\n<h4>使用表加载</h4>\n<p>在 funTest.lua 文件中:</p>\n<pre><code class=\"line-numbers\">local _M = &#123;&#125;\nfunction _M.test()\n    print('hi')\nend\nfunction _M.Hi()\n    print('hi100')\nend\nfunction _M.Say(arg)\n    print('hi:'..tostring(arg))\nend\nreturn _M\n\n</code></pre>\n<p>在其他文件中调用：</p>\n<pre><code class=\"line-numbers\">-- 调用其他文件的函数\nlocal test = require('funTest')\nif not test then\n    print('错误')\n    return\nend\ntest.Hi()\ntest.test()\ntest.Say(51)\n</code></pre>\n<h4>非表加载</h4>\n<p>在 funTest.lua 中：</p>\n<pre><code class=\"line-numbers\">function Ac(j)\n    print('100:'..j)\nend\n</code></pre>\n<p>在其他文件中：</p>\n<pre><code class=\"line-numbers\">require(\"funTest\")\nAc('你好')\n</code></pre>\n<h4>说明</h4>\n<p>使用表加载和非表加载都可以实现效果，使用表加载时，有点面向对象的感觉可能更方便。</p>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/04/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%94%EF%BC%89.%E5%92%8C%EF%BC%9A%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/",
            "url": "https://www.fasty97.top/2020/02/04/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%94%EF%BC%89.%E5%92%8C%EF%BC%9A%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/",
            "title": "Lua-基础（五）.和：的区别和联系",
            "date_published": "2020-02-04T05:23:18.000Z",
            "content_html": "<p>在前面我们学习函数时，我们说过函数其实是值，我们可以将函数放在表中。<br>\n那么我们是不是可以这么做：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> fasty<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> fasty<span class=\"token punctuation\">.</span><span class=\"token function\">Say</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Say:'</span><span class=\"token operator\">..</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> fasty<span class=\"token punctuation\">:</span><span class=\"token function\">Say2</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Say:\"</span><span class=\"token operator\">..</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>在这里，我们创建了一个表 fasty, 表中默认有 a 一个元素。然后我们给表创建了两个函数 say 和 say2，这 2 个函数的作用都是将给与的参数输出。</p>\n<h3>调用不同</h3>\n<p>在我们调用这 2 个方法时，我们应该明确：</p>\n<ul>\n<li>使用<code>.</code>声明的方法使用<code>.</code>调用，使用<code>:</code>声明的方法使用<code>：</code>调用</li>\n<li>假如我们要使用。调用：声明的方法，那我们需要传递一个 this 指针给函数</li>\n<li>也就是说：其实是自动传递一个 this 指针给函数。</li>\n</ul>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fasty<span class=\"token punctuation\">.</span><span class=\"token function\">Say</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fasty<span class=\"token punctuation\">:</span><span class=\"token function\">Say2</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>fasty<span class=\"token punctuation\">.</span><span class=\"token function\">Say2</span><span class=\"token punctuation\">(</span>fasty<span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>​```lua</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span>Ps<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span>：也就是说一下函数是等效的：</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>​```lua</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">function</span> fasty<span class=\"token punctuation\">.</span><span class=\"token function\">Say3</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"say:\"</span><span class=\"token operator\">..</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">function</span> fasty<span class=\"token punctuation\">:</span><span class=\"token function\">Say4</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"say:\"</span><span class=\"token operator\">..</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3>self指针</h3>\n<p>既然，：的形式是自动传递一个 self 指针给函数，那么就意味着我们可以方便的访问表的元素咯～</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> fasty<span class=\"token punctuation\">:</span><span class=\"token function\">Say2</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Say:\"</span><span class=\"token operator\">..</span>arg<span class=\"token operator\">..</span><span class=\"token string\">\"\\ta=\"</span><span class=\"token operator\">..</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fasty<span class=\"token punctuation\">:</span><span class=\"token function\">Say2</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://i.loli.net/2020/02/04/7pvlgWErTAbiSDZ.png\" alt=\"\"></p>\n<h3>总结</h3>\n<ul>\n<li>使用：声明函数时，函数会将第一个参数默认传递self指针。</li>\n<li>如果使用.调用：声明的函数时，需要第一个参数传递self。：调用则不需要</li>\n</ul>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/03/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E5%9B%9B%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8/",
            "url": "https://www.fasty97.top/2020/02/03/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E5%9B%9B%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8/",
            "title": "Lua-基础（四）迭代器",
            "date_published": "2020-02-03T14:26:11.000Z",
            "content_html": "<blockquote>\n  迭代器是一种支持指针类型的结构，它可以遍历集合的每一个元素。在 Lua 中我们\n  常常使用函数来描述迭代器，每次调用该函数就返回集合的下一个元素。常常使用函数来描述迭代器，每次调用该函数就返回集合的<font color=green>下一个元素</font>。\n</blockquote>\n<h3>闭包和迭代器</h3>\n<ul>\n<li>迭代器需要保留<font color=blue>上一次</font>成功调用的状态</li>\n<li>迭代器需要保留<font color=blue>下一次</font>成功调用的状态</li>\n</ul>\n<p>我们知道闭包可以保留每次调用的状态。并且可以方便的访问局部变量；所以我们也可以使用闭包来构建迭代器。<br>\n还记得我们在做 for 循环遍历表时的 pairs (t) 的迭代器吗？我们尝试自己来写一个迭代器：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 迭代器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">list_iter</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">local</span> n<span class=\"token operator\">=</span><span class=\"token operator\">#</span>t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> i<span class=\"token operator\">&lt;=</span>n <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">local</span> t<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">-- 创建表</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">local</span> iter <span class=\"token operator\">=</span> <span class=\"token function\">list_iter</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 创建迭代器变量实例</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">local</span> element<span class=\"token operator\">=</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 使用迭代器</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> element<span class=\"token operator\">==</span><span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'数据为:'</span><span class=\"token operator\">..</span>element<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p><strong>Ps</strong>：如果要创建一个闭包必须要创建其外部局部变量。所以一个典型的闭包的结构包含两个函数：一个是闭包自己；另一个是工厂（创建闭包的函数）。<br>\n当然我们可以将这个迭代器应用于 for 循环中：</p>\n<pre><code class=\"line-numbers\">for value in list_iter(t) do\n    print(value)\nend\n</code></pre>\n<h4>迭代器小例子-访问文件</h4>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 打开文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> file <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hh.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">-- 指定文件操作为读取</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">nil</span><span class=\"token operator\">==</span>file <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'文件打开失败'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">local</span> line<span class=\"token operator\">=</span>file<span class=\"token punctuation\">:</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*l'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 以行的形式进行读取</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">nil</span><span class=\"token operator\">==</span>line <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> line</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> <span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">-- 使用 while 的话</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">local</span> readfile<span class=\"token operator\">=</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">local</span> line<span class=\"token operator\">=</span><span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> line<span class=\"token operator\">==</span><span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3>深入了解for循环</h3>\n<p>在上面的闭包迭代器中我们不难发现，如果使用 for 循环则可以免去 while 循环所需的迭代闭包变量，<br>\n这样使用起来就比 while 循环要方便一些。那 for 循环是怎么做到的呢？<br>\n让我们来看看 for 循环的格式：<br>\n<code>for var_1, …, var_n in explist do block end</code><br>\n在 for 循环我们可以使用多个参数，如之前我们使用的系统自带的表迭代器，我们可以获得 k 和 v 的值。<br>\n在<code>in</code>关键字后接需要被迭代的数据源列表（也就是说可以迭代多个列表），然后在<code>do</code>后对遍历项进行处理。<br>\n<strong>Ps</strong>：其实在 lua 中，for 的执行顺序是这样的：</p>\n<ol>\n<li>首先，初始化，计算 in 后面表达式的值，表达式应该返回范性 for 需要的三个值：迭代函数，状态常量和控制变量；与多值赋值一样，如果表达式返回的结果个数不足三个会自动用 nil 补足，多出部分会被忽略。</li>\n<li>第二，将状态常量和控制变量作为参数调用迭代函数（注意：对于 for 结构来说，状态常量没有用处，仅仅在初始化时获取他的值并传递给迭代函数）。</li>\n<li>第三，将迭代函数返回的值赋给变量列表。</li>\n<li>第四，如果返回的第一个值为 nil 循环结束，否则执行循环体。</li>\n<li>第五，回到第二步再次调用迭代函数</li>\n</ol>\n<p><font color=red>从某种意义上来说，for 循环还是依赖于 while 循环做的优化</font>。<br>\n其等价为：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">local</span> _f<span class=\"token punctuation\">,</span> _s<span class=\"token punctuation\">,</span> _var <span class=\"token operator\">=</span> explist</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">local</span> var_1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">,</span> var_n <span class=\"token operator\">=</span> <span class=\"token function\">_f</span><span class=\"token punctuation\">(</span>_s<span class=\"token punctuation\">,</span> _var<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>_var <span class=\"token operator\">=</span> var_1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> _var <span class=\"token operator\">==</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span> <span class=\"token keyword\">break</span> <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>block</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3>无状态迭代器</h3>\n<blockquote>\n  上面我们依据闭包的思想实现的迭代器其核心思想就是保留状态，那有没有一种方式<font color=red>无需保留状态</font>构建迭代器呢？\n</blockquote>\n<p>让我们回想一下，系统自带的<code>pairs(t)</code>迭代器有使用到闭包吗？答案是：没有<br>\n所以<code>pairs(t)</code>迭代器就是一种无状态迭代器～<br>\n 我们尝试着实现一个 pairs 的效果，其代码如下：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">iter</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> v<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> v <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">,</span>v</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">ipairs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> iter<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">local</span> tt<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token function\">ipairs</span><span class=\"token punctuation\">(</span>tt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>我们每次调用 ipairs 时，都自动去调用 iter，并且在调用时保留 iter 迭代函数，a 迭代数据，0 迭代索引。（很神奇吧，这种写法估计只有 lua 的作者才能想到，简直天才～）<br>\n<strong>Ps</strong>：同理，lua 中 ipairs 也是这样调用其他函数的（调用 next 函数）</p>\n<h3>多状态控制器</h3>\n<p>很多情况下，迭代器需要保存多个状态信息而不是简单的状态常量和控制变量，最<br>\n简单的方法是使用闭包，还有一种方法就是将所有的状态信息封装到 table 内，将 table<br>\n 作为迭代器的状态常量，因为这种情况下可以将所有的信息存放在 table 内，所以迭代函<br>\n数通常不需要第二个参数。</p>\n<p>[toc]</p>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/01/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89%E5%87%BD%E6%95%B0/",
            "url": "https://www.fasty97.top/2020/02/01/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89%E5%87%BD%E6%95%B0/",
            "title": "Lua-基础（三）函数",
            "date_published": "2020-02-01T12:49:38.000Z",
            "content_html": "<blockquote>\n  函数可以完成2件事，<code>完成工作</code>或者<code>计算并返回结果</code>。\n</blockquote>\n<h3>函数语法</h3>\n<pre><code class=\"line-numbers\">function func_name (arguments-list)\nstatements-list\nend\n</code></pre>\n<p><strong>Ps</strong>：Lua 使用的函数可以是 Lua 编写也可以是其他语言编写，对于 Lua 程序员来说用什<br>\n么语言实现的函数使用起来都一样。</p>\n<pre><code class=\"line-numbers\">function Show(a)\n    print(a)\nend\nShow(100)\n</code></pre>\n<h4>返回多个值</h4>\n<p>在 lua 中函数可以返回多个值，例如 string.find，其返回匹配串 “开始和结束的下标”<br>\n（如果不存在匹配串返回 nil）。</p>\n<pre><code class=\"line-numbers\">s, e = string.find(\"hello Lua users\", \"Lua\")\nprint(s, e)  --> 7 9\n</code></pre>\n<p>计算最大值和最大值的索引</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">MaxM</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">local</span> maxIndex<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">local</span> max<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>maxIndex<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> value<span class=\"token operator\">></span>max <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            maxIndex<span class=\"token operator\">=</span>key</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            max<span class=\"token operator\">=</span>value</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> max<span class=\"token punctuation\">,</span>maxIndex</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">local</span> max<span class=\"token punctuation\">,</span>maxIndex<span class=\"token operator\">=</span><span class=\"token function\">MaxM</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'最大值和索引为:'</span><span class=\"token operator\">..</span>max<span class=\"token operator\">..</span><span class=\"token string\">'  '</span><span class=\"token operator\">..</span>maxIndex<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4>返回函数</h4>\n<p>如<code>return fac()</code>这样的形式就是返回函数，其意义是执行 fac 函数并返回 fac 的返回值，若没有返回 nil。</p>\n<h4>可变参数</h4>\n<h5>unpack</h5>\n<p><code>unpack</code>，接受一个数组作为输入参数，返回数组的所有元素。</p>\n<pre><code class=\"line-numbers\">f = string.find\na = &#123;\"hello\", \"ll\"&#125;\nprint(f(unpack(a))) --> 3 4\n</code></pre>\n<h5>...可变参数</h5>\n<p>可以使用… 表示不明确数量的可变参数，在使用时在函数中以表的形式获取。</p>\n<pre><code class=\"line-numbers\">function Sum(a,b,c,...)\n    local arg=&#123;...&#125; --将可变参数存储到arg表中\n    for key, value in pairs(arg) do\n        print(value) -- 9 7 4 10\n    end\nend\n\nSum(5,4,8,9,7,4,10)\n</code></pre>\n<h4>使用命名参数</h4>\n<p>由于 lua 使用弱类型的缘故，我们可以像这样使用命名参数，在这种情况下调用函数可以写为<code>函数名 &#123;参数&#125;</code>的形式。</p>\n<pre><code class=\"line-numbers\">function Show(arg)\n    print(arg.name..'  '..arg.title)\nend\n\nShow&#123;name='小屋',title='学习lua'&#125;\n</code></pre>\n<h3>深入理解函数</h3>\n<p>Lua 中的函数是带有词法定界（lexical scoping）的第一类值（first-class values）。<br>\n<font color=blue>第一类值</font>指：在 Lua 中函数和其他值（数值、字符串）一样，函数可以被存放在变量中，也可以存放在表中，可以作为函数的参数，还可以作为函数的返回值。</p>\n<p><font color=blue>词法定界</font>指：被嵌套的函数可以访问他外部函数中的变量。这一特性给 Lua 提供了强大的编程能力。</p>\n<h4>匿名函数</h4>\n<p>得益于上面的第一条规则，其实我们声明函数，本是 <code>fac=function(arg) body end</code>。<br>\n这个语句创建了一个匿名函数，并把这个函数赋值为 fac，我们就可以称这个函数为 fac 了。<br>\n在<strong><code>table.sort()</code></strong>函数中使用匿名函数：</p>\n<p>在函数中接收 2 个参数，第一个参数接收一个表，第二个参数接收一个<strong>比较函数</strong>。</p>\n<pre><code class=\"line-numbers\">arr=&#123;\n    &#123;name='A',age=16&#125;,\n    &#123;name='B',age=20&#125;,\n    &#123;name='C',age=9&#125;,\n&#125;\ntable.sort(arr,function (a,b)\n    return a.age>b.age\nend)\n\nfor key, value in pairs(arr) do\n    for k, v in pairs(value) do\n        print(k,v)\n    end\nend\n</code></pre>\n<p>以其他函数作为参数的函数在 Lua 中被称作高级函数，高级函数在 Lua 中并没有特<br>\n权，只是 Lua 把函数当作第一类函数处理的一个简单的结果。</p>\n<h4>闭包</h4>\n<p>当一个函数内容嵌套另一个函数时，被嵌套的匿名函数还可以访问第一函数中的参数，这就被称为闭包；事实上仅有很少的语言支持这样的特性。<br>\n来看看下面这个例子：</p>\n<pre><code class=\"line-numbers\">function NewCount()\n    local i=0\n    return function ()\n        i=i+1\n        return i\n    end\nend\n</code></pre>\n<p>在匿名函数中，我们依然可以直接正确的访问 i。</p>\n<hr />\n<p>现在，假如我们这样调用这个函数结果是怎样呢？</p>\n<pre><code class=\"line-numbers\">local c1=NewCount()\nlocal c2=NewCount()\nprint(c1())\nprint(c1())\nprint(c2())\nprint(c1())\n</code></pre>\n<p>!{函数闭包}(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDIvMDIvcjJmdHBHUGpzVmxtcXlnLnBuZw==\">https://i.loli.net/2020/02/02/r2ftpGPjsVlmqyg.png</span>)<br>\n 可以发现，函数的结果并非我们的预期，在第一函数体中的 i 的值可以被保留下来，而且 c1 和 c2 的保存值并不相同，这就是闭包。<br>\n<strong>Ps</strong>：我们把这个 i 称为<font color=gree>外部的局部变量或者 <strong>upvalue</strong></font>。<br>\n简单的说闭包是一个函数加上它可以正确访问的 upvalues。如果我们再次调用 newCounter，将创建一个新的局部变量 i，因此我们得到了一个作用在新的变量 i 上的新闭包。</p>\n<p><strong>分析</strong>：c1 和 c2 是作用同一个局部变量上的不同实例上的两个闭包。</p>\n<h4>使用闭包重写函数</h4>\n<p>闭包在完全不同的上下文中也是很有用途的。因为函数被存储在普通的变量内我们<br>\n可以很方便的重定义或者预定义函数。通常当你需要原始函数有一个新的实现时可以重<br>\n定义函数。例如你可以重定义 sin 使其接受一个度数而不是弧度作为参数：</p>\n<pre><code class=\"line-numbers\">local oldSin=math.sin\nmath.sin=function (x)\n    return oldSin(x*math.pi/180)\nend\n</code></pre>\n<p>通过这个特性我们可以对原函数进行修改，在某些时刻可以构建运行危险代码的沙盘。</p>\n<h4>局部函数</h4>\n<p>Lua 中函数既可以作为全局变量也可以作为局部变量，函数作为 table 的域。<br>\n<strong>使用表声明函数</strong>：</p>\n<pre><code class=\"line-numbers\">Lib=&#123;&#125;\nLib.foo=function (x,y)\n    return x+y\nend\nLib.goo=function (x,y)\n    return x-y\nend\n\nLib=&#123;\n    foo=function (x,y)\n        return x+y\n    end,\n    goo=function (x,y)\n        return x-y\n    end\n&#125;\n\nLib=&#123;&#125;\nfunction Lib.foo(x,y)\n    return x+y\nend\nfunction Lib.goo(x,y)\n    return x-y\nend\n\n</code></pre>\n<p><strong>Ps</strong>：在使用递归函数时，要注意要先声明函数在调用。</p>\n<h4>尾调用</h4>\n<p>尾调用是一种类似在函数结尾的 goto 调用，当函数最后一个动作是调用另外一个函<br>\n数时，我们称这种调用尾调用。<br>\n<strong>Ps</strong>:Lua 中尾调用不消耗栈空间，由于尾调用不需要使用栈空间，那么尾调用递归的层次可以无限制的</p>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/01/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89%E8%A1%A8&%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/",
            "url": "https://www.fasty97.top/2020/02/01/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89%E8%A1%A8&%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/",
            "title": "Lua-基础（二）表&流程控制",
            "date_published": "2020-02-01T11:31:38.000Z",
            "content_html": "<h3>构建表</h3>\n<p>构造器是创建和初始化表的表达式。表是 Lua 特有的功能强大的东西。最简单的构<br>\n造函数是 {}，用来创建一个空表。可以直接初始化数组:<br>\n<strong><font color=red>表的序号从 1 开始，并非 0</font>。</strong><br>\n<strong>Ps</strong>：假如空引用，lua 也不会报错，会输出 nil。</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> numbers<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers数据:\"</span><span class=\"token operator\">..</span><span class=\"token function\">tostring</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- 输出 1</span></pre></td></tr></table></figure><h4>构建自定义对象</h4>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> arr<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'xiao'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>arr<span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arr的数据：'</span><span class=\"token operator\">..</span><span class=\"token string\">'  name:'</span><span class=\"token operator\">..</span>arr<span class=\"token punctuation\">.</span>name<span class=\"token operator\">..</span><span class=\"token string\">'   age: '</span><span class=\"token operator\">..</span>arr<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4>表的组成</h4>\n<p>表，可以包含任何类型的元素，也可以嵌套</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>tip<span class=\"token operator\">=</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span>func<span class=\"token operator\">=</span>print<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4>构造注意事项</h4>\n<p>如果真的需要索引从 0 开始：<br>\n<strong>Ps</strong>：极力<font color=red>不推荐</font>这么做，这么做将不能使用很多标准库。</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"Sunday\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Monday\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Tuesday\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在构造表时既可以使用<code>,</code>分隔元素也可以使用<code>；</code>分隔元素。</p>\n<h3>流程控制</h3>\n<p>我们来看看 lua 中的流程控制语法～</p>\n<h4>分支</h4>\n<p>在 lua 中，每一个代码块的结束都要以<strong>end</strong>结尾（有点 c++ 的味道）</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">false</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AAA\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BBB\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">local</span> a<span class=\"token operator\">=</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> a<span class=\"token operator\">></span><span class=\"token number\">8</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a>8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">elseif</span> a<span class=\"token operator\">></span><span class=\"token number\">5</span>  <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a>5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">elseif</span> a<span class=\"token operator\">></span><span class=\"token number\">3</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a>3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不满足'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h4>循环</h4>\n<p>使用步长 for 循环（可省略步长，默认为 1）</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- for 循环</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 1 起点 10 终点 2 步长</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'正向数据为:'</span><span class=\"token operator\">..</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'负向数据为：'</span><span class=\"token operator\">..</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p><strong>Ps</strong>：在循环中不要改变控制变量的值，如果需要跳出循环可以使用<code>break</code>关键字。</p>\n<p>使用 for 循环遍历表：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Sunday\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Monday\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Tuesday\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">..</span><span class=\"token string\">'   '</span><span class=\"token operator\">..</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>while 循环</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> a<span class=\"token operator\">=</span><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> a<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    a<span class=\"token operator\">=</span>a<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure>",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/02/01/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89Say%20Hi/",
            "url": "https://www.fasty97.top/2020/02/01/Lua-%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89Say%20Hi/",
            "title": "Lua-基础（一）Say Hi",
            "date_published": "2020-02-01T06:01:49.000Z",
            "content_html": "<blockquote>\n  本系列将从零开始学习Lua的基本语法，用于之后使用<font color=gree>xLua</font>进行unity<font color=red>热更新</font>~\n</blockquote>\n<h3>使用Vscode开发Lua</h3>\n<p>至少要下载 Lua 和 LuaDebug 这 2 个扩展～<br>\n<img data-src=\"https://i.loli.net/2020/02/01/raxtmuBAnLNIqQO.png\" alt=\"\"><br>\n 看到 LuaDebug 的作者 actboy168，我有点惊讶，actboy168 是大名鼎鼎的 ydwe 作者之一，在以前自己玩 we 的时候用的编辑器就是 actboy168 大佬的，后面听说支持 lua 来代替 jass 编写游戏逻辑（那时候已经弃坑～）；好的，闲话不多说，我们来编写我们的第一个脚本。</p>\n<ul>\n<li>创建一个空文件夹并用vscode打开</li>\n<li>创建一个test.lua文件</li>\n<li>编写一行代码 <code>print(\"Hi,Lua~\")</code>（也可以使用<font color=red>'' 单引号</font>）</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/02/01/w4ds3ZquOteQX8p.png\" alt=\"\"></p>\n<h3>基本使用</h3>\n<h4>数据类型</h4>\n<p>在 lua 中和 python 类型可以直接声明并使用，无需使用类型名，lua 自动分析数据类型。<br>\nlua 的数据类型为（8 个）：</p>\n<ul>\n<li>nil 空</li>\n<li>boolean 布尔型</li>\n<li>number 数字型</li>\n<li>function 函数型</li>\n<li>string 字符串型</li>\n<li>userdata 用户自定义类型</li>\n<li>thread 线程型</li>\n<li>table 表型</li>\n</ul>\n<p>可以使用<code>type()</code>来查看类型～<br>\nPs: 在 lua 中不强制使用；结尾</p>\n<pre><code class=\"line-numbers\">--lua类型\nprint(type(3.4))\nprint(type(\"JK\"))\nprint(type(print))\nprint(type(3>5))\nprint(type(nil))\n</code></pre>\n<h5>Function类型</h5>\n<p>Function 类型有什么用呢？使用 Function 类型可以实现将函数作为函数的参数传递（类似 c++ 中的句柄，C# 中的委托）；有了这一特性，大大加强了代码的灵活性～</p>\n<h5>Userdata类型</h5>\n<p>userdata 类型可以表述用户自己创建的数据结构，也可以表示调用 c 语言函数库创建的新类型。</p>\n<h4>变量类型</h4>\n<p><font color=blue>全局变量</font>：全局变量是在整个程序中都可以使用的，默认声明的就是全局变量。<br>\n<font color=blue>局部变量</font>: 局部变量在全局变量前添加<code>local</code>关键字声明的。</p>\n<pre><code class=\"line-numbers\">local a=100 --局部变量\nb='Fasty' --全局变量\n</code></pre>\n<h4>运算符</h4>\n<p>其他的数学运算符和其他语言是一致的，在这里看一下逻辑运算符<code>and or not</code>。<br>\n在 lua 中认为 false 和 nil 为假，其他为真。（0 也为真，c 语言中认为 0 为假，非 0 为真）<br>\n值得注意的是使用逻辑运算符并非返回逻辑值：</p>\n<pre><code class=\"line-numbers\">local aa = 4 and 5 -- 若a为false则返回a，否则返回b  返回5\naa=nil and 7  --返回nil\n\nlocal bb= 7 or 8 --若a为true则返回a，否则返回b 返回7\naa=nil or 8 --返回8\n</code></pre>\n<p><font color=gree>小技巧:</font>使用 <code>aa= nil or 5</code> 可以判断 aa 是否为 nil，若为则赋值为 5。</p>\n<p>not 则为取反，一直返回布尔值。</p>\n<p>Ps：连接字符串使用<code>…</code>，如<code>A…B</code>。</p>\n",
            "tags": [
                "Lua"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/01/29/NaughtyAttributes%E6%9B%B4%E7%9B%B4%E8%A7%82%E7%9A%84%E7%AE%A1%E7%90%86%E5%B1%9E%E6%80%A7/",
            "url": "https://www.fasty97.top/2020/01/29/NaughtyAttributes%E6%9B%B4%E7%9B%B4%E8%A7%82%E7%9A%84%E7%AE%A1%E7%90%86%E5%B1%9E%E6%80%A7/",
            "title": "NaughtyAttributes更直观的管理属性",
            "date_published": "2020-01-29T07:09:20.000Z",
            "content_html": "<h3>NaughtyAttributes</h3>\n<p>使用 NaughtyAttributes 可以很方便的管理 unity 属性面板的脚本属性，可以实现许多 unity 原先特性不能实现的效果，详情可以看向下面的 github 地址：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Ricml6b3YvTmF1Z2h0eUF0dHJpYnV0ZXM=\">Github 项目地址</span></p>\n<p>想水一期文章，好的，水完了～</p>\n",
            "tags": [
                "好物推荐",
                "unity Tool"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/01/17/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89Poll&Select/",
            "url": "https://www.fasty97.top/2020/01/17/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89Poll&Select/",
            "title": "《Unity3D网络游戏实战》学习记录（四）Poll&Select",
            "date_published": "2020-01-17T06:09:32.000Z",
            "content_html": "<blockquote>\n  试想一下，有没有一种方法可以将<font color=red>异步</font>的程序改为<font color=blue>同步</font>，而又持有异步的效果呢？\n</blockquote>\n<h3>Poll</h3>\n<p><font color=4e72b8>意义：使用同步的方式解决异步问题。</font><br>\n我们分析一下之前的程序逻辑，会发现我们使用 beginxxx 来开启新线程处理新的 socket，但是我们的客户端并不是实时的于服务器进行交互的（只在进行交互时，整个线程才是有效的，平时都处于阻塞等待状态。）<br>\n有这么一种方式：<br>\n<code>if (socket 有可读数据) socket.Receive ()</code><br>\n<code>if (socket 缓冲区可写) socket.Send ()</code><br>\n<code>if (socket 错误) 处理错误</code><br>\n只要在阻塞方法前，加上一层判断，有数据可读才读，有数据可写才写，这样不就解决了程序卡住的问题吗？<br>\nMs 提供了 Poll 方法：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Poll</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> microSeconds；<span class=\"token comment\">// 回应时间（ms） -1 一直等待  0 非阻塞</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    SelectMode mode；<span class=\"token comment\">//SelectRead 是否可读 SelectWrite 是否可写 SelectError 是否发生错误</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4>使用Poll改进客户端和服务器</h4>\n<ul>\n<li><font size=5px color=red>客户端</font>\n对于客户端只需要在update中加一个<code>if(socket.Poll(0,SelectMode.SelectRead)) 执行读取</code>就可以了。</li>\n<li><font size=5px color=green>服务器</font>\n对于服务器，需要在主循环中对所有已连接的客户端进行状态监测，在其客户端可读时（即有数据发送给服务器时）进行读取操作。</li>\n</ul>\n<h3>Select</h3>\n<p><font color=4e72b8>意义：解决 Poll 下 Cpu 占用过高的问题</font></p>\n在前面没有提到cpu占用的事情，这里说一下，使用poll时，我们会在update中持续监听，程序在同一线程中非阻塞式的处理请求，会导致cpu占用过高的问题。\n<h4>Select的解决思路</h4>\n<ol>\n<li>同时检测多个socket的状态</li>\n<li>将需操作的socket放入一个集合中</li>\n<li>如果没有可读写的socket就阻塞挂起</li>\n</ol>\n<p><strong>select 原型</strong></p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Select</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">IList</span> checkRead<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 返回可读 Socket List</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">IList</span> checkWrite<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 可写</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">IList</span> checkError<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 错误</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> microSeconds    <span class=\"token comment\">// 超时时间</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><font color=blue>【2020 年 1 月 17 日 18:40:19 下午】</font><br>\n<strong>继续更新</strong></p>\n<p>使用 Select 时，我们需要定义几个列表，如上面原型所示这些列表应当实现了<font size=4px color=red> IList </font>接口。</p>\n<ol>\n<li>创建可读列表CheckRead</li>\n<li>将所有连接Socket放入CheckRead中</li>\n<li>使用Socket.Select()对checkRead中的可读socket进行筛选</li>\n<li>对筛选后的可读对象进行读取</li>\n</ol>\n<p>通过以上步骤，我们就使用 Select 完成了筛选，非常简单吧！</p>\n<p>从下一章开始按书的进度，我们就使用学习到的 Socket 知识写一个多人大乱斗游戏试试吧 ✌️ ~</p>\n",
            "tags": [
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/01/16/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%E8%81%8A%E5%A4%A9%E5%AE%A4/",
            "url": "https://www.fasty97.top/2020/01/16/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%E8%81%8A%E5%A4%A9%E5%AE%A4/",
            "title": "《Unity3D网络游戏实战》学习记录（三）聊天室",
            "date_published": "2020-01-16T06:59:29.000Z",
            "content_html": "<p>在之前的基础上其实我们只需要将客户端发送给服务器的数据在服务器分发给连接的所有客户端即可实现聊天室的功能。<br>\n不过在这里我对服务器端的代码重新优化了一下。</p>\n<h3>客户端连接实例</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/// 客户端连接实例</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClientEntity</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Socket</span> Socket <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> ReadBuff <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">/// 有效数据长度</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> DataLength <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3>主要代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Socket</span> Socket <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>ClientEntity<span class=\"token punctuation\">></span></span> ClientEntities <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 所有连接的客户端实例</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi，服务器~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            ClientEntities <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>ClientEntity<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 绑定ip</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">IPAddress</span> ipAddress <span class=\"token operator\">=</span> IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">IPEndPoint</span> ipEndPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPEndPoint</span><span class=\"token punctuation\">(</span>ipAddress<span class=\"token punctuation\">,</span> <span class=\"token number\">2233</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Socket</span><span class=\"token punctuation\">(</span>AddressFamily<span class=\"token punctuation\">.</span>InterNetwork<span class=\"token punctuation\">,</span> SocketType<span class=\"token punctuation\">.</span>Stream<span class=\"token punctuation\">,</span> ProtocolType<span class=\"token punctuation\">.</span>Tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            Socket<span class=\"token punctuation\">.</span><span class=\"token function\">Bind</span><span class=\"token punctuation\">(</span>ipEndPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Socket<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 最多支持同时监听 10 个客户端</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[服务器]启动成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 绑定 Accept</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            Socket<span class=\"token punctuation\">.</span><span class=\"token function\">BeginAccept</span><span class=\"token punctuation\">(</span>AcceptCallBack<span class=\"token punctuation\">,</span> Socket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3>AcceptCallBack</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AcceptCallBack</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IAsyncResult</span> ar<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[服务器]有新客户端连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> severSocket <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">.</span>AsyncState <span class=\"token keyword\">as</span> <span class=\"token class-name\">Socket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clientSocket <span class=\"token operator\">=</span> severSocket<span class=\"token punctuation\">.</span><span class=\"token function\">EndAccept</span><span class=\"token punctuation\">(</span>ar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 创建客户端连接</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clientEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ClientEntity</span> <span class=\"token punctuation\">&#123;</span> Socket <span class=\"token operator\">=</span> clientSocket<span class=\"token punctuation\">,</span> ReadBuff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 创建客户端实例</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                ClientEntities<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>clientEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token comment\">// 开始 Receive</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                clientEntity<span class=\"token punctuation\">.</span>Socket<span class=\"token punctuation\">.</span><span class=\"token function\">BeginReceive</span><span class=\"token punctuation\">(</span>clientEntity<span class=\"token punctuation\">.</span>ReadBuff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> clientEntity<span class=\"token punctuation\">.</span>ReadBuff<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> SocketFlags<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span> ReceiveCallBack<span class=\"token punctuation\">,</span> clientEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token comment\">// 继续 Accept</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                Socket<span class=\"token punctuation\">.</span><span class=\"token function\">BeginAccept</span><span class=\"token punctuation\">(</span>AcceptCallBack<span class=\"token punctuation\">,</span> Socket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketException</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[服务器Accept-Error]\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>ErrorCode <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3>ReceiveCallBack</h3>\n<pre><code class=\"language-csharp line-numbers\">  private static void ReceiveCallBack(IAsyncResult ar)\n        &#123;\n            try\n            &#123;\n                var clientEntity = ar.AsyncState as ClientEntity;   //获取传过来的客户端Socket\n                var count = clientEntity.Socket.EndReceive(ar);\n                if (count == 0)\n                &#123;\n                    //关闭客户端连接\n                    clientEntity.Socket.Close();\n                    ClientEntities.Remove(clientEntity);\n                    Console.WriteLine(\"[服务器]一个客户端已断开连接\");\n\n                    return;\n                &#125;\n                var reciveStr = Encoding.UTF8.GetString(clientEntity.ReadBuff, 0, count); //读取客户端数据\n    \n                Console.WriteLine(\"[服务器]收到来自客户端数据：\" + reciveStr);\n\n\n                var sendBytes = Encoding.UTF8.GetBytes(\"[服务器] 已收到来自客户端的消息：\");\n                clientEntity.DataLength = count;\n                //进行数据分发\n                foreach (var item in ClientEntities)\n                &#123;\n                    item.Socket.BeginSend(sendBytes, 0, count, SocketFlags.None, SendCallBack, clientEntity);\n                &#125;\n    \n                //继续获取数据\n                clientEntity.Socket.BeginReceive(clientEntity.ReadBuff, 0, clientEntity.ReadBuff.Length, SocketFlags.None, ReceiveCallBack, clientEntity);\n            &#125;\n            catch (SocketException e)\n            &#123;\n    \n                Console.WriteLine(\"[服务器Receive-Error]\" + e.ErrorCode + \"-\" + e.Message);\n            &#125;\n        &#125;\n</code></pre>\n<h3>SendCallBack</h3>\n<pre><code class=\"language-csharp line-numbers\"> private static void SendCallBack(IAsyncResult ar)\n        &#123;\n            var clientEntity = ar.AsyncState as ClientEntity;\n            Console.WriteLine(\"[服务器]已向客户端发送数据:\" + Encoding.UTF8.GetString(clientEntity.ReadBuff, 0, clientEntity.DataLength));\n        &#125;\n</code></pre>\n<h3>运行截图：</h3>\n<p>!{运行截图}(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDEvMTYvMjQ4RnFOS0dtN2poZ3YxLnBuZw==\">https://i.loli.net/2020/01/16/248FqNKGm7jhgv1.png</span>)</p>\n<p>[toc]</p>\n",
            "tags": []
        },
        {
            "id": "https://www.fasty97.top/2020/01/07/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%E5%A4%9A%E7%BA%BF%E7%A8%8B/",
            "url": "https://www.fasty97.top/2020/01/07/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%E5%A4%9A%E7%BA%BF%E7%A8%8B/",
            "title": "《Unity3D网络游戏实战》学习记录（二）多线程",
            "date_published": "2020-01-07T06:00:35.000Z",
            "content_html": "<p><font color=green>[begin] 在 [/begin]</font>第一章的学习内容中我们已经完成了基本的 Socket 通信，但是在第一章中我们只能处理一个客户端的消息。<br>\n在实际游戏中，我们服务器需要对多个客户端进行监听和处理。</p>\n<h3>Begin XXX</h3>\n<p>每一个同步 API 对应着两个异步 API，分别是在原名称前面加上 Begin 和 End（如 BeginConnect 和 EndConnect）。使用异步程序可以防止程序卡住  。</p>\n<h4>例如：BenginConnect</h4>\n<table>\n<thead>\n<tr>\n  <th>参数</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>host</td>\n  <td>远程主机ip地址</td>\n</tr>\n<tr>\n  <td>port</td>\n  <td>端口号</td>\n</tr>\n<tr>\n  <td>requestCallback</td>\n  <td>异步回调函数，其函数必须包含一个实现 <font color=red><strong>IAsynResult</strong></font>的对象</td>\n</tr>\n<tr>\n  <td>state</td>\n  <td>一个自定义对象，<strong>此对象会被传递给回调函数</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>EndConnect</strong></p>\n<table>\n<thead>\n<tr>\n  <th>参数</th>\n  <th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>asyncResult</td>\n  <td>接收一个异步结果对象</td>\n</tr>\n</tbody>\n</table>\n<p><font color=red>其他的都大致相同</font><br>\n[toc]</p>\n<h3>客户端</h3>\n<p>客户端使用 begin 和 end，修改为：</p>\n<pre><code class=\"language-csharp line-numbers\">using System;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Echo : MonoBehaviour\n&#123;\n    public Button linkBtn;\n    public Button sendBtn;\n    public InputField inputField;\n    public Text infoText;\n    //套接字\n    private Socket _socket;\n    //接收缓冲区\n    private byte[] _readBuff=new byte[1024];\n    private string _recvStr=string.Empty;\n\n\n\n    private void Start()\n    &#123;\n        linkBtn.onClick.AddListener(Connection);\n        sendBtn.onClick.AddListener(SendMessage);\n        //Timer线程计时器\n        var timer = new Timer((state) => &#123; print(\"时间到\"); &#125;,null,5000,0);\n    &#125;\n    \n    private void Update()\n    &#123;\n        infoText.text = \"接收到来自服务器的数据：\"+_recvStr;\n    &#125;\n    \n    /// <summary>\n    /// 连接\n    /// </summary>\n    void Connection()\n    &#123;\n        _socket=new Socket(SocketType.Stream,ProtocolType.Tcp);\n        //异步进行连接\n        _socket.BeginConnect(\"127.0.0.1\", 8888, ConnectCallback, _socket);\n        Debug.Log(\"开始连接...\");\n        // _socket.Connect(\"127.0.0.1\",8888);\n    &#125;\n    /// <summary>\n    /// 连接回调\n    /// </summary>\n    /// <param name=\"ar\"></param>\n    void ConnectCallback(IAsyncResult ar)\n    &#123;\n        try\n        &#123;\n            var socket = ar.AsyncState as Socket;\n            socket?.EndConnect(ar);    //连接完毕\n            Debug.Log(\"连接成功！\");\n            //开始监听服务器端回复\n            socket?.BeginReceive(_readBuff, 0, _readBuff.Length, 0, ReceiveCallback, socket);\n        &#125;\n        catch (SocketException e)\n        &#123;\n            Debug.Log(\"Socket连接错误:\"+e);\n            throw;\n        &#125;\n    &#125;\n\n\n    /// <summary>\n    /// 接收回调\n    /// </summary>\n    /// <param name=\"ar\"></param>\n    void ReceiveCallback(IAsyncResult ar)\n    &#123;\n        //ps：作者在这里提到，假如在send缓冲区的数据量太多，并且删除服务端receive相关的内容，使这些数据不能得到及时的释放，这时候客户端就会卡住。\n        //所以我们也需要对send进行异步处理，防止堵塞。\n        try\n        &#123;\n            var socket = ar.AsyncState as Socket;\n            var count = socket.EndReceive(ar);\n            //注意在unity中，UI对象只能在主线程中更新，由于异步回调是由其他线程更新的，所以我只在这儿对_recvStr进行记录\n            //并在主线程update中对UI对象进行更新。\n            _recvStr = Encoding.UTF8.GetString(_readBuff, 0, count);\n    \n            socket.BeginReceive(_readBuff, 0, _readBuff.Length, 0, ReceiveCallback, socket);\n        &#125;\n        catch (SocketException e)\n        &#123;\n            Debug.Log(\"Socket错误：\"+e);\n        &#125;\n    &#125;\n    \n    /// <summary>\n    /// 发送消息\n    /// </summary>\n    void SendMessage()\n    &#123;\n        var sendStr = inputField.text;\n        var sendBytes = System.Text.Encoding.UTF8.GetBytes(sendStr);\n        // _socket.Send(sendBytes);\n        /*\n         * 值得注意的是，send方法的过程只是将数据写入到缓冲区，由操作系统进行重传和确认。\n         * send成功只表示，数据成功吸入缓冲区，并不代表对方已经收到数据。\n         */\n        _socket.BeginSend(sendBytes, 0, sendBytes.Length, 0, SendCallback, _socket);\n    \n    &#125;\n    \n    /// <summary>\n    /// Send回调\n    /// </summary>\n    /// <param name=\"ar\"></param>\n    void SendCallback(IAsyncResult ar)\n    &#123;\n        try\n        &#123;\n            var socket = ar.AsyncState as Socket;\n            var count = socket?.EndSend(ar);\n            /*\n             * 在这里作者提到，一般来说收发的数据长度应当保持一致，但是当我们的数据大小超过缓冲区的大小时，我们需要再次调用相关的send或reivce方法\n             * 发送或接收剩余的数据。（在后面的章节再介绍）\n             */\n            Debug.Log(\"socket 发送成功 发送字节数：\"+count);\n        &#125;\n        catch (SocketException e)\n        &#123;\n           Debug.Log(\"Socket Send 错误：\"+e);\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h3>服务器</h3>\n<p>在上一章中，我们的服务器使用单线程的阻塞，也就是说每次只能处理一个客户端的请求，现在我们也将服务器改为多线程模式，让他可以同时处理多个线程。（多个客户端请求）<br>\n其代码实现如下：</p>\n<h4>创建一个clientState类存储客户端状态</h4>\n<pre><code class=\"language-csharp line-numbers\">using System.Net.Sockets;\n\nnamespace netWork_Server\n&#123;\n    /// <summary>\n    /// 连接状态\n    /// </summary>\n    public class ClientState\n    &#123;\n        public Socket Socket &#123; get; set; &#125;\n        public byte[] ReadBuff &#123; get; set; &#125;\n\n        public ClientState()\n        &#123;\n            ReadBuff=new byte[1024];\n        &#125;\n    &#125;\n&#125;\n\n</code></pre>\n<h4>主代码</h4>\n<pre><code class=\"language-csharp line-numbers\">using System;\nusing System.Collections.Generic;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\nnamespace netWork_Server\n&#123;\n\n\n    internal class Program\n    &#123;\n        private static Socket socket;\n        static  Dictionary<Socket,ClientState> _clientStates=new Dictionary<Socket, ClientState>();\n    \n        public static void Main(string[] args)\n        &#123;\n\n\n            Console.WriteLine(\"Hi\");\n    \n            socket=new Socket(AddressFamily.InterNetwork,SocketType.Stream,ProtocolType.Tcp);\n            IPAddress ipAddress = IPAddress.Parse(\"127.0.0.1\");\n            IPEndPoint ipEndPoint=new IPEndPoint(ipAddress,8888);\n            socket.Bind(ipEndPoint);\n            //listen\n            socket.Listen(0);\n            Console.WriteLine(\"[服务器] 启动成功\");\n            //Accept\n            //当客户端连接上服务器时，调用AcceptCallback\n            socket.BeginAccept(AcceptCallback,socket);\n            Console.ReadLine();\n        &#125;\n    \n        /// <summary>\n        /// Accept回调\n        /// </summary>\n        /// <param name=\"ar\"></param>\n        private static void AcceptCallback(IAsyncResult ar)\n        &#123;\n            try\n            &#123;\n                Console.WriteLine(\"[服务器] 连接到新客户端\");\n                Socket listenfd=ar.AsyncState as Socket;\n                Socket clientfd = listenfd.EndAccept(ar);\n                ClientState state=new ClientState();\n                state.Socket = clientfd;\n                _clientStates.Add(clientfd,state);\n                //进行Receive\n                clientfd.BeginReceive(state.ReadBuff, 0, 1024, 0,ReceiveCallback, state);\n                //继续Accept\n                listenfd.BeginAccept(AcceptCallback, listenfd);\n            &#125;\n            catch (SocketException e)\n            &#123;\n                Console.WriteLine(\"Socket Accept错误：\"+e);\n                throw;\n            &#125;\n    \n        &#125;\n    \n        /// <summary>\n        /// Receive回调\n        /// </summary>\n        /// <param name=\"ar\"></param>\n        static void ReceiveCallback(IAsyncResult ar)\n        &#123;\n            try\n            &#123;\n                var state = ar.AsyncState as ClientState;\n                var clientfd = state.Socket;\n                int count = clientfd.EndReceive(ar);\n                //关闭客户端\n                if (count==0)\n                &#123;\n                    clientfd.Close();\n                    _clientStates.Remove(clientfd);\n                    Console.WriteLine(\"Socket Close!\");\n                    return;\n                &#125;\n    \n                string recvStr = Encoding.UTF8.GetString(state.ReadBuff,0,count);\n                Console.WriteLine(\"[客户端]\"+recvStr);\n                byte[] sendBytes = Encoding.UTF8.GetBytes(\"echo\" + recvStr);\n    \n                clientfd.Send(sendBytes);\n                //继续获取数据\n                clientfd.BeginReceive(state.ReadBuff, 0, 1024, 0, ReceiveCallback, state);\n    \n            &#125;\n            catch (SocketException e)\n            &#123;\n                Console.WriteLine(\"Socket Receive 错误：\"+e);\n            &#125;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h3>进行会话</h3>\n<p>我们将客户端生成一份，让生成的客户端和编辑器客户端同时与服务器连接并进行会话操作。<br>\n其效果如图所示：<br>\n!{服务器端}(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDEvMTQva1ZyUUlXcGVqWEJSbWFuLnBuZw==\">https://i.loli.net/2020/01/14/kVrQIWpejXBRman.png</span>)<br>\n!{客户端}(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDEvMTQvSmRiYVJMcHQ1azFob2dzLnBuZw==\">https://i.loli.net/2020/01/14/JdbaRLpt5k1hogs.png</span>)</p>\n<h3>结语</h3>\n<p>这是这一章的前半部分，完成了在 socket 下的多线程模式，其中在字符编码部分，原书使用了 Default，这导致可能没法解析中文字符，所以我将其改为了固定的 UTF8 做解析。<br>\n感谢您读完这篇文章，在本章的下半部分将实现一个聊天室。</p>\n",
            "tags": [
                "读书笔记"
            ]
        },
        {
            "id": "https://www.fasty97.top/2020/01/06/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89Echo/",
            "url": "https://www.fasty97.top/2020/01/06/%E3%80%8AUnity3D%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89Echo/",
            "title": "《Unity3D网络游戏实战》学习记录（一）Echo",
            "date_published": "2020-01-06T14:51:34.000Z",
            "content_html": "<h3>序</h3>\n<p>这本书买了蛮久的，趁着寒假的时间拿出来学习一下，争取这个假期把这本书看完，把里面的实例代码都自己敲一遍，加深理解。<br>\n这是一个长期更新的系列：全书共<font color=red>十二章</font>就算是每个章节写一篇文章也至少要写十二篇文章，希望自己可以坚持着书看完，把博客写完。</p>\n<h3>Socket连接步骤</h3>\n<p><strong>示例图</strong></p>\n<pre><code>type=&quot;text/javascript&quot;&gt;document.write(&quot;graph TD;\\n    Client--&gt;|连接服务器|Connect;\\n    Connect--&gt;|发送消息|Send;\\n    Connect--&gt;|三次握手|Accept;\\n    Send--&gt;|接收服务器消息|Receive;\\n    Send--&gt;|向服务器发送数据|ServerReceive;\\n    Receive--&gt;|断开连接|Close;\\n    Close--&gt;|四次挥手|ServerClose;\\n    Server--&gt;|绑定Ip和端口|Bind;\\n    Bind--&gt;|开启监听|Listen;\\n    Listen--&gt;|接收客户端连接请求|Accept;\\n    Accept--&gt;|接收客户端数据|ServerReceive;\\n    ServerReceive--&gt;|给客户端发送数据|ServerSend;\\n    ServerSend--&gt;|发送数据给客户端|Receive;\\n    ServerSend--&gt;|断开连接|ServerClose;\\n&quot;);\n</code></pre>\n<h3>Echo</h3>\n<p>第一章主要讲解了网络的连接方式，在例子中初步实现了一个使用 Socket 的 TCP 通信的客户端和服务端案例。<br>\n客户端代码如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Sockets</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>UI</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Echo</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Button</span> linkBtn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Button</span> sendBtn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">InputField</span> inputField<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Text</span> infoText<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Socket</span> _socket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        linkBtn<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span>Connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        sendBtn<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span><span class=\"token function\">AddListener</span><span class=\"token punctuation\">(</span>SendMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">/// 连接</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Connection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        _socket<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Socket</span><span class=\"token punctuation\">(</span>SocketType<span class=\"token punctuation\">.</span>Stream<span class=\"token punctuation\">,</span>ProtocolType<span class=\"token punctuation\">.</span>Tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        _socket<span class=\"token punctuation\">.</span><span class=\"token function\">Connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">/// 发送消息</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sendStr <span class=\"token operator\">=</span> inputField<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sendBytes <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>sendStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        _socket<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>sendBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">// 接收</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> readBuff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">//Receive 方法接收一个 byte [] 存储接收到的数据，并返回数据的大小，会阻塞线程</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> count <span class=\"token operator\">=</span> _socket<span class=\"token punctuation\">.</span><span class=\"token function\">Receive</span><span class=\"token punctuation\">(</span>readBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> recvStr <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>readBuff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        infoText<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"提示信息：\"</span> <span class=\"token operator\">+</span> recvStr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        _socket<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>服务器端代码如下：</p>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Sockets</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">netWork_Server</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">internal</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">Socket</span> socket<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Socket</span><span class=\"token punctuation\">(</span>AddressFamily<span class=\"token punctuation\">.</span>InterNetwork<span class=\"token punctuation\">,</span>SocketType<span class=\"token punctuation\">.</span>Stream<span class=\"token punctuation\">,</span>ProtocolType<span class=\"token punctuation\">.</span>Tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\">IPAddress</span> ipAddress <span class=\"token operator\">=</span> IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">IPEndPoint</span> ipEndPoint<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IPEndPoint</span><span class=\"token punctuation\">(</span>ipAddress<span class=\"token punctuation\">,</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            socket<span class=\"token punctuation\">.</span><span class=\"token function\">Bind</span><span class=\"token punctuation\">(</span>ipEndPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">//listen</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            socket<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[服务器] 启动成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token comment\">//Accept</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token class-name\">Socket</span> connfd <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span><span class=\"token function\">Accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[服务器] Accept\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token comment\">//Receive</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> readBuff<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> count <span class=\"token operator\">=</span> connfd<span class=\"token punctuation\">.</span><span class=\"token function\">Receive</span><span class=\"token punctuation\">(</span>readBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> readStr <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>readBuff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[服务器接收] \"</span><span class=\"token operator\">+</span>readStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token comment\">//send</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> reStr <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> sendBytes <span class=\"token operator\">=</span> Encoding<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>reStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                connfd<span class=\"token punctuation\">.</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>sendBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这样我们就可以在客户端和服务器之间构建 Socket 连接咯，至此第一章的内容就结束了，第一章并没有讲太多东西，只是简单的介绍了以下 Socket 通信的基本原理和一些 Socket 相关的方法 API，东西虽然不多但是此时此刻我们已经不是一个人了。我们的游戏<font color=blue>联网了</font>！</p>\n",
            "tags": [
                "读书笔记"
            ]
        }
    ]
}